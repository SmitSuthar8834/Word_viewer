{"version":3,"file":"creatio-devkit-common.mjs","sources":["../../../../../libs/devkit/common/src/lib/external/functions/aggregation-adapter.ts","../../../../../libs/devkit/common/src/lib/external/functions/date-part-type-adapter.ts","../../../../../libs/devkit/common/src/lib/external/functions/function-type-adapter.ts","../../../../../libs/devkit/common/src/lib/external/functions/order-direction-adapter.ts","../../../../../libs/devkit/common/src/lib/internal/constants/metadata.const.ts","../../../../../libs/devkit/common/src/lib/internal/enums/view-element-group-type.enum.ts","../../../../../libs/devkit/common/src/lib/internal/enums/designer-group-type.enum.ts","../../../../../libs/devkit/common/src/lib/internal/enums/handler-source-type.enum.ts","../../../../../libs/devkit/common/src/lib/internal/enums/model-in-page-action.enum.ts","../../../../../libs/devkit/common/src/lib/internal/services/base-registry/base-registry.ts","../../../../../libs/devkit/common/src/lib/internal/services/pkg-topology-registry/pkg-topology-registry.ts","../../../../../libs/devkit/common/src/lib/internal/utils/handlers-order-comparer.ts","../../../../../libs/devkit/common/src/lib/public/services/handler-chain/internal-handler-chain.ts","../../../../../libs/devkit/common/src/lib/public/services/handler-chain/handler-chain.service.ts","../../../../../libs/devkit/common/src/lib/internal/decorators/implement-using-handler-chain/implement-using-handler-chain.decorator.ts","../../../../../libs/devkit/common/src/lib/internal/utils/object-deep-keys/object-deep-keys.ts","../../../../../libs/devkit/common/src/lib/internal/services/element-registration-checker/element-registration-checker.ts","../../../../../libs/devkit/common/src/lib/internal/services/request-handler-registry/request-handler-registry.service.ts","../../../../../libs/devkit/common/src/lib/internal/services/request-registry/request-registry.service.ts","../../../../../libs/devkit/common/src/lib/internal/services/global-converters-registry/converter-registry.ts","../../../../../libs/devkit/common/src/lib/internal/services/view-element-registry/view-element-registry.ts","../../../../../libs/devkit/common/src/lib/internal/services/interface-designer-item-registry/interface-designer-item-registry.ts","../../../../../libs/devkit/common/src/lib/internal/services/bootstrap-notifier/bootstrap-notifier.ts","../../../../../libs/devkit/common/src/lib/internal/services/handler-chain-services-registry/handler-chain-services-registry.ts","../../../../../libs/devkit/common/src/lib/internal/services/design-time-view-element-registry/design-time-view-element-registry.ts","../../../../../libs/devkit/common/src/lib/internal/services/validator-registry/validator-registry.ts","../../../../../libs/devkit/common/src/lib/internal/services/remote-entries-registry/remote-entries-registry.ts","../../../../../libs/devkit/common/src/lib/internal/utils/component-config-utils.ts","../../../../../libs/devkit/common/src/lib/internal/utils/metadata-utils.ts","../../../../../libs/devkit/common/src/lib/internal/utils/instantiate.ts","../../../../../libs/devkit/common/src/lib/public/models/input/input-registration-config.model.ts","../../../../../libs/devkit/common/src/lib/public/models/request/data-source-request.ts","../../../../../libs/devkit/common/src/lib/public/models/view-element/view-element-reuse-strategy.enum.ts","../../../../../libs/devkit/common/src/lib/public/models/validation/base-validator.ts","../../../../../libs/devkit/common/src/lib/public/models/localizable-value.ts","../../../../../libs/devkit/common/src/lib/internal/utils/localization-utils.ts","../../../../../libs/devkit/common/src/lib/internal/decorators/design-time-view-element/design-time-view-element.decorator.ts","../../../../../libs/devkit/common/src/lib/internal/decorators/request/request.decorator.ts","../../../../../libs/devkit/common/src/lib/internal/models/interface-designer-item/interface-designer-item-registration-config.model.ts","../../../../../libs/devkit/common/src/lib/internal/models/request/method-invoke-request.ts","../../../../../libs/devkit/common/src/lib/internal/models/remote-build-info.ts","../../../../../libs/devkit/common/src/lib/public/decorators/input/input.decorator.ts","../../../../../libs/devkit/common/src/lib/public/decorators/output/output.decorator.ts","../../../../../libs/devkit/common/src/lib/public/decorators/validation-input/validation-input.decorator.ts","../../../../../libs/devkit/common/src/lib/public/decorators/view-element/view-element.decorator.ts","../../../../../libs/devkit/common/src/lib/public/decorators/module/module.decorator.ts","../../../../../libs/devkit/common/src/lib/public/decorators/interface-designer-item/interface-designer-item.decorator.ts","../../../../../libs/devkit/common/src/lib/public/decorators/inject/inject.decorator.ts","../../../../../libs/devkit/common/src/lib/public/decorators/validator/validator.decorator.ts","../../../../../libs/devkit/common/src/lib/public/decorators/request-handler/request-handler.decorator.ts","../../../../../libs/devkit/common/src/lib/public/decorators/converter/converter.decorator.ts","../../../../../libs/devkit/common/src/lib/public/enums/data-source-load-type.enum.ts","../../../../../libs/devkit/common/src/lib/public/functions/register-view-element.ts","../../../../../libs/devkit/common/src/lib/public/functions/register-angular-view-element.ts","../../../../../libs/devkit/common/src/lib/public/functions/bootstrap-crt-module.ts","../../../../../libs/devkit/common/src/lib/public/functions/localize.ts","../../../../../libs/devkit/common/src/lib/public/functions/bootstrap-crt-module-handler-chain-services.ts","../../../../../libs/devkit/common/src/lib/public/handlers/base-request-handler.ts","../../../../../libs/devkit/common/src/lib/internal/services/base-handler-chain.service.ts","../../../../../libs/devkit/common/src/lib/public/services/feature/feature.service.ts","../../../../../libs/devkit/common/src/lib/public/services/rights/rights.service.ts","../../../../../libs/devkit/common/src/lib/public/services/sys-settings/sys-settings.service.ts","../../../../../libs/devkit/common/src/lib/public/services/sys-settings/sys-setting.model.ts","../../../../../libs/devkit/common/src/lib/public/services/sys-values/sys-values.service.ts","../../../../../libs/devkit/common/src/lib/public/services/http-client/http-client.service.ts","../../../../../libs/devkit/common/src/lib/public/services/mask-service/schema-view-mask.request.ts","../../../../../libs/devkit/common/src/lib/public/services/mask-service/mask.service.ts","../../../../../libs/devkit/common/src/lib/public/services/model/model.ts","../../../../../libs/devkit/common/src/lib/public/services/crt-zone/crt-zone.service.ts","../../../../../libs/devkit/common/src/creatio-devkit-common.ts"],"sourcesContent":["import { AggregationType } from '../../base-exports';\nimport { AggregationFunction } from '../../base-exports';\nimport { AggregationEvalType } from '../../base-exports';\nimport { AggregationEval } from '../../base-exports';\n\n/**\n * @internal\n */\nexport function toAggregationType(aggregationFunction: AggregationFunction): AggregationType {\n\tswitch (aggregationFunction) {\n\t\tcase AggregationFunction.Count:\n\t\t\treturn AggregationType.Count;\n\t\tcase AggregationFunction.Sum:\n\t\t\treturn AggregationType.Sum;\n\t\tcase AggregationFunction.Avg:\n\t\t\treturn AggregationType.Avg;\n\t\tcase AggregationFunction.Min:\n\t\t\treturn AggregationType.Min;\n\t\tcase AggregationFunction.Max:\n\t\t\treturn AggregationType.Max;\n\t\tcase AggregationFunction.TopOne:\n\t\t\treturn AggregationType.TopOne;\n\t\tdefault:\n\t\t\treturn AggregationType.None;\n\t}\n}\n\n/**\n * @internal\n */\nexport function toAggregationFunction(aggregationType: AggregationType): AggregationFunction {\n\tswitch (aggregationType) {\n\t\tcase AggregationType.Count:\n\t\t\treturn AggregationFunction.Count;\n\t\tcase AggregationType.Sum:\n\t\t\treturn AggregationFunction.Sum;\n\t\tcase AggregationType.Avg:\n\t\t\treturn AggregationFunction.Avg;\n\t\tcase AggregationType.Min:\n\t\t\treturn AggregationFunction.Min;\n\t\tcase AggregationType.Max:\n\t\t\treturn AggregationFunction.Max;\n\t\tcase AggregationType.TopOne:\n\t\t\treturn AggregationFunction.TopOne;\n\t\tdefault:\n\t\t\treturn AggregationFunction.None;\n\t}\n}\n\n/**\n * @internal\n */\nexport function toAggregationEvalType(aggregationEval: AggregationEval): AggregationEvalType {\n\tswitch (aggregationEval) {\n\t\tcase 'all':\n\t\t\treturn AggregationEvalType.All;\n\t\tcase 'distinct':\n\t\t\treturn AggregationEvalType.Distinct;\n\t\tdefault:\n\t\t\treturn AggregationEvalType.None;\n\t}\n}\n\n/**\n * @internal\n */\nexport function toAggregationEval(aggregationEvalType: AggregationEvalType): AggregationEval {\n\tswitch (aggregationEvalType) {\n\t\tcase AggregationEvalType.All:\n\t\t\treturn 'all';\n\t\tcase AggregationEvalType.Distinct:\n\t\t\treturn 'distinct';\n\t\tdefault:\n\t\t\treturn 'none';\n\t}\n}\n","import {DatePart, DatePartType} from '../../base-exports';\n\n/**\n * @internal\n */\nexport function toDatePartType(aggregationFunction: DatePart): DatePartType {\n\tswitch (aggregationFunction) {\n\t\tcase 'minute':\n\t\t\treturn DatePartType.HourMinute;\n\t\tcase 'hour':\n\t\t\treturn DatePartType.Hour;\n\t\tcase 'day':\n\t\t\treturn DatePartType.Day;\n\t\tcase 'weekday':\n\t\t\treturn DatePartType.WeekDay;\n\t\tcase 'week':\n\t\t\treturn DatePartType.Week;\n\t\tcase 'month':\n\t\t\treturn DatePartType.Month;\n\t\tcase 'year':\n\t\t\treturn DatePartType.Year;\n\t\tdefault:\n\t\t\treturn DatePartType.None;\n\t}\n}\n\n/**\n * @internal\n */\nexport function toDatePart(aggregationType: DatePartType): DatePart {\n\tswitch (aggregationType) {\n\t\tcase DatePartType.HourMinute:\n\t\t\treturn 'minute';\n\t\tcase DatePartType.Hour:\n\t\t\treturn 'hour';\n\t\tcase DatePartType.Day:\n\t\t\treturn 'day';\n\t\tcase DatePartType.WeekDay:\n\t\t\treturn 'weekday';\n\t\tcase DatePartType.Week:\n\t\t\treturn 'week';\n\t\tcase DatePartType.Month:\n\t\t\treturn 'month';\n\t\tcase DatePartType.Year:\n\t\t\treturn 'year';\n\t\tdefault:\n\t\t\treturn 'none';\n\t}\n}\n","import {FunctionStringType, FunctionType} from '../../base-exports';\n\n\n/**\n * @internal\n */\nexport function toStringFunctionType(functionType: FunctionType): FunctionStringType {\n\tswitch (functionType) {\n\t\tcase FunctionType.Aggregation:\n\t\t\treturn 'aggregation';\n\t\tcase FunctionType.DatePart:\n\t\t\treturn 'datePart';\n\t\tdefault:\n\t\t\treturn 'none';\n\t}\n}\n\n/**\n * @internal\n */\nexport function toNumericFunctionType(functionType: FunctionStringType): FunctionType {\n\tswitch (functionType) {\n\t\tcase 'aggregation':\n\t\t\treturn FunctionType.Aggregation;\n\t\tcase 'datePart':\n\t\t\treturn FunctionType.DatePart;\n\t\tdefault:\n\t\t\treturn FunctionType.None;\n\t}\n}\n","import { OrderDirection } from '../../base-exports';\nimport { SortDirection } from '../../base-exports';\n\n/**\n * @internal\n */\nexport function toOrderDirection(sortDirection: SortDirection): OrderDirection {\n\tswitch (sortDirection) {\n\t\tcase 'asc':\n\t\t\treturn OrderDirection.Asc;\n\t\tcase 'desc':\n\t\t\treturn OrderDirection.Desc;\n\t\tdefault:\n\t\t\treturn OrderDirection.None;\n\t}\n}\n\n/**\n * @internal\n */\nexport function toSortDirection(orderDirection: OrderDirection): SortDirection {\n\tswitch (orderDirection) {\n\t\tcase OrderDirection.Asc:\n\t\t\treturn 'asc';\n\t\tcase OrderDirection.Desc:\n\t\t\treturn 'desc';\n\t\tdefault:\n\t\t\treturn 'none';\n\t}\n}\n","/**\n * @internal\n */\nexport const crtInputPrefix = 'crtInput:';\n/**\n * @internal\n */\nexport const crtOutputPrefix = 'crtOutput:';\n/**\n * @internal\n */\nexport const crtValidationInputPrefix = 'crtValidationInput:';\n/**\n * @internal\n */\nexport const crtInjectPrefix = 'crtInject:';\n","/**\n * @internal\n * @hostPublicApi\n */\nexport enum ViewElementGroupType {\n\tCharts = 'Charts',\n\tComponents = 'Components',\n\tLayoutElements = 'LayoutElements',\n\tInputs = 'Inputs',\n\tCustomElements = 'CustomElements',\n}\n","import { ViewElementGroupType } from './view-element-group-type.enum';\n\n/**\n * @internal\n * @hostPublicApi\n */\nexport enum ViewElementDataGroupType {\n\tData = 'Data',\n}\n\n/**\n * @internal\n * @hostPublicApi\n */\nexport type DesignerToolGroupType = ViewElementDataGroupType | ViewElementGroupType;\n\n/**\n * @internal\n * @hostPublicApi\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const DesignerToolGroupType = { ...ViewElementDataGroupType, ...ViewElementGroupType };\n","/**\n * Handler source types in order of call priority.\n * @internal\n * @hostPublicApi\n */\nexport enum HandlerSourceType {\n\tSchema = 0,\n\tRemote = 1,\n\tHost = 2,\n}\n","/**\n * @internal\n */\nexport enum ModelInPageAction {\n\tEdit = 'edit',\n\tAdd = 'add',\n\tCopy = 'copy',\n}\n","import { get, set } from 'lodash';\nconst global = window;\n\n/**\n * @public\n * @description For internal use only.\n * @hostPublicApi\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\ninterface ɵRegistryItemsStore {\n\ttypeInfos: Map<string, any>;\n}\n\n/**\n * @public\n * @description For internal use only.\n * @hostPublicApi\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class ɵBaseRegistry {\n\tprivate static readonly _prefix = 'creatio.registry.';\n\tprivate static _instance: ɵBaseRegistry;\n\n\tprotected static readonly registryKey: string;\n\n\tprotected static get store(): ɵRegistryItemsStore {\n\t\tif (!this._instance) {\n\t\t\tlet globalInstance = get(global, this._prefix + this.registryKey);\n\t\t\tif (!globalInstance) {\n\t\t\t\tglobalInstance = new this();\n\t\t\t\tset(global, this._prefix + this.registryKey, globalInstance);\n\t\t\t}\n\t\t\tthis._instance = globalInstance;\n\t\t}\n\t\treturn this._instance.store;\n\t}\n\n\t/**\n\t * @hostPubicApi available through window.creatio.registry.<registryKey>.store\n\t */\n\tprotected store: ɵRegistryItemsStore = {\n\t\ttypeInfos: new Map(),\n\t};\n}\n","import { ɵBaseRegistry } from '../base-registry';\n\n/**\n * @internal\n */\nexport class PkgTopology extends ɵBaseRegistry {\n\tprotected static override readonly registryKey = 'pkgTopology';\n\n\tpublic static get items(): Map<string, number> {\n\t\treturn this.store.typeInfos;\n\t}\n\n\tpublic static get(pkgName: string): number {\n\t\tconst order = this.items.get(pkgName);\n\t\tif (order === undefined) {\n\t\t\tthrow new Error(`Package with name ${pkgName} not found in topology`);\n\t\t}\n\t\treturn order;\n\t}\n}\n","import { HandlerSourceType } from '../enums';\nimport { HandlerConfig } from '../models/request-handler/handler-config';\nimport { PkgTopology } from '../services/pkg-topology-registry/pkg-topology-registry';\nimport {BaseRequest} from '../../base-exports';\n\n/**\n * @internal\n */\nexport class HandlersOrderComparer {\n\tprivate _scopesOrder: Map<string, number>;\n\n\tconstructor(private _request: BaseRequest) {\n\t\tconst scopesOrderEntries = [...(this._request.scopes ?? [])].reverse().map((scope, index) => [scope, index]);\n\t\tthis._scopesOrder = Object.fromEntries(scopesOrderEntries);\n\t}\n\n\tprivate _getOrderByScopes(handler: HandlerConfig): number {\n\t\tif (!handler.scopes) {\n\t\t\treturn Number.MAX_VALUE;\n\t\t}\n\t\tconst scopesOrder = handler.scopes.filter((s) => s in this._scopesOrder).map((s) => this._scopesOrder[s]);\n\t\treturn Math.min(...scopesOrder);\n\t}\n\n\tprivate _getOrderByPkgTopology(handler: HandlerConfig): number {\n\t\tif (handler.source.type === HandlerSourceType.Host) {\n\t\t\treturn Number.MAX_VALUE;\n\t\t}\n\t\treturn PkgTopology.get(handler.source.packageName);\n\t}\n\n\tpublic compare(a: HandlerConfig, b: HandlerConfig): number {\n\t\tconst aScopeOrder = this._getOrderByScopes(a);\n\t\tconst bScopeOrder = this._getOrderByScopes(b);\n\t\tlet diff = aScopeOrder - bScopeOrder;\n\t\tif (diff) {\n\t\t\treturn diff;\n\t\t}\n\t\tconst aPkgTopologyOrder = this._getOrderByPkgTopology(a);\n\t\tconst bPkgTopologyOrder = this._getOrderByPkgTopology(b);\n\t\tdiff = aPkgTopologyOrder - bPkgTopologyOrder;\n\t\tif (diff) {\n\t\t\treturn diff;\n\t\t}\n\t\tdiff = a.source.type - b.source.type;\n\t\treturn diff;\n\t}\n}\n","import {\n\tBaseRequest,\n\tgenerateGuid,\n\tNextHandlerAlreadySpecifiedException,\n\tRequestHandler,\n\tViewModelContext,\n} from '../../../base-exports';\nimport { InjectionContext } from '../../../internal/models/injection-context';\nimport { ContexedHandlerScopeConfig } from '../../../internal/models/request-handler/contexed-handler-scope-config';\nimport { HandlerConfig } from '../../../internal/models/request-handler/handler-config';\nimport { HandlersOrderComparer } from '../../../internal/utils/handlers-order-comparer';\nimport { TeardownLogic } from '../../types';\n\n/**\n * @internal\n * @hostPublicApi available through window.handlerChain\n */\nexport class InternalHandlerChain {\n\tprivate _handlers: HandlerConfig[] = [];\n\tprivate _requestListeners: Map<string, (request: BaseRequest) => void> = new Map();\n\tprivate _handlersCache = new Map<string, Map<string, RequestHandler | undefined>>();\n\tprivate _handlersScopesByContextId = new Map<string, ContexedHandlerScopeConfig[]>();\n\n\t/**\n\t * @hostPublicApi\n\t */\n\tpublic handlerChain$ = {\n\t\t/**\n\t\t * @hostPublicApi\n\t\t */\n\t\tprocess: async (request: BaseRequest) => {\n\t\t\tconst handler = this._getHandler(request);\n\t\t\tthis._requestListeners.forEach((listener) => listener?.(request));\n\t\t\treturn handler?.handle(request);\n\t\t},\n\t\t/**\n\t\t * @hostPublicApi\n\t\t */\n\t\tregister: (info: HandlerConfig) => {\n\t\t\tthis._handlersCache.delete(info.requestType);\n\t\t\tthis._handlers.push(info);\n\t\t\treturn () => {\n\t\t\t\tconst index = this._handlers.indexOf(info);\n\t\t\t\tif (index > -1) {\n\t\t\t\t\tthis._handlers.splice(index, 1);\n\t\t\t\t\tthis._handlersCache.delete(info.requestType);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn(`${info?.requestType} not found to unsubscribe`);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\t/**\n\t\t * @hostPublicApi\n\t\t */\n\t\tsubscribe: (callback: (request: BaseRequest) => void, context?: ViewModelContext): TeardownLogic => {\n\t\t\tif (!callback) {\n\t\t\t\treturn () => void 0;\n\t\t\t}\n\t\t\tconst listenerId = generateGuid();\n\t\t\tconst listenerFn: (request: BaseRequest) => void = (request) => {\n\t\t\t\tif (!context || request.$context === context) {\n\t\t\t\t\tcallback(request);\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._requestListeners.set(listenerId, listenerFn);\n\t\t\treturn () => this._requestListeners.delete(listenerId);\n\t\t},\n\t};\n\n\t/**\n\t * @hostPublicApi\n\t */\n\tpublic clearContextedHandlersCache(contextId: string): boolean {\n\t\tconst configs: ContexedHandlerScopeConfig[] = this._handlersScopesByContextId.get(contextId) ?? [];\n\t\treturn configs.every(({ requestType, scope }) => this._handlersCache.get(requestType)?.delete(scope));\n\t}\n\n\tprivate _getHandler(request: BaseRequest): RequestHandler | undefined {\n\t\treturn this._hasCacheHandler(request) ? this._getCacheHandler(request) : this._buildHandlersChain(request);\n\t}\n\n\tprivate _getCacheHandler(request: BaseRequest): RequestHandler | undefined {\n\t\tconst map = this._handlersCache.get(request.type) as Map<string, RequestHandler | undefined>;\n\t\tconst key = this._getCacheScopesKey(request);\n\t\treturn map.get(key);\n\t}\n\n\tprivate _hasCacheHandler(request: BaseRequest): boolean {\n\t\tconst map = this._handlersCache.get(request.type) as Map<string, RequestHandler | undefined>;\n\t\tconst key = this._getCacheScopesKey(request);\n\t\treturn map && map.has(key);\n\t}\n\n\tprivate _getCacheScopesKey(request: BaseRequest): string {\n\t\tconst injectionContextKey = this._getInjectionContext(request?.$context)?.id ?? '';\n\t\treturn (request.scopes || ['']).join('_').concat(injectionContextKey);\n\t}\n\n\tprivate _getInjectionContext(viewModel?: ViewModelContext): InjectionContext {\n\t\treturn (\n\t\t\tviewModel?.['_injectionContext'] ||\n\t\t\t(viewModel?.['parent'] && this._getInjectionContext(viewModel['parent']))\n\t\t);\n\t}\n\n\tprivate _setContextedScopes(request: BaseRequest, scope: string): void {\n\t\tconst injectionContext = this._getInjectionContext(request?.$context)?.id;\n\t\tconst configs = this._handlersScopesByContextId.has(injectionContext)\n\t\t\t? (this._handlersScopesByContextId.get(injectionContext) as ContexedHandlerScopeConfig[])\n\t\t\t: [];\n\t\tconfigs.push({ requestType: request.type, scope });\n\t\tthis._handlersScopesByContextId.set(injectionContext, configs);\n\t}\n\n\tprivate _setCacheHandler(request: BaseRequest, handler: RequestHandler | undefined): void {\n\t\tconst map = this._handlersCache.has(request.type)\n\t\t\t? (this._handlersCache.get(request.type) as Map<string, RequestHandler | undefined>)\n\t\t\t: new Map();\n\t\tconst key = this._getCacheScopesKey(request);\n\t\tmap.set(key, handler);\n\t\tif (this._getInjectionContext(request?.$context)?.id) {\n\t\t\tthis._setContextedScopes(request, key);\n\t\t}\n\t\tthis._handlersCache.set(request.type, map);\n\t}\n\n\tprivate _isRequestHandler(handler: unknown): handler is RequestHandler {\n\t\treturn (\n\t\t\ttypeof (handler as RequestHandler).handle === 'function' &&\n\t\t\ttypeof (handler as RequestHandler).setNext === 'function'\n\t\t);\n\t}\n\n\tprivate _checkHandlerInstanceOf(handler: unknown): void {\n\t\tif (!this._isRequestHandler(handler)) {\n\t\t\tthrow new Error('Handler should implement \"BaseRequestHandler\"');\n\t\t}\n\t}\n\n\tprivate _buildHandlersChain(request: BaseRequest): RequestHandler | undefined {\n\t\tconst handlers = this._handlers.filter((h) => {\n\t\t\tif (h.requestType !== request.type) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!h.scopes?.length) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn h.scopes.some((s) => request.scopes?.includes(s));\n\t\t});\n\t\tconst comparer = new HandlersOrderComparer(request);\n\t\thandlers.sort((a, b) => comparer.compare(a, b));\n\t\tconst handlerInstances = handlers.map((handlerConfig) => {\n\t\t\tconst injectionContext = this._getInjectionContext(request?.$context);\n\t\t\treturn handlerConfig.createHandler(injectionContext);\n\t\t});\n\t\thandlerInstances.forEach((handler) => this._checkHandlerInstanceOf(handler));\n\t\tthis._joinHandlersInChain(handlerInstances);\n\t\tconst result = handlerInstances[0];\n\t\tthis._setCacheHandler(request, result);\n\t\treturn result;\n\t}\n\n\tprivate _joinHandlersInChain(handlers: RequestHandler[]): void {\n\t\tfor (let index = 0; index < handlers.length - 1; index++) {\n\t\t\ttry {\n\t\t\t\thandlers[index].setNext(handlers[index + 1]);\n\t\t\t} catch (error) {\n\t\t\t\tif (error instanceof NextHandlerAlreadySpecifiedException) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Handler factory should return new instance of ' +\n\t\t\t\t\t\t\t'BaseRequestHandler class or its subclass ' +\n\t\t\t\t\t\t\t'(next handler should not be specified)',\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n}\n","import { ɵBaseRequest } from '@creatio/base';\n\nimport { InternalHandlerChain } from './internal-handler-chain';\nimport { ViewModelContext } from '../../../base-exports';\nimport { HandlerConfig } from '../../../internal/models/request-handler/handler-config';\nimport { TeardownLogic } from '../../types';\n\ntype GlobalType = Window & {\n\thandlerChain: InternalHandlerChain;\n};\nconst global = window as unknown as GlobalType;\n\n/**\n * @public\n * @class HandlerChainService\n * @classdesc Service to design handlers in chain.\n */\nexport class HandlerChainService {\n\tprivate get _chain(): InternalHandlerChain {\n\t\treturn global.handlerChain;\n\t}\n\n\tprivate set _chain(value: InternalHandlerChain) {\n\t\tglobal.handlerChain = value;\n\t}\n\tprivate static _instance: HandlerChainService;\n\tpublic static get instance(): HandlerChainService {\n\t\treturn HandlerChainService._instance || (HandlerChainService._instance = new HandlerChainService());\n\t}\n\n\tprivate constructor() {\n\t\tif (!this._chain) {\n\t\t\tthis._createGlobalHandlerChain();\n\t\t}\n\t}\n\n\tprivate _createGlobalHandlerChain() {\n\t\tthis._chain = new InternalHandlerChain();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic clearContextedHandlersCache(contextId: string): boolean {\n\t\treturn this._chain.clearContextedHandlersCache(contextId);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic register(handlerConfig: HandlerConfig) {\n\t\treturn this._chain.handlerChain$.register(handlerConfig);\n\t}\n\n\t/**\n\t * @description Method to process passed request\n\t * @param request - {@link ɵBaseRequest}\n\t * @return `Promise<unknown>`\n\t */\n\tpublic process(request: ɵBaseRequest): Promise<unknown> {\n\t\treturn this._chain.handlerChain$.process(request);\n\t}\n\n\t/**\n\t * @internal\n\t * Subscribes to requests.\n\t * @param callback A handler function for each request triggered.\n\t * @param context (optional) A context in which the requests were triggered.\n\t * The `callback` will be called only for requests with specified context.\n\t * If not  specified, will be called for all requests.\n\t * @returns A function to cancel the subscription.\n\t */\n\tpublic subscribe(callback: (request: ɵBaseRequest) => void, context?: ViewModelContext): TeardownLogic {\n\t\treturn this._chain.handlerChain$.subscribe(callback, context);\n\t}\n}\n","import { MethodInvokeRequest } from '../../../internal/models';\nimport { BaseHandlerChainService } from '../../../internal/services/base-handler-chain.service';\nimport { HandlerChainService } from '../../../public/services/handler-chain/handler-chain.service';\n\n/**\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function ImplementUsingHandlerChain(config?: { requestType?: string; methodName?: string }) {\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\treturn function (target: BaseHandlerChainService | any, method: string, descriptor?: TypedPropertyDescriptor<any>) {\n\t\tconst methodImplementation = function (this: BaseHandlerChainService, ...args: unknown[]) {\n\t\t\treturn HandlerChainService.instance.process({\n\t\t\t\ttype: config?.requestType ? config.requestType : this.requestType,\n\t\t\t\tmethod: config?.methodName ? config.methodName : method,\n\t\t\t\targs,\n\t\t\t} as MethodInvokeRequest);\n\t\t};\n\t\tif (descriptor) {\n\t\t\tdescriptor.value = methodImplementation;\n\t\t} else {\n\t\t\t(target as unknown as Record<string, unknown>)[method] = methodImplementation;\n\t\t}\n\t};\n}\n","/**\n * @internal\n */\nexport function objectDeepKeys(obj: object): Array<Array<string>> {\n\tif (obj === null || typeof obj !== 'object') {\n\t\treturn [];\n\t}\n\treturn Object.keys(obj)\n\t\t.filter((key) => obj[key] instanceof Object)\n\t\t.map((key) => objectDeepKeys(obj[key]).map((k) => [key, ...k]))\n\t\t.reduce(\n\t\t\t(x, y) => [...x, ...y],\n\t\t\tObject.keys(obj).map((x) => [x]),\n\t\t);\n}\n","import { camelCase, isEqual, upperFirst } from 'lodash';\n\n/**\n * @internal\n */\nexport function checkTypeNameFormat(type: string, element: string): void {\n\tconst typeParts = type.split('.');\n\tif (typeParts.length < 2) {\n\t\tthrow new Error(`Error when register ${type}. Type property should have format \"VendorPrefix.${element}\"`);\n\t}\n}\n\n/**\n * @public\n * @description For internal use only.\n */\nexport function ɵcheckTypeNameFormat(type: string, element: string): void {\n\treturn checkTypeNameFormat(type, element);\n}\n\n/**\n * @internal\n */\nexport function checkTypeNamePascalCase(type: string): void {\n\tconst [vendor, typeName] = type.split('.');\n\tconst pascalTypeName = toPascalCase(typeName);\n\tif (!vendor || pascalTypeName !== typeName) {\n\t\tthrow new Error(\n\t\t\t`Error when register ${type}. Type property should have Pascal case, e.g. ${\n\t\t\t\tvendor + '.' + pascalTypeName\n\t\t\t}. ` + 'The first letter of each word in a compound word should be capitalized',\n\t\t);\n\t}\n}\n\n/**\n * @internal\n */\nexport function checkCrtTypeNamePascalCase(type: string): void {\n\tconst [vendor, typeName] = type.split('.');\n\tconst pascalTypeName = toPascalCase(typeName);\n\tif (vendor.toLowerCase() === 'crt' && pascalTypeName !== typeName) {\n\t\tthrow new Error(\n\t\t\t`Error when register ${type}. Type property should have Pascal case, e.g. ${\n\t\t\t\tvendor + '.' + pascalTypeName\n\t\t\t}. ` + 'The first letter of each word in a compound word should be capitalized',\n\t\t);\n\t}\n}\n\n/**\n * @internal\n */\nexport function toPascalCase(source: string): string {\n\treturn upperFirst(camelCase(source));\n}\n\n/**\n * @internal\n */\nexport function checkIfTypeRegistered<T>(\n\ttype: string,\n\titem: (new () => T) | undefined | null,\n): asserts item is new () => T {\n\tif (!item) {\n\t\tthrow new Error(`Error when resolve ${type}. Type was not registered.`);\n\t}\n}\n\n/**\n * @internal\n */\nexport function checkOnlyOneRegistration<T>(type: string, item: T, map: Map<string, T>): void {\n\tif (map.has(type) && !isEqual(map.get(type), item)) {\n\t\tthrow new Error(`Error when register ${type}. Element with this type has already exist`);\n\t}\n}\n","import { RequestHandler } from '../../../base-exports';\nimport { RequestHandlerRegistrationConfig } from '../../../internal/models';\n\n/**\n * @internal\n * @hostPublicApi\n */\nexport type RequestHandlerCtor = new (...args: unknown[]) => RequestHandler;\n\n/**\n * @internal\n * @hostPublicApi\n */\nexport interface RequestHandlerMapValue {\n\t// region Fields: Public\n\n\treadonly instanceType: RequestHandlerCtor;\n\treadonly instanceConfig: RequestHandlerRegistrationConfig;\n\n\t// endregion\n}\n\n/**\n * @internal\n * @hostPublicApi\n */\nexport type AddRequestHandlerListener = (requestType: string, requestMapInfo: RequestHandlerMapValue) => void;\n\n/**\n * @internal\n * @hostPublicApi\n */\nexport type RemoveRequestHandlerListener = AddRequestHandlerListener;\n\n/**\n * @internal\n * @hostPublicApi\n */\nexport type UnsubscribeListener = () => void;\n\n/**\n * @internal\n * @hostPublicApi available through window.creatio.requestHandlerRegistry\n */\nexport class InternalRequestHandlerRegistryType {\n\tprivate static _addItemListeners: Array<AddRequestHandlerListener> = [];\n\tprivate static _removeItemListeners: Array<AddRequestHandlerListener> = [];\n\tprivate static _requestHandlersMap = new Map<string, RequestHandlerMapValue>();\n\n\t/**\n\t * @publicHostApi\n\t */\n\tpublic static get requestHandlersMap(): Map<string, RequestHandlerMapValue> {\n\t\treturn this._requestHandlersMap;\n\t}\n\n\t/**\n\t * @publicHostApi\n\t */\n\tpublic static onAddRequestHandler(handler: AddRequestHandlerListener): UnsubscribeListener {\n\t\tthis._addItemListeners.push(handler);\n\t\treturn () => {\n\t\t\tthis._addItemListeners.splice(this._addItemListeners.indexOf(handler), 1);\n\t\t};\n\t}\n\n\t/**\n\t * @publicHostApi\n\t */\n\tpublic static onRemoveRequestHandler(handler: RemoveRequestHandlerListener): UnsubscribeListener {\n\t\tthis._removeItemListeners.push(handler);\n\t\treturn () => {\n\t\t\tthis._removeItemListeners.splice(this._removeItemListeners.indexOf(handler), 1);\n\t\t};\n\t}\n\n\t/**\n\t * @publicHostApi\n\t */\n\tpublic static addRequestHandler(handlerType: string, config: RequestHandlerMapValue): void {\n\t\tif (!this._requestHandlersMap.has(handlerType)) {\n\t\t\tthis._requestHandlersMap.set(handlerType, config);\n\t\t\tfor (const listener of this._addItemListeners) {\n\t\t\t\tlistener(handlerType, config);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @publicHostApi\n\t */\n\tpublic static removeRequestHandler(handlerType: string): void {\n\t\tconst config = this._requestHandlersMap.get(handlerType);\n\t\tif (config) {\n\t\t\tthis._requestHandlersMap.delete(handlerType);\n\t\t\tfor (const listener of this._removeItemListeners) {\n\t\t\t\tlistener(handlerType, config);\n\t\t\t}\n\t\t}\n\t}\n}\ntype GlobalType = Window & {\n\tcreatio: {\n\t\trequestHandlerRegistry: typeof InternalRequestHandlerRegistryType;\n\t};\n};\n\nconst global = window as unknown as GlobalType;\n\nglobal.creatio ??= {} as any;\n\nif (!global.creatio.requestHandlerRegistry) {\n\tObject.defineProperty(global.creatio, 'requestHandlerRegistry', {\n\t\tget: () => InternalRequestHandlerRegistryType,\n\t\tconfigurable: false,\n\t});\n}\n\n/**\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InternalRequestHandlerRegistry = InternalRequestHandlerRegistryType;\n\n/**\n * @internal\n */\nexport class RequestHandlerRegistryService {\n\tprivate static _internalRegistry: typeof InternalRequestHandlerRegistryType = global.creatio.requestHandlerRegistry;\n\n\t/**\n\t * Register request handler class.\n\t * @param config Request handler registration config.\n\t * @param type Request handler type.\n\t */\n\tpublic static register(config: RequestHandlerRegistrationConfig, type: RequestHandlerCtor): void {\n\t\tconst requestType = config.requestType;\n\t\tconst requestHandlerType = config.type;\n\t\tif (!requestType) {\n\t\t\tthrow new Error(`Error when register ${requestHandlerType}. Request type not specified.`);\n\t\t}\n\t\tconst requestHandlerMapValue: RequestHandlerMapValue = {\n\t\t\tinstanceType: type,\n\t\t\tinstanceConfig: config,\n\t\t};\n\t\tRequestHandlerRegistryService._internalRegistry.addRequestHandler(requestHandlerType, requestHandlerMapValue);\n\t}\n}\n","import { BaseRequest } from '../../../base-exports';\nimport { RequestRegistrationConfig } from '../../../public/models';\nimport { checkIfTypeRegistered } from '../element-registration-checker';\n\n/**\n * @internal\n */\nexport type BaseRequestCtor = new () => BaseRequest;\n\n/**\n * @internal\n */\nexport class RequestRegistryService {\n\tprivate static _requestsMap = new Map<string, BaseRequestCtor>();\n\tprivate static _requestsRegistrationInfos = new Map<string, RequestRegistrationConfig>();\n\n\tpublic static get requestsRegistrationInfos(): ReadonlyMap<string, RequestRegistrationConfig> {\n\t\treturn this._requestsRegistrationInfos;\n\t}\n\n\t/**\n\t * Registers a specified request class.\n\t * @param config Request registration config.\n\t * @param type Request type.\n\t */\n\tpublic static register(config: RequestRegistrationConfig, type: BaseRequestCtor) {\n\t\tconst requestType = config.type;\n\t\t// TODO RND-21723\n\t\tRequestRegistryService._requestsMap.set(requestType, type);\n\t\tRequestRegistryService._requestsRegistrationInfos.set(requestType, config);\n\t}\n\n\t/**\n\t * Creates request instance by specified registered request type.\n\t * @param type Request type.\n\t * @returns The instance of registered request.\n\t */\n\tpublic static get(type: string): BaseRequest | undefined {\n\t\tconst requestInstanceConstructor = RequestRegistryService._requestsMap.get(type);\n\t\tcheckIfTypeRegistered(type, requestInstanceConstructor);\n\t\treturn requestInstanceConstructor && new requestInstanceConstructor();\n\t}\n}\n","import { ConverterRegistryItem } from '../../models/converter';\nimport { ɵBaseRegistry } from '../base-registry';\nimport { checkCrtTypeNamePascalCase, checkTypeNameFormat } from '../element-registration-checker';\n\n/**\n * @internal\n * @hostPublicApi available through window.creatio.registry.ConverterRegistry\n */\nexport class ConverterRegistry extends ɵBaseRegistry {\n\tprotected static override readonly registryKey = 'ConverterRegistry';\n\n\tpublic static get(type: string): ConverterRegistryItem {\n\t\tif (!this.store.typeInfos.has(type)) {\n\t\t\tthrow new Error(`'${type}' converter doesn't exist`);\n\t\t}\n\t\treturn this.store.typeInfos.get(type);\n\t}\n\n\tpublic static register(item: ConverterRegistryItem): void {\n\t\tcheckTypeNameFormat(item.type, 'ConverterTypeName');\n\t\tcheckCrtTypeNamePascalCase(item.type);\n\t\t// TODO RND-21723\n\t\tthis.store.typeInfos.set(item.type, item);\n\t}\n\n\tpublic static clear(): void {\n\t\tthis.store.typeInfos.clear();\n\t}\n}\n","import { BaseViewElementRegistrationConfig } from '../../../public/models';\nimport { ViewElementRegistryItem } from '../../models';\nimport { ɵBaseRegistry } from '../base-registry';\nimport { checkOnlyOneRegistration, checkTypeNameFormat } from '../element-registration-checker';\n\n/**\n * @internal\n */\nexport const viewElementRegistryKey = 'ViewElementRegistry';\n\n/**\n * @internal\n * @hostPublicApi available through window.creatio.registry.ValidatorRegistry\n */\nexport class ViewElementRegistry extends ɵBaseRegistry {\n\tprotected static override readonly registryKey = viewElementRegistryKey;\n\n\tpublic static validate(config: BaseViewElementRegistrationConfig): void {\n\t\tcheckTypeNameFormat(config.type, 'ViewElementTypeName');\n\t\tcheckOnlyOneRegistration(config.type, config, ViewElementRegistry.viewElements);\n\t}\n\n\tpublic static get viewElements(): Map<string, ViewElementRegistryItem> {\n\t\treturn this.store.typeInfos;\n\t}\n\n\tpublic static register(config: ViewElementRegistryItem): void {\n\t\tthis.viewElements.set(config.type, config);\n\t}\n\n\tpublic static getFormControlRelatesAttribute(type: string): string | null {\n\t\tconst config = this.store.typeInfos.get(type);\n\t\treturn (config && 'formControlConfig' in config && config.formControlConfig?.relatesTo) || null;\n\t}\n}\n","import { InterfaceDesignerRegistryItem } from '../../../internal/models';\nimport { ɵBaseRegistry } from '../../../internal/services/base-registry';\nimport {\n\tcheckCrtTypeNamePascalCase,\n\tcheckOnlyOneRegistration,\n\tcheckTypeNameFormat,\n} from '../../../internal/services/element-registration-checker';\n\n/**\n * @internal\n */\nexport const interfaceDesignerItemRegistryKey = 'InterfaceDesignerItemRegistry';\n/**\n * @internal\n * @hostPublicApi available through window.creatio.registry.InterfaceDesignerItemRegistry\n */\nexport class InterfaceDesignerItemRegistry extends ɵBaseRegistry {\n\tprotected static override readonly registryKey = interfaceDesignerItemRegistryKey;\n\n\tpublic static validate(config: InterfaceDesignerRegistryItem): void {\n\t\tcheckTypeNameFormat(config.type, 'InterfaceDesignerItemTypeName');\n\t\tcheckCrtTypeNamePascalCase(config.type);\n\t\tcheckOnlyOneRegistration<InterfaceDesignerRegistryItem>(\n\t\t\tconfig.type,\n\t\t\tconfig,\n\t\t\tthis.interfaceDesignerItemRegistrationInfos,\n\t\t);\n\t}\n\n\tpublic static register(config: InterfaceDesignerRegistryItem): void {\n\t\tthis.interfaceDesignerItemRegistrationInfos.set(config.type, config);\n\t}\n\n\tpublic static get interfaceDesignerItemRegistrationInfos(): Map<string, InterfaceDesignerRegistryItem> {\n\t\treturn this.store.typeInfos;\n\t}\n\n\tpublic static get(type: string): InterfaceDesignerRegistryItem {\n\t\treturn <InterfaceDesignerRegistryItem>this.interfaceDesignerItemRegistrationInfos.get(type);\n\t}\n}\n","import {Type} from '../../../base-exports';\n\ntype Global = Window & { __crtModuleBootstrapNotifier: BootstrapNotifier };\nconst global: Global = window as unknown as Global;\n\n/**\n * @internal\n */\ninterface Subscription {\n\tunsubscribe: () => void;\n}\n\n/**\n * @internal\n */\ntype Subscriber = (moduleType: Type) => void;\n\n/**\n * @internal\n */\nexport class BootstrapNotifier {\n\tprivate _subscribers = new Set<Subscriber>();\n\n\tpublic static get instance(): BootstrapNotifier {\n\t\tif (!global.__crtModuleBootstrapNotifier) {\n\t\t\tglobal.__crtModuleBootstrapNotifier = new BootstrapNotifier();\n\t\t}\n\t\treturn global.__crtModuleBootstrapNotifier;\n\t}\n\n\tprivate constructor() {\n\t\t// private constructor prevent instantiation via 'new' keyword\n\t}\n\n\tpublic notify(moduleType: Type): void {\n\t\tfor (const subscriber of this._subscribers.values()) {\n\t\t\tsubscriber(moduleType);\n\t\t}\n\t}\n\n\tpublic subscribe(subscriber: Subscriber): Subscription {\n\t\tthis._subscribers.add(subscriber);\n\t\treturn {\n\t\t\tunsubscribe: () => this._subscribers.delete(subscriber),\n\t\t};\n\t}\n}\n","import { HandlerChainServiceRegistryItem } from '../../../internal/models';\nimport {\n\tcheckCrtTypeNamePascalCase,\n\tcheckTypeNameFormat,\n} from '../../../internal/services/element-registration-checker';\nimport { ɵBaseRegistry } from '../base-registry';\n\n/**\n * @internal\n */\nexport class HandlerChainServicesRegistry extends ɵBaseRegistry {\n\tprotected static override readonly registryKey = 'HandlerChainServicesRegistry';\n\n\tprivate static validate({ requestType }: HandlerChainServiceRegistryItem): void {\n\t\tcheckTypeNameFormat(requestType, this.registryKey);\n\t\tcheckCrtTypeNamePascalCase(requestType);\n\t\tthis.checkUniqueRequestType(requestType);\n\t}\n\n\tprivate static checkUniqueRequestType(requestType): void {\n\t\tif (this.services.get(requestType)) {\n\t\t\tthrow new Error(`${requestType} already registered`);\n\t\t}\n\t}\n\n\tpublic static register(config: HandlerChainServiceRegistryItem): void {\n\t\tthis.validate(config);\n\t\tthis.services.set(config.requestType, config);\n\t}\n\n\tpublic static get services(): Map<string, HandlerChainServiceRegistryItem> {\n\t\treturn this.store.typeInfos;\n\t}\n}\n","import { DesignTimeViewElementRegistryItem } from '../../models';\nimport { ɵBaseRegistry } from '../base-registry';\nimport {\n\tcheckCrtTypeNamePascalCase,\n\tcheckOnlyOneRegistration,\n\tcheckTypeNameFormat,\n} from '../element-registration-checker';\n\n/**\n * @internal\n */\nexport const designTimeViewElementRegistryKey = 'DesignTimeViewElementRegistry';\n\n/**\n * @internal\n * @hostPublicApi available through window.creatio.registry.DesignTimeViewElementRegistry\n */\nexport class DesignTimeViewElementRegistry extends ɵBaseRegistry {\n\tprotected static override readonly registryKey = designTimeViewElementRegistryKey;\n\n\tpublic static validate(config: DesignTimeViewElementRegistryItem): void {\n\t\tcheckTypeNameFormat(config.type, 'DesignTimeViewElementRegistryItemTypeName');\n\t\tcheckCrtTypeNamePascalCase(config.type);\n\t\tcheckOnlyOneRegistration<DesignTimeViewElementRegistryItem>(config.type, config, this.infos);\n\t}\n\n\tpublic static register(config: DesignTimeViewElementRegistryItem): void {\n\t\tthis.infos.set(config.type, config);\n\t}\n\n\tpublic static getByOverriddenType(type: string): DesignTimeViewElementRegistryItem | null {\n\t\tconst item = Array.from(this.infos).find(([_, info]) => info.overrideType === type);\n\t\tif (item) {\n\t\t\treturn item[1];\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static get infos(): Map<string, DesignTimeViewElementRegistryItem> {\n\t\treturn this.store.typeInfos;\n\t}\n}\n","import { Type } from '../../../base-exports';\nimport { BaseValidator, ValidatorConfig } from '../../../public/models';\nimport { ValidatorRegistryItem } from '../../models';\nimport { ɵBaseRegistry } from '../base-registry';\nimport { checkTypeNameFormat } from '../element-registration-checker';\n/**\n * @internal\n */\nexport class ValidatorMapValue {\n\tpublic instanceType!: Type;\n\tpublic instanceConfig!: ValidatorConfig;\n}\n\n/**\n * @internal\n */\nexport const validatorRegistryKey = 'ValidatorRegistry';\n\n/**\n * @internal\n * @hostPublicApi available through window.creatio.registry.ValidatorRegistry\n */\nexport class ValidatorRegistry extends ɵBaseRegistry {\n\tprotected static override readonly registryKey = validatorRegistryKey;\n\n\tprivate static _has(configType: string, type: Type<BaseValidator>): boolean {\n\t\treturn ValidatorRegistry.items.has(configType) && ValidatorRegistry.items.get(configType)?.typeRef !== type;\n\t}\n\n\tpublic static validate(config: ValidatorRegistryItem): void {\n\t\tcheckTypeNameFormat(config.type, 'ValidatorTypeName');\n\t\tif (ValidatorRegistry._has(config.type, config.typeRef)) {\n\t\t\tthrow new Error(`Error when register ${config.type}. Element with this type has already exist`);\n\t\t}\n\t}\n\n\tpublic static get items(): Map<string, ValidatorRegistryItem> {\n\t\treturn this.store.typeInfos;\n\t}\n\n\tpublic static register(config: ValidatorRegistryItem): void {\n\t\tthis.items.set(config.type, config);\n\t}\n}\n","import type { RemoteBuildInfo } from '../../models';\nimport { ɵBaseRegistry } from '../base-registry';\n\n/**\n * @internal\n * @dontChange\n */\nexport class RemoteEntriesRegistry extends ɵBaseRegistry {\n\t/**\n\t * @dontChange\n\t */\n\tprotected static override registryKey = 'remotes';\n\n\t/**\n\t * @dontChange\n\t */\n\tpublic static get items(): Map<string, RemoteBuildInfo> {\n\t\treturn this.store.typeInfos;\n\t}\n}\n","import { ViewElementRegistryItem } from '../models';\nimport { ViewElementRegistry } from '../services';\n\n/**\n * @internal\n */\nexport function isComponentPropertyBindable(viewConfigType: string, componentProperty: string): boolean {\n\tconst componentConfig = ViewElementRegistry.viewElements.get(viewConfigType) as ViewElementRegistryItem;\n\tif (!componentConfig?.inputs) {\n\t\treturn false;\n\t}\n\treturn !!componentConfig?.inputs[componentProperty]?.propertyBindable;\n}\n","import 'reflect-metadata';\nimport { Type } from '../../base-exports';\nimport {\n\tBaseValidator,\n\tConverter,\n\tCrtInputRegistrationConfig,\n\tModuleDefinition,\n\tRequestHandlerDefinition,\n\tValidatorConfig,\n\tViewElementRegistrationConfig,\n} from '../../public/models';\nimport { InterfaceDesignerItemDefinition } from '../../public/models/interface-designer-item/interface-designer-item-definition';\nimport { crtInjectPrefix, crtInputPrefix, crtOutputPrefix, crtValidationInputPrefix } from '../constants';\nimport {\n\tAngularViewElementRegistrationConfig,\n\tDesignTimeViewElementRegistryItem,\n\tHandlerChainServiceRegistryItem,\n\tInternalInterfaceDesignerItemRegistrationConfig,\n} from '../models';\n\nconst moduleMetadataKey = 'module';\nconst viewElementMetadataKey = 'viewElement';\nconst interfaceDesignerItemMetadataKey = 'interfaceDesignerItem';\nconst requestHandlerMetadataKey = 'requestHandler';\nconst designTimeViewElementMetadataKey = 'designTimeViewElement';\nconst validatorMetadataKey = 'validator';\nconst converterMetadataKey = 'converter';\n\n/**\n * @internal\n */\nexport type ViewElementMetadata = ViewElementRegistrationConfig | AngularViewElementRegistrationConfig;\n\n/**\n * @internal\n */\nexport type InterfaceDesignerItemMetadata =\n\t| InterfaceDesignerItemDefinition\n\t| InternalInterfaceDesignerItemRegistrationConfig;\n\n/**\n * @internal\n */\nexport type ValidatorMetadata = ValidatorConfig & { typeRef: Type<BaseValidator> };\n\n/**\n * @internal\n */\nexport interface ConverterMetadata { type: string; typeRef: Type<Converter> }\n\n/**\n * @internal\n */\nexport function setModuleMetadata(metadata: ModuleDefinition, type: Type): void {\n\tReflect.defineMetadata(moduleMetadataKey, metadata, type);\n}\n\n/**\n * @internal\n */\nexport function getModuleMetadata(type: Type): ModuleDefinition {\n\tconst metadata = Reflect.getMetadata(moduleMetadataKey, type);\n\tif (!metadata) {\n\t\tthrow new Error(`Module metadata was not found on '${type.name}' class`);\n\t}\n\treturn metadata;\n}\n\n/**\n * @internal\n */\nexport function setViewElementMetadata(metadata: ViewElementMetadata, type: Type): void {\n\tReflect.defineMetadata(viewElementMetadataKey, metadata, type);\n}\n\n/**\n * @internal\n */\nexport function getViewElementMetadata(type: Type): ViewElementMetadata {\n\tconst metadata = Reflect.getMetadata(viewElementMetadataKey, type);\n\tif (!metadata) {\n\t\tthrow new Error(`View element metadata was not found on '${type.name}' class`);\n\t}\n\treturn metadata;\n}\n\n/**\n * @internal\n */\nexport function setValidatorMetadata(metadata: ValidatorMetadata, type: Type): void {\n\tReflect.defineMetadata(validatorMetadataKey, metadata, type);\n}\n\n/**\n * @internal\n */\nexport function getValidatorMetadata(type: Type): ValidatorMetadata {\n\tconst metadata = Reflect.getOwnMetadata(validatorMetadataKey, type);\n\tif (!metadata) {\n\t\tthrow new Error(`Validator metadata was not found on '${type.name}' class`);\n\t}\n\treturn metadata;\n}\n\n/**\n * @internal\n */\nexport function setConverterMetadata(metadata: ConverterMetadata, type: Type): void {\n\tReflect.defineMetadata(converterMetadataKey, metadata, type);\n}\n\n/**\n * @internal\n */\nexport function getConverterMetadata(type: Type): ConverterMetadata {\n\tconst metadata = Reflect.getOwnMetadata(converterMetadataKey, type);\n\tif (!metadata) {\n\t\tthrow new Error(`Converter metadata was not found on '${type.name}' class`);\n\t}\n\treturn metadata;\n}\n\n/**\n * @internal\n */\nexport function setInterfaceDesignerItemMetadata(metadata: InterfaceDesignerItemMetadata, type: Type): void {\n\tReflect.defineMetadata(interfaceDesignerItemMetadataKey, metadata, type);\n}\n\n/**\n * @internal\n */\nexport function getInterfaceDesignerItemMetadata(type: Type): InterfaceDesignerItemMetadata {\n\tconst metadata = Reflect.getOwnMetadata(interfaceDesignerItemMetadataKey, type);\n\tif (!metadata) {\n\t\tthrow new Error(`Interface designer item metadata was not found on '${type.name}' class`);\n\t}\n\treturn metadata;\n}\n\n/**\n * @internal\n */\nexport function setDesignTimeViewElementMetadata(metadata: DesignTimeViewElementRegistryItem, type: Type): void {\n\tReflect.defineMetadata(designTimeViewElementMetadataKey, metadata, type);\n}\n\n/**\n * @internal\n */\nexport function getDesignTimeViewElementMetadata(type: Type): DesignTimeViewElementRegistryItem {\n\tconst metadata = Reflect.getOwnMetadata(designTimeViewElementMetadataKey, type);\n\tif (!metadata) {\n\t\tthrow new Error(`Design time view element metadata was not found on '${type.name}' class`);\n\t}\n\treturn metadata;\n}\n\n/**\n * @internal\n */\nexport function hasInterfaceDesignerItemMetadata(type: Type): boolean {\n\treturn Reflect.hasOwnMetadata(interfaceDesignerItemMetadataKey, type);\n}\n\n/**\n * @internal\n */\nexport function setRequestHandlerMetadata(metadata: RequestHandlerDefinition, type: Type): void {\n\tReflect.defineMetadata(requestHandlerMetadataKey, metadata, type);\n}\n\n/**\n * @internal\n */\nexport function getRequestHandlerMetadata(type: Type): RequestHandlerDefinition {\n\tconst metadata = Reflect.getMetadata(requestHandlerMetadataKey, type);\n\tif (!metadata) {\n\t\tthrow new Error(`Request handler metadata was not found on '${type.name}' class`);\n\t}\n\treturn metadata;\n}\n\n/**\n * @internal\n */\nexport function getHandlerChainServiceMetadata(typeRef: Type): HandlerChainServiceRegistryItem {\n\tconst requestType = Reflect.getMetadata('requestType', typeRef);\n\tif (!requestType) {\n\t\tthrow new Error(`requestType was not found on '${typeRef.name}' class`);\n\t}\n\treturn { requestType, typeRef };\n}\n\n/**\n * @internal\n */\nexport function getCrtInputsMetadata(type: Type): Record<string, CrtInputRegistrationConfig> {\n\tconst keys = Reflect.getMetadataKeys(type);\n\tconst crtInputKeys = keys.filter((x: string) => x.startsWith(crtInputPrefix));\n\treturn Object.fromEntries(\n\t\tcrtInputKeys.map((key) => {\n\t\t\tconst data = Reflect.getMetadata(key, type);\n\t\t\treturn [key.replace(crtInputPrefix, ''), data];\n\t\t}),\n\t);\n}\n\n/**\n * @internal\n */\nexport function getCrtOutputsMetadata(type: Type): Record<string, unknown> {\n\tconst keys = Reflect.getMetadataKeys(type);\n\tconst crtOutputKeys = keys.filter((x: string) => x.startsWith(crtOutputPrefix));\n\treturn Object.fromEntries(\n\t\tcrtOutputKeys.map((key) => {\n\t\t\tconst data = Reflect.getMetadata(key, type);\n\t\t\treturn [key.replace(crtOutputPrefix, ''), data];\n\t\t}),\n\t);\n}\n\n/**\n * @internal\n */\nexport function getCrtValidationInputsMetadata(type: Type): Record<string, unknown> {\n\tconst keys = Reflect.getMetadataKeys(type);\n\tconst crtValidationInputKeys = keys.filter((x: string) => x.startsWith(crtValidationInputPrefix));\n\treturn Object.fromEntries(\n\t\tcrtValidationInputKeys.map((key) => {\n\t\t\tconst data = Reflect.getMetadata(key, type);\n\t\t\treturn [key.replace(crtValidationInputPrefix, ''), data];\n\t\t}),\n\t);\n}\n\n/**\n * @internal\n */\nfunction getCrtInjectMetadata(type: Type): Record<number, unknown> {\n\tconst keys = Reflect.getOwnMetadataKeys(type);\n\tconst crtInjectKeys = keys.filter((x: string) => x.startsWith(crtInjectPrefix));\n\treturn Object.fromEntries(\n\t\tcrtInjectKeys.map((key) => {\n\t\t\tconst index = Number(key.replace(crtInjectPrefix, ''));\n\t\t\tconst data = Reflect.getMetadata(key, type);\n\t\t\treturn [index, data];\n\t\t}),\n\t);\n}\n\n/**\n * @internal\n */\nfunction getParentType(type: Type): Type {\n\tconst parentProto = type.prototype ? Object.getPrototypeOf(type.prototype) : null;\n\treturn parentProto ? parentProto.constructor : null;\n}\n\n/**\n * @internal\n */\nexport function getTypeDependencies(type: Type): unknown[] {\n\tconst paramTypes = Reflect.getOwnMetadata('design:paramtypes', type);\n\tif (!paramTypes) {\n\t\tif (type.length > 0) {\n\t\t\tthrow new Error(\n\t\t\t\t`Dependency Injection error. Cannot read dependencies of class '${type.name}'. ` +\n\t\t\t\t\t`Please make sure class '${type.name}' has decorator and ` +\n\t\t\t\t\t\"'emitDecoratorMetadata' option is enabled in your 'tsconfig.json' file.\",\n\t\t\t);\n\t\t}\n\t\tconst parentType = getParentType(type);\n\t\treturn parentType && parentType !== Object ? getTypeDependencies(parentType) : [];\n\t}\n\tconst crtInjectMetadata = getCrtInjectMetadata(type);\n\tObject.entries(crtInjectMetadata).forEach(([index, token]) => (paramTypes[index] = token));\n\treturn paramTypes;\n}\n","import { getTypeDependencies } from './metadata-utils';\nimport {ResolveDependencyFn, Type} from '../../base-exports';\n\n/**\n * @internal\n */\nexport function instantiate<T = unknown>(type: Type<T>, resolveDependency: ResolveDependencyFn | undefined): T {\n\tconst deps = getTypeDependencies(type);\n\tif (deps.length > 0) {\n\t\tif (!resolveDependency) {\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot resolve dependencies for ${type.name}. ` +\n\t\t\t\t\t\"Please provide 'resolveDependency' bootstrap option\",\n\t\t\t);\n\t\t}\n\t\tconst depInstances = deps.map(resolveDependency);\n\t\treturn new type(...depInstances);\n\t}\n\treturn new type();\n}\n\n/**\n * @public\n * @description For internal use only.\n */\nexport function ɵinstantiate<T = unknown>(type: Type<T>, resolveDependency: ResolveDependencyFn | undefined): T {\n\treturn instantiate<T>(type, resolveDependency);\n}\n","/**\n * @public\n */\nexport class CrtInputRegistrationConfig {\n\t/**\n\t * @internal\n\t */\n\tpublic propertyBindable?: boolean;\n}\n","import { ɵBaseRequest } from '@creatio/base';\n\n/**\n * @public\n * @class DataRequest\n * @description Definition of data source request.\n * @extends {ɵBaseRequest} {@link ɵBaseRequest}\n * @property {string} dataSourceName - name of assigned data source.\n */\nexport class DataRequest extends ɵBaseRequest {\n\t/**\n\t * @description name of assigned data source.\n\t */\n\tpublic readonly dataSourceName!: string;\n}\n","/**\n * @internal\n */\nexport enum ViewElementReuseStrategy {\n\t/**\n\t * Reuse early created view element when it state changed\n\t */\n\tReuse,\n\t/**\n\t * Rerender(recreate) view element when it state changed\n\t */\n\tRerender, // TODO RND-49517\n}\n","import { CrtControlState } from './crt-control-state';\nimport { CrtValidationErrors } from './crt-validation-errors';\nimport { CrtValidatorFn } from './crt-validator-fn';\nimport { ValidatorParametersValues } from './validator-parameter-values';\n\n/**\n * @public\n * @description Abstract Base Validator class for designing custom validators.\n * @example\n * @CrtValidator({\n *    type: 'crt.Required',\n * })\n * export class RequiredValidator extends BaseValidator {\n *    protected override async = false;\n *    public validate(controlState: CrtControlState, params?: ValidatorParametersValues): CrtValidationErrors | null {\n *      Implementation here...\n *    }\n * }\n */\nexport abstract class BaseValidator {\n\t/**\n\t * @internal\n\t * @dontChange\n\t */\n\tprivate static readonly _instanceOfKey = 'devkit_BaseValidator';\n\n\t/**\n\t * @abstract\n\t * @description indicator to recognize whether validator asynchronous or synchronous\n\t */\n\tprotected abstract async: boolean;\n\n\t/**\n\t * @description getter for async/sync indicator\n\t */\n\tpublic get isAsync(): boolean {\n\t\treturn this.async;\n\t}\n\n\t/**\n\t * @description Function used for validation\n\t */\n\tpublic get validateFn(): CrtValidatorFn {\n\t\treturn this.validate.bind(this);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic static [Symbol.hasInstance](instance: BaseValidator): boolean {\n\t\treturn instance?.constructor?.['_instanceOfKey'] === BaseValidator._instanceOfKey;\n\t}\n\n\t/**\n\t * @description Method which contains main logic relates validation.\n\t * @param controlState - {@link CrtControlState}\n\t * @param params - incoming parameters for validation {@link ValidatorParametersValues}\n\t */\n\tpublic abstract validate(\n\t\tcontrolState: CrtControlState,\n\t\tparams?: ValidatorParametersValues,\n\t): CrtValidationErrors | null | Promise<CrtValidationErrors | null>;\n}\n","/**\n * @public\n */\nexport class LocalizableValue {\n\t/**\n\t * @internal\n\t * @dontChange\n\t */\n\tprivate static readonly _instanceOfKey = 'devkit_LocalizableValue';\n\n\tconstructor(public readonly key: string) {}\n\n\t/**\n\t * @internal\n\t */\n\tpublic static [Symbol.hasInstance](instance: LocalizableValue): boolean {\n\t\treturn instance?.constructor?.['_instanceOfKey'] === LocalizableValue._instanceOfKey;\n\t}\n}\n","import { cloneDeep, get, set } from 'lodash';\n\nimport { objectDeepKeys } from './object-deep-keys';\nimport {LocalizeFn} from '../../base-exports';\nimport { LocalizableValue } from '../../public/models';\n\n/**\n * @internal\n */\nexport function applyLocalizeMetadataFn<T extends object>(obj: object, localizeMetadata: LocalizeFn | undefined): T {\n\tconst localizableEntries = objectDeepKeys(obj)\n\t\t.map((path) => ({ path, value: get(obj, path) }))\n\t\t.filter(({ value }) => value instanceof LocalizableValue);\n\tif (localizableEntries.length === 0) {\n\t\treturn obj as T;\n\t}\n\tconst localized = cloneDeep(obj);\n\tif (!localizeMetadata) {\n\t\tconsole.error(\"Unable to localize metadata. 'localizeMetadata' bootstrap option was not provided.\");\n\t}\n\tlocalizableEntries.forEach(({ path, value }) => {\n\t\tconst localizedValue = localizeMetadata?.(value.key) ?? value.key;\n\t\tset(localized, path, localizedValue);\n\t});\n\treturn localized as T;\n}\n","import { Type } from '../../../base-exports';\nimport { DesignTimeViewElementRegistryItem } from '../../models';\nimport { setDesignTimeViewElementMetadata } from '../../utils';\n\n/**\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtDesignTimeViewElement(config: Omit<DesignTimeViewElementRegistryItem, 'typeRef'>) {\n\treturn function (type: Type) {\n\t\tconst registrationConfig: DesignTimeViewElementRegistryItem = {\n\t\t\t...config,\n\t\t\ttypeRef: type,\n\t\t};\n\t\tsetDesignTimeViewElementMetadata(registrationConfig, type);\n\t};\n}\n","import 'reflect-metadata';\nimport {\n\tcheckCrtTypeNamePascalCase,\n\tcheckTypeNameFormat,\n} from '../../../internal/services/element-registration-checker';\nimport { RequestRegistryService } from '../../../internal/services/request-registry';\nimport { RequestRegistrationConfig } from '../../../public/models';\nimport {BaseRequest} from '../../../base-exports';\n\n/**\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtRequest(config: RequestRegistrationConfig) {\n\treturn function (type: new (...args: unknown[]) => BaseRequest): void {\n\t\tcheckTypeNameFormat(config.type, 'RequestTypeName');\n\t\tcheckCrtTypeNamePascalCase(config.type);\n\t\tRequestRegistryService.register(config, type);\n\t};\n}\n","import { BaseInterfaceDesignerItemRegistrationConfig } from './base-interface-designer-item-registration-config';\nimport { ToolbarViewElementConfig } from './toolbar-view-element-config';\nimport { Type } from '../../../base-exports';\nimport { ViewElementGroupType } from '../../enums';\n\n/**\n * @internal\n * @hostPublicApi\n */\nexport class InterfaceDesignerItemRegistrationConfig implements BaseInterfaceDesignerItemRegistrationConfig {\n\tpublic toolbarConfig!: ToolbarViewElementConfig;\n\tpublic viewElementGroupType!: ViewElementGroupType;\n\tpublic typeCaption?: string;\n\tpublic typeRef?: Type;\n}\n","import { ɵBaseRequest } from '@creatio/base';\n\n/**\n * @internal\n * @class MethodInvokeRequest\n * @description Definition of invoke method request.\n * @extends {ɵBaseRequest} {@link ɵBaseRequest}\n * @property {string} method - method name.\n * @property {unknown[]} args - arguments passing to the method.\n */\nexport class MethodInvokeRequest extends ɵBaseRequest {\n\t/**\n\t * @description method name\n\t */\n\tpublic method!: string;\n\t/**\n\t * @description arguments passing to the method\n\t */\n\tpublic args?: unknown[];\n}\n","/**\n * @internal\n */\nexport enum RemoteEntryType {\n\tScript = 'script',\n\tModule = 'module',\n}\n\n/**\n * @internal\n */\nexport interface RemoteBuildInfo {\n\tname: string;\n\tentry: string;\n\tentryType: RemoteEntryType;\n\tmainModule: string;\n\t/**\n\t * @dontChange\n\t */\n\tpackageName: string;\n\tmaintainer: string;\n}\n","import 'reflect-metadata';\nimport { crtInputPrefix } from '../../../internal/constants';\nimport { CrtInputRegistrationConfig } from '../../models/input';\n\n/**\n * @public\n * @description Creatio platform interacts with input's of user-defined component through CrtInput decorator.\n * @param config {@link CrtInputRegistrationConfig}\n *\n * @example\n * export class AppComponent {\n *    @CrtInput()\n *    public value!: string;\n *  }\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtInput(config?: CrtInputRegistrationConfig) {\n\treturn function (target: any, propertyKey: string) {\n\t\tif (!config) {\n\t\t\tconfig = {\n\t\t\t\tpropertyBindable: false,\n\t\t\t};\n\t\t}\n\t\tReflect.defineMetadata(crtInputPrefix + propertyKey.toString(), config, target.constructor);\n\t};\n}\n","import 'reflect-metadata';\nimport { crtOutputPrefix } from '../../../internal/constants';\n\n/**\n * @public\n * @description User-defined components could notify Creatio platform about changes through CrtOutput decorator.\n * @example\n * export class AppComponent {\n *     @Input()\n *     @CrtOutput()\n *     public valueChange;\n *  }\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtOutput() {\n\treturn function (target: any, propertyKey: string) {\n\t\tReflect.defineMetadata(crtOutputPrefix + propertyKey.toString(), {}, target.constructor);\n\t};\n}\n","import 'reflect-metadata';\nimport { crtValidationInputPrefix } from '../../../internal/constants';\n\n/**\n * @public\n * @description User-defined components receive validationInfo changes through CrtValidationInput decorator.\n * Make sure you have defined input for every validationInfo input.\n * To properly declare validationInfo field:\n * 1. Declare input field inside inputs section. For example `value`\n * 2. In validationInputs section declare same field which ends with ValidationInfo.\n * For previous example `valueValidationInfo`\n *\n * @example\n * export class AppComponent {\n *      @CrtInput()\n\t\tpublic value;\n *\n *     \t@CrtValidationInput()\n *      public valueValidationInfo;\n *  }\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtValidationInput() {\n\treturn function (target: any, propertyKey: string) {\n\t\tReflect.defineMetadata(crtValidationInputPrefix + propertyKey.toString(), {}, target.constructor);\n\t};\n}\n","import { Type } from '../../../base-exports';\nimport { AngularViewElementRegistrationConfig } from '../../../internal/models';\nimport { checkTypeNamePascalCase } from '../../../internal/services';\nimport {\n\tgetCrtInputsMetadata,\n\tgetCrtOutputsMetadata,\n\tgetCrtValidationInputsMetadata,\n\tsetViewElementMetadata,\n} from '../../../internal/utils';\nimport { BaseViewElementRegistrationConfig, ViewElementRegistrationConfig } from '../../models';\n// noinspection ES6PreferShortImport\n\n/**\n * @internal\n */\ntype CrtAngularViewElementConfig = Omit<AngularViewElementRegistrationConfig, 'typeRef'>;\n\n/**\n * @public\n * @description CrtViewElement decorator allows user to declare components in Creatio platform.\n * Make sure component is specified in viewElements section of CrtModule.\n * @param config - registration config. {@link ViewElementRegistrationConfig}.\n *\n * @example\n * @CrtViewElement({\n *      type: 'usr.Example',\n *      selector: 'usr-example',\n *  })\n *  export class AppComponent {\n *      @Input()\n *      @CrtInput()\n *      public value!: string;\n *  }\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtViewElement(config: ViewElementRegistrationConfig): (type: Type) => void;\n\n/**\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtViewElement(config: CrtAngularViewElementConfig): (type: Type) => void;\n\n/**\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtViewElement(config: CrtAngularViewElementConfig | ViewElementRegistrationConfig) {\n\treturn function (type: Type): void {\n\t\tcheckTypeNamePascalCase(config.type);\n\t\tconst inputs = getCrtInputsMetadata(type);\n\t\tconst outputs = getCrtOutputsMetadata(type);\n\t\tconst validationInputs = getCrtValidationInputsMetadata(type);\n\t\tconst baseRegistrationConfig: BaseViewElementRegistrationConfig = {\n\t\t\t...config,\n\t\t\tinputs,\n\t\t\toutputs,\n\t\t\tvalidationInputs,\n\t\t};\n\t\tconst registrationConfig =\n\t\t\t'selector' in config\n\t\t\t\t? { ...baseRegistrationConfig, selector: config.selector }\n\t\t\t\t: { ...baseRegistrationConfig, typeRef: type };\n\t\tsetViewElementMetadata(registrationConfig, type);\n\t};\n}\n","import { Type } from '../../../base-exports';\nimport { setModuleMetadata } from '../../../internal/utils';\nimport { ModuleDefinition } from '../../models';\nimport 'reflect-metadata';\n\n/**\n * @public\n * @description CrtModule decorator is a 'container' where user actually setup elements.\n * In could contain viewElements, definitions of other CrtModules.\n * @param moduleDefinition - {@link ModuleDefinition}\n *\n * @example\n *  @CrtModule({\n *      viewElements: [AppComponent],\n *      requestHandlers: [SomeRequestHandler],\n *      validators: [SomeValidator],\n *  })\n *  @NgModule({\n *      declarations: [AppComponent],\n *      imports: [BrowserModule],\n *      providers: [],\n *  })\n *  export class AppModule {}\n */\nexport function CrtModule(moduleDefinition: ModuleDefinition) {\n\treturn (type: Type) => setModuleMetadata(moduleDefinition, type);\n}\n","// noinspection ES6PreferShortImport\nimport {Type} from '../../../base-exports';\nimport { ViewElementGroupType } from '../../../internal/enums';\nimport { InternalInterfaceDesignerItemRegistrationConfig, ToolbarViewElementConfig } from '../../../internal/models';\nimport { setInterfaceDesignerItemMetadata } from '../../../internal/utils';\nimport { InterfaceDesignerItemDefinition } from '../../models';\n\n/**\n * @public\n * @description Decorator to declare design time configuration for view element.\n * @param config - registration config {@link InterfaceDesignerItemDefinition}.\n *\n * @example\n * @CrtViewElement({\n *      type: \"usr.Example',\n *      selector: 'usr-example',\n *  })\n *  @CrtInterfaceDesignerItem({\n *      toolbarConfig: {\n *          caption: 'usrExampleCaption',\n *          icon: require(`!!raw-loader?{esModule:false}!../assets/icon.svg`)\n *          hint: 'usrExampleHint',\n *          defaultPropertyValues: {\n *              value: 'This is default value',\n *          },\n *      },\n *  })\n *  @Component({\n *      selector: 'usr-example',\n *      templateUrl: './app.component.html',\n *      styleUrls: ['./app.component.scss'],\n *      encapsulation: ViewEncapsulation.ShadowDom,\n *  })\n *  export class AppComponent {\n *      @Input()\n *      @CrtInput()\n *      public value!: string;\n *  }\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtInterfaceDesignerItem(config: InterfaceDesignerItemDefinition): (type: Type) => void;\n/**\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtInterfaceDesignerItem(config: InternalInterfaceDesignerItemRegistrationConfig): (type: Type) => void;\n/**\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtInterfaceDesignerItem(\n\tconfig: InterfaceDesignerItemDefinition | InternalInterfaceDesignerItemRegistrationConfig,\n): (type: Type) => void {\n\tfunction _applyTypeCaption(): void {\n\t\tif (!config.typeCaption && config.toolbarConfig) {\n\t\t\tconst toolbarConfig = Array.isArray(config.toolbarConfig)\n\t\t\t\t? config.toolbarConfig[0]\n\t\t\t\t: (config.toolbarConfig as ToolbarViewElementConfig);\n\t\t\tconfig.typeCaption = toolbarConfig.caption;\n\t\t}\n\t}\n\n\treturn function (type: Type): void {\n\t\tconfig.typeRef = type;\n\t\tconfig.viewElementGroupType ??= ViewElementGroupType.CustomElements;\n\t\t_applyTypeCaption();\n\t\tsetInterfaceDesignerItemMetadata(config, type);\n\t};\n}\n","import 'reflect-metadata';\nimport { crtInjectPrefix } from '../../../internal/constants';\n\n/**\n * @public\n * @description\n * Constructor parameter decorator.\n * Mark parameter as dependency that should be obtained by token.\n * @param token - token by which the dependency instance will be obtained\n * @example\n * class MyHandler {\n * \tconstructor(@CrtInject(USER_NAME_TOKEN) userName: string) {}\n * }\n */\nexport function CrtInject(token: unknown) {\n\treturn function (target: any, paramKey: string, paramIndex: number) {\n\t\tReflect.defineMetadata(crtInjectPrefix + paramIndex, token, target);\n\t};\n}\n","import 'reflect-metadata';\nimport {AbstractType, Type} from '../../../base-exports';\nimport { checkTypeNameFormat } from '../../../internal/services';\nimport { setValidatorMetadata } from '../../../internal/utils';\nimport { ValidatorConfig } from '../../models/validation/validator-config';\n\n/**\n * @public\n * @description Decorator to declare validator\n * @param config - validator config {@link ValidatorConfig}.\n * If no config is passed, the validator cannot be declared, but can be used as a base class for another validator.\n *\n * @example\n * @CrtValidator({\n *    type: 'crt.Required',\n * })\n * export class RequiredValidator extends BaseValidator {\n *    protected override async = false;\n *    public validate(controlState: CrtControlState, params?: ValidatorParametersValues): CrtValidationErrors | null {\n *      Implementation here...\n *    }\n * }\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtValidator(config: ValidatorConfig): (type: Type) => void;\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtValidator(): (type: Type | AbstractType) => void;\n/**\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtValidator(config?: ValidatorConfig) {\n\tif (!config) {\n\t\treturn (type: Type | AbstractType) => {\n\t\t\t// the decorator won't do anything by itself,\n\t\t\t// but will be used by the compiler to generate class metadata,\n\t\t\t// which is required for DI\n\t\t};\n\t}\n\treturn function (type: Type): void {\n\t\tcheckTypeNameFormat(config.type, 'ValidatorTypeName');\n\t\tconst registrationConfig = {\n\t\t\t...config,\n\t\t\ttypeRef: type,\n\t\t};\n\t\tsetValidatorMetadata(registrationConfig, type);\n\t};\n}\n","import 'reflect-metadata';\nimport {AbstractType, Type, RequestHandler } from '../../../base-exports';\nimport {\n\tcheckCrtTypeNamePascalCase,\n\tcheckTypeNameFormat,\n} from '../../../internal/services/element-registration-checker';\nimport { setRequestHandlerMetadata } from '../../../internal/utils';\nimport { RequestHandlerDefinition } from '../../../public/models';\n\n/**\n * @public\n * @description Decorator to declare request handler\n * @param config - request handler config {@link RequestHandlerRegistrationConfig}.\n * If no config is passed, the handler cannot be declared, but can be used as a base class for another handler.\n *\n * @example\n * *@CrtRequestHandler({\n *\t requestType: 'crt.SomeRequest',\n *\t type: 'crt.SomeRequestHandler',\n * })\n * export class SectionInitHandler extends BaseRequestHandler<SomeRequest> {\n *   public async handle(request: SomeRequest): Promise<unknown> {\n * \t   // Some business logic\n * \t   return this.next?.handle(request);\n * \t }\n * }\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtRequestHandler<T extends RequestHandler>(config: RequestHandlerDefinition): (type: Type<T>) => void;\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtRequestHandler(): (type: Type | AbstractType) => void;\n/**\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtRequestHandler<T extends RequestHandler>(config?: RequestHandlerDefinition) {\n\tif (!config) {\n\t\treturn (type: Type | AbstractType) => {\n\t\t\t// the decorator won't do anything by itself,\n\t\t\t// but will be used by the compiler to generate class metadata,\n\t\t\t// which is required for DI\n\t\t};\n\t}\n\treturn function (type: Type<T>): void {\n\t\tcheckTypeNameFormat(config.type, 'RequestHandlerTypeName');\n\t\tcheckCrtTypeNamePascalCase(config.type);\n\t\tsetRequestHandlerMetadata(config, type);\n\t};\n}\n","import {AbstractType, Type } from '../../../base-exports';\nimport { checkTypeNameFormat } from '../../../internal/services';\nimport { setConverterMetadata } from '../../../internal/utils';\nimport { ConverterConfig } from '../../../public/models/converter';\n\n/**\n * @public\n * @description Decorator to declare converter\n * @param config - converter config {@link ConverterConfig}.\n * if config is not passed, converter won't be declared,\n * but still can be used as base class for another converter\n *\n * @example\n * @CrtConverter({\n *    type: 'usr.ToBoolean',\n * })\n * export class ToBooleanConverter implements Converter<unknown, boolean> {\n * \tpublic convert(value: unknown): boolean {\n * \t\treturn Boolean(value);\n * \t}\n * }\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtConverter(config: ConverterConfig): (type: Type) => void;\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtConverter(): (type: Type | AbstractType) => void;\n\n/**\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function CrtConverter(config?: ConverterConfig) {\n\tif (!config) {\n\t\treturn (type: Type | AbstractType) => {};\n\t}\n\treturn function (typeRef: Type): void {\n\t\tconst type = typeof config === 'string' ? config : config.type;\n\t\tcheckTypeNameFormat(type, 'converterTypeName');\n\t\tconst registrationConfig = {\n\t\t\ttype: type,\n\t\t\ttypeRef: typeRef,\n\t\t};\n\t\tsetConverterMetadata(registrationConfig, typeRef);\n\t};\n}\n","/**\n * @internal\n */\nexport enum DataSourceLoadType {\n\tLoadNext = 'loadNext',\n\tLoad = 'load',\n\tReload = 'reload',\n}\n","import { ViewElementRegistry } from '../../internal/services';\nimport { ViewElementRegistrationConfig } from '../models';\n\n/**\n * @public\n * @description Function allows to register user-defined component as view element in Creatio platform.\n * @param config - registration config. {@link ViewElementRegistrationConfig}\n * @example\n * sdk.registerViewElement({\n *      type: 'usr.Timeline',\n *      selector: 'usr-timeline',\n *      inputs: {\n *          primaryColumnValue: {},\n *          cardSchemaName: {},\n *          entitySchemaName: {}\n *      }\n * });\n */\nexport function registerViewElement(config: ViewElementRegistrationConfig): void {\n\tViewElementRegistry.validate(config);\n\tViewElementRegistry.register(config);\n}\n","import { Type } from '../../base-exports';\nimport { ViewElementRegistry } from '../../internal/services';\nimport { BaseViewElementRegistrationConfig } from '../models';\n\n/**\n * @internal\n * @description Function allows to register angular component as view element in Creatio platform.\n */\nexport function registerAngularViewElement(config: BaseViewElementRegistrationConfig, typeRef: Type): void {\n\tViewElementRegistry.validate(config);\n\tViewElementRegistry.register({\n\t\t...config,\n\t\ttypeRef,\n\t});\n}\n","import { LocalizeFn, ResolveDependencyFn, Type, BaseRequest } from '../../base-exports';\nimport { HandlerSourceType } from '../../internal/enums';\nimport {\n\tInjectionContext,\n\tInterfaceDesignerRegistryItem,\n\tRemoteBuildInfo,\n\tRequestHandlerRegistrationConfig,\n\tValidatorRegistryItem,\n} from '../../internal/models';\nimport { ConverterRegistryItem } from '../../internal/models/converter';\nimport {\n\tBootstrapNotifier,\n\tConverterRegistry,\n\tDesignTimeViewElementRegistry,\n\tInterfaceDesignerItemRegistry,\n\tRemoteEntriesRegistry,\n\tRequestHandlerRegistryService,\n\tValidatorRegistry,\n\tViewElementRegistry,\n} from '../../internal/services';\nimport { InternalResolveDependencyFn } from '../../internal/types';\nimport {\n\tapplyLocalizeMetadataFn,\n\tgetConverterMetadata,\n\tgetDesignTimeViewElementMetadata,\n\tgetInterfaceDesignerItemMetadata,\n\tgetModuleMetadata,\n\tgetRequestHandlerMetadata,\n\tgetValidatorMetadata,\n\tgetViewElementMetadata,\n\thasInterfaceDesignerItemMetadata,\n\tinstantiate,\n} from '../../internal/utils';\nimport { BaseRequestHandler } from '../../public/handlers';\nimport { BaseValidator, Converter } from '../models';\n\n/**\n * @public\n * @description Module bootstrap options\n */\nexport interface BootstrapOptions {\n\t/**\n\t * Function to be used to translate localizable values of class metadata\n\t */\n\tlocalizeMetadata?: LocalizeFn;\n\t/**\n\t * Function to be used to resolve class dependencies\n\t */\n\tresolveDependency?: ResolveDependencyFn;\n\t/**\n\t * @internal\n\t */\n\tmoduleType?: 'host' | 'remote';\n}\n\nfunction checkRemoteName(remoteName: string): void {\n\tif (!RemoteEntriesRegistry.items.has(remoteName)) {\n\t\tthrow new Error(`Remote entry with name '${remoteName}' does not exist`);\n\t}\n}\n\n/**\n * @internal\n */\nfunction resistantForEach<T>(items: Array<T>, callback: (item: T) => void): void {\n\titems.forEach((item) => {\n\t\ttry {\n\t\t\tcallback(item);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t});\n}\n\n/**\n * @internal\n */\nfunction registerViewElements(types: Type[]): void {\n\tresistantForEach(types, (type) => {\n\t\tconst registrationConfig = getViewElementMetadata(type);\n\t\tViewElementRegistry.validate(registrationConfig);\n\t\tViewElementRegistry.register(registrationConfig);\n\t});\n}\n\n/**\n * @internal\n */\nfunction registerInterfaceDesignerItems(types: Type[], localizeFn?: LocalizeFn): void {\n\tresistantForEach(types, (type) => {\n\t\tif (!hasInterfaceDesignerItemMetadata(type)) {\n\t\t\treturn;\n\t\t}\n\t\tlet config = getInterfaceDesignerItemMetadata(type) as InterfaceDesignerRegistryItem;\n\t\tconfig = applyLocalizeMetadataFn(config, localizeFn);\n\t\tconst viewElementMetadata = getViewElementMetadata(type);\n\t\tconfig.type = viewElementMetadata.type;\n\t\tInterfaceDesignerItemRegistry.validate(config);\n\t\tInterfaceDesignerItemRegistry.register(config);\n\t});\n}\n\n/**\n * @internal\n */\nfunction registerDesignTimeViewElements(types: Type[]): void {\n\tresistantForEach(types, (type) => {\n\t\tconst registrationConfig = getDesignTimeViewElementMetadata(type);\n\t\tDesignTimeViewElementRegistry.validate(registrationConfig);\n\t\tDesignTimeViewElementRegistry.register(registrationConfig);\n\t});\n}\n\n/**\n * @internal\n */\nfunction registerValidators(types: Type<BaseValidator>[], options?: BootstrapOptions): void {\n\tresistantForEach(types, (type) => {\n\t\tconst metadata = getValidatorMetadata(type);\n\t\tconst registrationConfig: ValidatorRegistryItem = {\n\t\t\t...metadata,\n\t\t\tinstantiate: function (injectionContext?: InjectionContext) {\n\t\t\t\tconst resolveDependency = options?.resolveDependency\n\t\t\t\t\t? (token) => (<InternalResolveDependencyFn>options.resolveDependency)(token, injectionContext)\n\t\t\t\t\t: null;\n\t\t\t\treturn instantiate(type, <ResolveDependencyFn>resolveDependency);\n\t\t\t},\n\t\t};\n\t\tValidatorRegistry.validate(registrationConfig);\n\t\tValidatorRegistry.register(registrationConfig);\n\t});\n}\n\n/**\n * @internal\n */\nfunction registerConverters(types: Type<Converter>[], options?: BootstrapOptions): void {\n\tresistantForEach(types, (type) => {\n\t\tconst metadata = getConverterMetadata(type);\n\t\tconst registrationConfig: ConverterRegistryItem = {\n\t\t\t...metadata,\n\t\t\tinstantiate: function (injectionContext?: InjectionContext) {\n\t\t\t\tconst resolveDependency = options?.resolveDependency\n\t\t\t\t\t? (token) => (<InternalResolveDependencyFn>options.resolveDependency)(token, injectionContext)\n\t\t\t\t\t: null;\n\t\t\t\treturn instantiate(type, <ResolveDependencyFn>resolveDependency);\n\t\t\t},\n\t\t};\n\t\tConverterRegistry.register(registrationConfig);\n\t});\n}\n\n/**\n * @internal\n */\nfunction registerRequestHandlers(\n\ttypes: Type<BaseRequestHandler>[],\n\toptions: BootstrapOptions,\n\tremoteName?: string,\n): void {\n\tif (options.moduleType === 'remote' && !remoteName) {\n\t\tconsole.error(\"To use request handlers, 'remoteName' parameter should be specified.\");\n\t\treturn;\n\t}\n\tresistantForEach(types, (type) => {\n\t\tconst metadata = getRequestHandlerMetadata(type);\n\t\tlet registrationConfig: RequestHandlerRegistrationConfig;\n\t\tconst createHandler = (\n\t\t\tinjectionContext?: InjectionContext,\n\t\t): BaseRequestHandler<BaseRequest<unknown>, unknown> => {\n\t\t\tconst resolveDependency = options?.resolveDependency\n\t\t\t\t? (token) => (<InternalResolveDependencyFn>options.resolveDependency)(token, injectionContext)\n\t\t\t\t: null;\n\t\t\treturn instantiate(type, <ResolveDependencyFn>resolveDependency);\n\t\t};\n\t\tif (options.moduleType === 'host') {\n\t\t\tregistrationConfig = {\n\t\t\t\t...metadata,\n\t\t\t\tsource: { type: HandlerSourceType.Host },\n\t\t\t\tcreateHandler,\n\t\t\t};\n\t\t} else {\n\t\t\tconst remote = RemoteEntriesRegistry.items.get(<string>remoteName) as RemoteBuildInfo;\n\t\t\tregistrationConfig = {\n\t\t\t\t...metadata,\n\t\t\t\tsource: {\n\t\t\t\t\ttype: HandlerSourceType.Remote,\n\t\t\t\t\tpackageName: remote.packageName,\n\t\t\t\t},\n\t\t\t\tcreateHandler,\n\t\t\t};\n\t\t}\n\t\tRequestHandlerRegistryService.register(registrationConfig, type);\n\t});\n}\n\nfunction bootstrapDefaultCrtModule(name: string | undefined, type: Type, options: BootstrapOptions): void {\n\ttry {\n\t\tconst moduleDefinition = getModuleMetadata(type);\n\t\tif (moduleDefinition.viewElements) {\n\t\t\tregisterViewElements(moduleDefinition.viewElements);\n\t\t\tregisterInterfaceDesignerItems(moduleDefinition.viewElements, options?.localizeMetadata);\n\t\t}\n\t\tif (moduleDefinition.designTimeViewElements) {\n\t\t\tregisterDesignTimeViewElements(moduleDefinition.designTimeViewElements);\n\t\t}\n\t\tif (moduleDefinition.requestHandlers) {\n\t\t\tregisterRequestHandlers(moduleDefinition.requestHandlers, options, name);\n\t\t}\n\t\tif (moduleDefinition.validators) {\n\t\t\tregisterValidators(moduleDefinition.validators, options);\n\t\t}\n\t\tif (moduleDefinition.converters) {\n\t\t\tregisterConverters(moduleDefinition.converters, options);\n\t\t}\n\t\tmoduleDefinition.includes?.forEach((t) => {\n\t\t\tbootstrapDefaultCrtModule(name, t, options);\n\t\t\tbootstrapPredefinedModules(name, t, options);\n\t\t});\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\n/**\n * @internal\n */\nfunction bootstrapPredefinedModules(name: string | undefined, type: Type, options: BootstrapOptions): void {\n\tconst modulePrefix = 'module:';\n\tconst metadataKeys: string[] = Reflect.getOwnMetadataKeys(type);\n\tfor (const key of metadataKeys) {\n\t\tif (typeof key === 'string' && key.startsWith(modulePrefix)) {\n\t\t\tconst moduleType = key.substring(modulePrefix.length);\n\t\t\tconst predefinedBootstrapper = Reflect.getOwnMetadata('moduleBootstrapper:' + moduleType, type);\n\t\t\ttry {\n\t\t\t\tpredefinedBootstrapper(name, type, options);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @internal\n */\nexport function bootstrapCrtModule(type: Type, options: BootstrapOptions & { moduleType: 'host' }): void;\n/**\n * @public\n * @description Function required to bootstrapping elements defined in CrtModules.\n * Call this function as soon as possible during bootstrapping your application.\n * @param type - module type\n * @param options - {@link BootstrapOptions}\n *\n * @example\n * bootstrapCrtModule(AppModule)\n */\nexport function bootstrapCrtModule(remoteName: string, type: Type, options?: BootstrapOptions): void;\n/**\n * @public\n * @deprecated\n */\nexport function bootstrapCrtModule(type: Type, options?: BootstrapOptions): void;\n/**\n * @internal\n */\nexport function bootstrapCrtModule(...args: unknown[]): void {\n\tconst name: string | undefined = typeof args[0] === 'string' ? <string>args.shift() : undefined;\n\tconst type = <Type>args[0];\n\tconst options = <BootstrapOptions>args[1] ?? {};\n\toptions.moduleType ??= 'remote';\n\tif (name) {\n\t\tif (options.moduleType === 'remote') {\n\t\t\tcheckRemoteName(name);\n\t\t} else {\n\t\t\tthrow new Error('Host module cannot have name');\n\t\t}\n\t}\n\tbootstrapDefaultCrtModule(name, type, options);\n\tbootstrapPredefinedModules(name, type, options);\n\tif (options.moduleType === 'remote') {\n\t\tBootstrapNotifier.instance.notify(type);\n\t}\n}\n","import { LocalizableValue } from '../models';\n\n/**\n * @public\n * @description Use this function in decorators to indicate that a value should be localized.\n * Note that the \"localizeMetadata\" bootstrap option should be provided,\n * otherwise the value cannot be localized.\n *\n * @example\n *\n * ### Using 'localize' in decorator\n * ```ts\n * @CrtInterfaceDesignerItem({\n *    toolbarConfig: {\n *      caption: localize('MyElement.Caption')\n * \t  }\n * })\n * class MyElement {}\n * ```\n * ### Passing 'localizeMetadata' bootstrap option\n * ```ts\n * bootstrapCrtModule(MyModule, {\n *    localizeMetadata: (key: string) => thirdPartyTranslateService.translate(key)\n * });\n * ```\n */\nexport function localize(key: string): LocalizableValue {\n\treturn new LocalizableValue(key);\n}\n","import { Type } from '../../base-exports';\nimport { HandlerChainServicesRegistry } from '../../internal/services';\nimport { getHandlerChainServiceMetadata, getModuleMetadata } from '../../internal/utils';\n\n/**\n * @internal\n */\nfunction registerHandlerChainServices(types: Type<unknown>[] | undefined): void {\n\ttypes?.forEach((type) => {\n\t\tconst registrationConfig = getHandlerChainServiceMetadata(type);\n\t\tHandlerChainServicesRegistry.register(registrationConfig);\n\t});\n}\n\n/**\n * @internal\n */\nfunction _bootstrapCrtModuleHandlerChainServices(type: Type): void {\n\tconst moduleDefinition = getModuleMetadata(type);\n\tif (moduleDefinition.handlerChainServices) {\n\t\tregisterHandlerChainServices(moduleDefinition.handlerChainServices);\n\t}\n\tmoduleDefinition.includes?.forEach((t) => _bootstrapCrtModuleHandlerChainServices(t));\n}\n\n/**\n * @internal\n */\nexport function bootstrapCrtModuleHandlerChainServices(type: Type): void {\n\t_bootstrapCrtModuleHandlerChainServices(type);\n}\n","import { ɵBaseRequest, ɵNextHandlerAlreadySpecifiedException, ɵRequestHandler } from '@creatio/base';\n\nimport { HandlerChainService } from '../../public/services/handler-chain/handler-chain.service';\n\n/**\n * @public\n * @abstract\n * @classdesc Class for designing request handlers.\n */\nexport abstract class BaseRequestHandler<TRequest = ɵBaseRequest, TResult = unknown>\n\timplements ɵRequestHandler<TRequest, TResult>\n{\n\t/**\n\t * @internal\n\t * @dontChange\n\t */\n\tprivate static readonly _instanceOfKey = 'devkit_BaseRequestHandler';\n\n\tprivate _next?: ɵRequestHandler;\n\n\tprotected handlerChain = HandlerChainService.instance;\n\n\tprotected get next(): ɵRequestHandler | undefined {\n\t\treturn this._next;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic static [Symbol.hasInstance](instance: BaseRequestHandler): boolean {\n\t\treturn instance?.constructor?.['_instanceOfKey'] === BaseRequestHandler._instanceOfKey;\n\t}\n\n\t/**\n\t * @abstract\n\t * @description Abstract async method which contains logic to handle request properly.\n\t * @param {TRequest} request - {@link ɵBaseRequest}\n\t */\n\tpublic abstract handle(request: TRequest): Promise<TResult>;\n\n\t/**\n\t * @description Method to set request handler to handler chain.\n\t * @param next - link for next request handler - {@link ɵRequestHandler}\n\t */\n\tpublic setNext(next: ɵRequestHandler): void {\n\t\tif (this._next) {\n\t\t\tthrow new ɵNextHandlerAlreadySpecifiedException();\n\t\t}\n\t\tthis._next = next;\n\t}\n}\n","export abstract class BaseHandlerChainService {\n\t/**\n\t * @internal\n\t */\n\tpublic abstract readonly requestType: string;\n}\n","import { ImplementUsingHandlerChain } from '../../../internal/decorators/implement-using-handler-chain';\nimport { BaseHandlerChainService } from '../../../internal/services/base-handler-chain.service';\n/**\n * @public\n * @classdesc Service to working with Creatio platform features using handler chain\n * @extends {BaseHandlerChainService}\n */\nexport class FeatureService extends BaseHandlerChainService {\n\t/**\n\t * @internal\n\t */\n\tpublic readonly requestType = 'crt.FeatureService';\n\t/**\n\t * @description Method designed to get state for single feature\n\t * @param {string} code - feature code\n\t * @returns `Promise<boolean>`\n\t */\n\t@ImplementUsingHandlerChain()\n\tpublic getFeatureState!: (code: string) => Promise<boolean>;\n\n\t/**\n\t * @description Method designed to get feature states\n\t * @param {string[]} codes - feature codes\n\t * @returns `Promise<boolean[]>`\n\t */\n\t@ImplementUsingHandlerChain()\n\tpublic getFeaturesState!: (codes: string[]) => Promise<boolean[]>;\n}\n","import { ImplementUsingHandlerChain } from '../../../internal/decorators/implement-using-handler-chain';\nimport { BaseHandlerChainService } from '../../../internal/services/base-handler-chain.service';\n\n/**\n * @public\n * @classdesc Service to working rights using handler chain\n * @extends {BaseHandlerChainService}\n */\nexport class RightsService extends BaseHandlerChainService {\n\t/**\n\t * @internal\n\t */\n\tpublic readonly requestType = 'crt.RightsService';\n\n\t/**\n\t * @description Method to recognize whether user can execute operation\n\t * @param {string} operationName - operation name\n\t * @returns `Promise<boolean>`\n\t */\n\t@ImplementUsingHandlerChain()\n\tpublic getCanExecuteOperation!: (operationName: string) => Promise<boolean>;\n\n\t/**\n\t * @description Method to recognize whether user can execute operations\n\t * @param {string[]} operationNames - operation names\n\t * @returns `Promise<boolean[]>`\n\t */\n\t@ImplementUsingHandlerChain()\n\tpublic getCanExecuteOperations!: (operationNames: string[]) => Promise<boolean[]>;\n}\n","import { SysSetting, SysSettingValue } from './sys-setting.model';\nimport { ImplementUsingHandlerChain } from '../../../internal/decorators/implement-using-handler-chain';\nimport { BaseHandlerChainService } from '../../../internal/services/base-handler-chain.service';\nimport { BaseResponse } from '../../models';\n\n/**\n * @public\n * @description Response for querying of system settings\n * @extends {BaseResponse}\n * @property {Record<string, SysSetting>} values - system settings values\n */\nexport interface QuerySysSettingsResponse extends BaseResponse {\n\t/**\n\t * @type {Record<string, SysSetting>}\n\t * @description system settings values. {@link SysSetting}\n\t */\n\tvalues: Record<string, SysSetting>;\n\n\t/**\n\t * @type {Array<string>}\n\t * @description not found system settings codes.\n\t */\n\tnotFoundSettings?: Array<string>;\n}\n\n/**\n * @public\n * @description Response for saving system settings\n * @extends {BaseResponse}\n * @property {Record<string, any>} saveResult - saving result\n * @property {number} rowsAffected -  Count of affected rows\n */\nexport interface SaveSysSettingsResponse extends BaseResponse {\n\t/**\n\t * @description saving result\n\t */\n\tsaveResult: Record<string, any>;\n\n\t/**\n\t * @description Count of affected rows\n\t */\n\trowsAffected: number;\n\n\t/**\n\t * @internal\n\t * @description\n\t */\n\tnextPrcElReady: boolean;\n}\n\n/**\n * @public\n * @description Response for preload cachable system settings.\n * @extends {BaseResponse}\n * @property {Record<string, SysSetting>} values - system settings values\n */\nexport interface PreloadSysSettingsResponse extends BaseResponse {\n\t/**\n\t * @type {Record<string, SysSetting>}\n\t * @description system settings values. {@link SysSetting}\n\t */\n\tvalues: Record<string, SysSetting>;\n}\n\n/**\n * @public\n * @class SysSettingsService\n * @classdesc Service to working with system settings using handler chain\n * @extends {BaseHandlerChainService}\n */\n// TODO RND-45286 (implement BaseSysSettingsService)\nexport class SysSettingsService extends BaseHandlerChainService {\n\t/**\n\t * @internal\n\t */\n\tpublic readonly requestType = 'crt.SysSettingsService';\n\n\t/**\n\t * @description Method to get system settings by codes\n\t * @param {string[]} sysSettingCodes - system settings codes\n\t * @returns `Promise<QuerySysSettingsResponse>` {@link QuerySysSettingsResponse}\n\t */\n\t@ImplementUsingHandlerChain()\n\tpublic getByCodes!: (sysSettingCodes: string[]) => Promise<QuerySysSettingsResponse>;\n\n\t/**\n\t * @description Method to get system setting by code\n\t * @param {string} sysSettingCode - system settings code\n\t * @returns `Promise<SysSetting>`\n\t */\n\t@ImplementUsingHandlerChain()\n\tpublic getByCode!: (sysSettingCode: string) => Promise<SysSetting>;\n\n\t/**\n\t * @description Method to update system setting\n\t * @param {SysSettingValue} sysSettingValue - {@link SysSettingValue}\n\t * @param {Boolean} isPersonal - Flag that indicates that sysSetting value is personal.\n\t * @returns `Promise<SaveSysSettingsResponse>` {@link SaveSysSettingsResponse}\n\t */\n\t@ImplementUsingHandlerChain()\n\tpublic update!: (sysSettingValue: SysSettingValue, isPersonal?: boolean) => Promise<SaveSysSettingsResponse>;\n\n\t/**\n\t * @description  Method to bulk update system settings\n\t * @param {SysSettingValue[]} sysSettingValues - system settings values {@link SysSettingValue}\n\t * @param {Boolean} isPersonal - Flag that indicates that sysSetting values are personal.\n\t * @returns `Promise<SaveSysSettingsResponse>` {@link SaveSysSettingsResponse}\n\t */\n\t@ImplementUsingHandlerChain()\n\tpublic updateMany!: (sysSettingValues: SysSettingValue[], isPersonal?: boolean) => Promise<SaveSysSettingsResponse>;\n}\n","import { ɵDataValueType, ɵGuid } from '@creatio/base';\n\n/**\n * @public\n * @class SysSetting\n * @classdesc Class contains info related system setting\n * @property {ɵGuid} id - id of system setting.\n * @property {string} name - name of system setting.\n * @property {string} code - code of system setting.\n * @property {isCacheable} boolean - indicator whether system setting is cacheable\n * @property {any} value - value of system setting\n * @property {string} displayValue - display value of system setting\n * @property {ɵDataValueType} ɵDataValueType - system setting {@link ɵDataValueType}\n */\nexport class SysSetting {\n\t/**\n\t * @description id of system setting\n\t */\n\tpublic id?: ɵGuid;\n\n\t/**\n\t * @description name of system setting\n\t */\n\tpublic name?: string;\n\n\t/**\n\t * @description code of system setting\n\t */\n\tpublic code?: string;\n\n\t/**\n\t * @description indicator whether system setting is cacheable\n\t */\n\tpublic isCacheable?: boolean;\n\n\t/**\n\t * @description value of system setting\n\t */\n\tpublic value?: any;\n\n\t/**\n\t * @description display value of system setting\n\t */\n\tpublic displayValue?: string;\n\n\t/**\n\t * @description system setting {@link ɵDataValueType}\n\t */\n\tpublic dataValueType?: ɵDataValueType;\n}\n\n/**\n * @public\n * @class SysSettingValue\n * @classdesc Shape to describe system setting value\n * @property {string} code - code of system setting\n * @property {any} value - value of system setting\n */\n\nexport class SysSettingValue {\n\t/**\n\t * @description code of system setting.\n\t */\n\tpublic code?: string;\n\n\t/**\n\t * @description value of system setting\n\t */\n\tpublic value?: any;\n}\n","import { SysValues } from './sys-values';\nimport { ImplementUsingHandlerChain } from '../../../internal/decorators/implement-using-handler-chain';\nimport { BaseHandlerChainService } from '../../../internal/services/base-handler-chain.service';\n\n/**\n * @public\n * @classdesc\n * @class SysValuesService  Service to working with system values using handler chain\n * @extends {BaseHandlerChainService}\n */\nexport class SysValuesService extends BaseHandlerChainService {\n\t/**\n\t * @internal\n\t */\n\tpublic readonly requestType = 'crt.SysValuesService';\n\n\t/**\n\t * @description Method to load system values\n\t * @returns `Promise<SysValues>` {@link SysValues}\n\t */\n\t@ImplementUsingHandlerChain()\n\tpublic loadSysValues!: () => Promise<SysValues>;\n}\n","import { HttpHeaders } from './http-headers';\nimport { HttpResponse } from './http-response';\nimport { ImplementUsingHandlerChain } from '../../../internal/decorators/implement-using-handler-chain';\nimport { BaseHandlerChainService } from '../../../internal/services/base-handler-chain.service';\n\n/**\n * @public\n * @classdesc Http service to perform Http requests\n * @extends {BaseHandlerChainService}\n */\nexport class HttpClientService extends BaseHandlerChainService {\n\t/**\n\t * @internal\n\t */\n\tpublic readonly requestType = 'crt.HttpClientService';\n\n\tpublic get(\n\t\turl: string,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType: 'arraybuffer';\n\t\t},\n\t): Promise<HttpResponse<ArrayBuffer>>;\n\n\tpublic get(\n\t\turl: string,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType: 'blob';\n\t\t},\n\t): Promise<HttpResponse<Blob>>;\n\n\tpublic get(\n\t\turl: string,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType: 'text';\n\t\t},\n\t): Promise<HttpResponse<string>>;\n\n\tpublic get(\n\t\turl: string,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType?: 'json';\n\t\t},\n\t): Promise<HttpResponse>;\n\n\tpublic get<T>(\n\t\turl: string,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType?: 'json';\n\t\t},\n\t): Promise<HttpResponse<T>>;\n\n\t/**\n\t * @description HTTP GET request.\n\t * @return `Promise<HttpResponse> | void`  {(Promise<HttpResponse> | void)}\n\t */\n\t@ImplementUsingHandlerChain()\n\tpublic get(): Promise<HttpResponse> | void {\n\t\t// the method will be implemented dynamically by the decorator\n\t}\n\n\tpublic post(\n\t\turl: string,\n\t\tbody: unknown | null,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType: 'arraybuffer';\n\t\t},\n\t): Promise<HttpResponse<ArrayBuffer>>;\n\n\tpublic post(\n\t\turl: string,\n\t\tbody: unknown | null,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType: 'blob';\n\t\t},\n\t): Promise<HttpResponse<Blob>>;\n\n\tpublic post(\n\t\turl: string,\n\t\tbody: unknown | null,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType: 'text';\n\t\t},\n\t): Promise<HttpResponse<string>>;\n\n\tpublic post(\n\t\turl: string,\n\t\tbody: unknown | null,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType?: 'json';\n\t\t},\n\t): Promise<HttpResponse>;\n\n\tpublic post<T>(\n\t\turl: string,\n\t\tbody: unknown | null,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType?: 'json';\n\t\t},\n\t): Promise<HttpResponse<T>>;\n\n\t/**\n\t * @description HTTP POST request.\n\t * @return `Promise<HttpResponse> | void`  {(Promise<HttpResponse> | void)}\n\t */\n\t@ImplementUsingHandlerChain()\n\tpublic post(): Promise<HttpResponse> | void {\n\t\t// the method will be implemented dynamically by the decorator\n\t}\n\n\tpublic delete(\n\t\turl: string,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType: 'arraybuffer';\n\t\t\tbody?: unknown | null;\n\t\t},\n\t): Promise<HttpResponse<ArrayBuffer>>;\n\n\tpublic delete(\n\t\turl: string,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType: 'blob';\n\t\t\tbody?: unknown | null;\n\t\t},\n\t): Promise<HttpResponse<Blob>>;\n\n\tpublic delete(\n\t\turl: string,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType: 'text';\n\t\t\tbody?: unknown | null;\n\t\t},\n\t): Promise<HttpResponse<string>>;\n\n\tpublic delete(\n\t\turl: string,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType?: 'json';\n\t\t\tbody?: unknown | null;\n\t\t},\n\t): Promise<HttpResponse>;\n\n\tpublic delete<T>(\n\t\turl: string,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType?: 'json';\n\t\t\tbody?: unknown | null;\n\t\t},\n\t): Promise<HttpResponse<T>>;\n\n\t/**\n\t * @description HTTP DELETE request.\n\t * @return `Promise<HttpResponse> | void`  {(Promise<HttpResponse> | void)}\n\t */\n\t@ImplementUsingHandlerChain()\n\tpublic delete(): Promise<HttpResponse> | void {\n\t\t// the method will be implemented dynamically by the decorator\n\t}\n\n\tpublic put(\n\t\turl: string,\n\t\tbody: unknown | null,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType: 'arraybuffer';\n\t\t},\n\t): Promise<HttpResponse<ArrayBuffer>>;\n\n\tpublic put(\n\t\turl: string,\n\t\tbody: unknown | null,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType: 'blob';\n\t\t},\n\t): Promise<HttpResponse<Blob>>;\n\n\tpublic put(\n\t\turl: string,\n\t\tbody: unknown | null,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType: 'text';\n\t\t},\n\t): Promise<HttpResponse<string>>;\n\n\tpublic put(\n\t\turl: string,\n\t\tbody: unknown | null,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType?: 'json';\n\t\t},\n\t): Promise<HttpResponse>;\n\n\tpublic put<T>(\n\t\turl: string,\n\t\tbody: unknown | null,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType?: 'json';\n\t\t},\n\t): Promise<HttpResponse<T>>;\n\n\t/**\n\t * @description HTTP PUT request.\n\t * @return `Promise<HttpResponse> | void``  {(Promise<HttpResponse> | void)}\n\t */\n\t@ImplementUsingHandlerChain()\n\tpublic put(): Promise<HttpResponse> | void {\n\t\t// the method will be implemented dynamically by the decorator\n\t}\n\n\tpublic patch(\n\t\turl: string,\n\t\tbody: unknown | null,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType: 'arraybuffer';\n\t\t},\n\t): Promise<HttpResponse<ArrayBuffer>>;\n\n\tpublic patch(\n\t\turl: string,\n\t\tbody: unknown | null,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType: 'blob';\n\t\t},\n\t): Promise<HttpResponse<Blob>>;\n\n\tpublic patch(\n\t\turl: string,\n\t\tbody: unknown | null,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType: 'text';\n\t\t},\n\t): Promise<HttpResponse<string>>;\n\n\tpublic patch(\n\t\turl: string,\n\t\tbody: unknown | null,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType?: 'json';\n\t\t},\n\t): Promise<HttpResponse>;\n\n\tpublic patch<T>(\n\t\turl: string,\n\t\tbody: unknown | null,\n\t\toptions: {\n\t\t\theaders?: HttpHeaders;\n\t\t\tresponseType?: 'json';\n\t\t},\n\t): Promise<HttpResponse<T>>;\n\n\t/**\n\t * @description HTTP PATCH request.\n\t * @return `Promise<HttpResponse> | void`  {(Promise<HttpResponse> | void)}\n\t */\n\t@ImplementUsingHandlerChain()\n\tpublic patch(): Promise<HttpResponse> | void {\n\t\t// the method will be implemented dynamically by the decorator\n\t}\n}\n","import {BaseRequest, ViewModelContext} from '../../../base-exports';\n\n/**\n * @internal\n */\nexport enum SchemaViewMaskRequestAction {\n\tAddTask = 'addTask',\n\tRemoveTask = 'removeTask',\n}\n\n/**\n * @internal\n */\nexport class SchemaViewMaskRequest extends BaseRequest {\n\tpublic override readonly type = 'crt.SchemaViewMaskRequest';\n\n\tconstructor(\n\t\tpublic readonly action: SchemaViewMaskRequestAction,\n\t\tpublic readonly taskName: string,\n\t\tpublic readonly $context: ViewModelContext,\n\t) {\n\t\tsuper();\n\t}\n}\n","import { SchemaViewMaskRequest, SchemaViewMaskRequestAction } from './schema-view-mask.request';\nimport { ImplementUsingHandlerChain } from '../../../internal/decorators/implement-using-handler-chain';\nimport { BaseHandlerChainService } from '../../../internal/services/base-handler-chain.service';\nimport { MaskSettings } from '../../models';\nimport { HandlerChainService } from '../handler-chain';\nimport {ViewModelContext} from '../../../base-exports';\n\n/**\n * @public\n * @classdesc Service to working with mask using handler chain\n * @extends {BaseHandlerChainService}\n */\nexport class MaskService extends BaseHandlerChainService {\n\t/**\n\t * @internal\n\t */\n\tpublic readonly requestType = 'crt.MaskService';\n\n\t/**\n\t * @description Method to show body mask on the page\n\t * @param {MaskSettings} settings - mask settings {@link MaskSettings}\n\t */\n\t@ImplementUsingHandlerChain()\n\tpublic showBodyMask!: (settings?: MaskSettings) => Promise<void>;\n\n\t/**\n\t * @description Method to hide body mask\n\t */\n\t@ImplementUsingHandlerChain()\n\tpublic hideBodyMask!: () => Promise<void>;\n\n\t/**\n\t * @internal\n\t * @param taskName\n\t * @param context\n\t */\n\tpublic async showMask(taskName: string, context: ViewModelContext): Promise<void> {\n\t\tconst request = new SchemaViewMaskRequest(SchemaViewMaskRequestAction.AddTask, taskName, context);\n\t\tawait HandlerChainService.instance.process(request);\n\t}\n\n\t/**\n\t * @internal\n\t * @param taskName\n\t * @param context\n\t */\n\tpublic async hideMask(taskName: string, context: ViewModelContext): Promise<void> {\n\t\tconst request = new SchemaViewMaskRequest(SchemaViewMaskRequestAction.RemoveTask, taskName, context);\n\t\tawait HandlerChainService.instance.process(request);\n\t}\n}\n","import { BaseModel, DataSchema } from '../../../base-exports';\nimport { DataSourceAttribute } from '../../../base-exports';\nimport { DataSourceCanExecuteOperationPayload, DataSourceCanExecuteOperationResult } from '../../../base-exports';\nimport { DataSourceParameters } from '../../../base-exports';\nimport { DataSourceLoadOptions } from '../../../base-exports';\nimport { DataSourceConfig } from '../../../base-exports';\nimport { JsonArray, JsonObject } from '../../../base-exports';\nimport { DataSourceSaveResult } from '../../../base-exports';\nimport { ImplementUsingHandlerChain } from '../../../internal/decorators/implement-using-handler-chain';\nimport { BaseHandlerChainService } from '../../../internal/services/base-handler-chain.service';\n\n/**\n * @internal\n */\nexport const _from = Symbol('CreateModelFrom');\n\n/**\n * @public\n */\nexport class Model extends BaseHandlerChainService implements BaseModel<DataSourceLoadOptions> {\n\tprivate static _instance: Model;\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tprivate _crtModel!: any;\n\n\t/**\n\t * @internal\n\t */\n\tpublic readonly requestType = 'crt.ModelGenerator';\n\n\tprivate constructor(crtModel?: unknown) {\n\t\tsuper();\n\t\tthis._crtModel = crtModel;\n\t}\n\n\tprivate static get instance(): Model {\n\t\tif (!this._instance) {\n\t\t\tthis._instance = new Model();\n\t\t}\n\t\treturn this._instance;\n\t}\n\n\t/**\n\t * @internal\n\t * Gets the model name.\n\t */\n\tpublic get name(): string {\n\t\treturn this._crtModel?.name;\n\t}\n\n\t@ImplementUsingHandlerChain({\n\t\tmethodName: 'generateOne',\n\t})\n\tprivate _create!: (config: DataSourceConfig, name: string) => Promise<Model>;\n\n\t/**\n\t * @internal\n\t */\n\tpublic static [_from](crtModel?: unknown): Model {\n\t\treturn new Model(crtModel);\n\t}\n\n\tpublic static async create(dataSchema: string): Promise<Model> {\n\t\tconst crtModel = await this.instance._create(\n\t\t\t{\n\t\t\t\ttype: 'crt.EntityDataSource',\n\t\t\t\tconfig: {\n\t\t\t\t\tentitySchemaName: dataSchema,\n\t\t\t\t},\n\t\t\t},\n\t\t\t'',\n\t\t);\n\t\treturn new Model(crtModel);\n\t}\n\n\tpublic getSchema(): Promise<DataSchema> {\n\t\treturn this._crtModel._getAsyncResult(this._crtModel.getSchema());\n\t}\n\n\tpublic load(config?: {\n\t\tattributes?: string[] | DataSourceAttribute[];\n\t\tparameters?: DataSourceParameters;\n\t\tloadOptions?: DataSourceLoadOptions;\n\t}): Promise<JsonArray> {\n\t\treturn this._crtModel._getAsyncResult(this._crtModel.load(config));\n\t}\n\n\tpublic insert(dto: JsonObject): Promise<DataSourceSaveResult> {\n\t\treturn this._crtModel._getAsyncResult(this._crtModel.insert(dto));\n\t}\n\n\tpublic update(dto: JsonObject, parameters: DataSourceParameters): Promise<DataSourceSaveResult> {\n\t\treturn this._crtModel._getAsyncResult(this._crtModel.update(dto, parameters));\n\t}\n\n\tpublic copy(primaryColumnValue: string, data: JsonObject = {}): Promise<JsonObject> {\n\t\treturn this._crtModel._getAsyncResult(this._crtModel.copy(primaryColumnValue, data));\n\t}\n\n\tpublic create(data: JsonObject = {}): Promise<JsonObject> {\n\t\treturn this._crtModel._getAsyncResult(this._crtModel.create(data));\n\t}\n\n\tpublic delete(parameters: DataSourceParameters): Promise<DataSourceSaveResult> {\n\t\treturn this._crtModel._getAsyncResult(this._crtModel.delete(parameters));\n\t}\n\n\tpublic canSave(params: DataSourceCanExecuteOperationPayload): Promise<DataSourceCanExecuteOperationResult> {\n\t\treturn this._crtModel._getAsyncResult(this._crtModel.canSave(params));\n\t}\n\n\tpublic canDelete(params: DataSourceCanExecuteOperationPayload): Promise<DataSourceCanExecuteOperationResult> {\n\t\treturn this._crtModel._getAsyncResult(this._crtModel.canDelete(params));\n\t}\n}\n","import { ImplementUsingHandlerChain } from '../../../internal/decorators';\nimport { BaseHandlerChainService } from '../../../internal/services/base-handler-chain.service';\n\n/**\n * @public\n * @classdesc Service to handling a way of tasks execution in Creatio plaform\n * @extends {BaseHandlerChainService}\n */\nexport class CrtZoneService extends BaseHandlerChainService {\n\t/**\n\t * @internal\n\t */\n\tpublic readonly requestType = 'crt.ZoneService';\n\t/**\n\t * @description Method designed to run task outside of Creatio zone\n\t * @param {Function} callback - task which should be executed outside of tracking CrtZone\n\t * @returns `unknown`\n\t */\n\t@ImplementUsingHandlerChain()\n\tpublic runOutside!: (callback: () => unknown) => unknown;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["AggregationFunction","AggregationType","AggregationEvalType","DatePartType","FunctionType","OrderDirection","global","generateGuid","NextHandlerAlreadySpecifiedException","BaseRequest"],"mappings":"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"}