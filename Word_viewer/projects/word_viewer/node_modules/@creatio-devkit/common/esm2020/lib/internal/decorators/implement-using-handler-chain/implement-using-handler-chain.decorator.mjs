import { HandlerChainService } from '../../../public/services/handler-chain/handler-chain.service';
/**
 * @internal
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
export function ImplementUsingHandlerChain(config) {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    return function (target, method, descriptor) {
        const methodImplementation = function (...args) {
            return HandlerChainService.instance.process({
                type: config?.requestType ? config.requestType : this.requestType,
                method: config?.methodName ? config.methodName : method,
                args,
            });
        };
        if (descriptor) {
            descriptor.value = methodImplementation;
        }
        else {
            target[method] = methodImplementation;
        }
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wbGVtZW50LXVzaW5nLWhhbmRsZXItY2hhaW4uZGVjb3JhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9kZXZraXQvY29tbW9uL3NyYy9saWIvaW50ZXJuYWwvZGVjb3JhdG9ycy9pbXBsZW1lbnQtdXNpbmctaGFuZGxlci1jaGFpbi9pbXBsZW1lbnQtdXNpbmctaGFuZGxlci1jaGFpbi5kZWNvcmF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sOERBQThELENBQUM7QUFFbkc7O0dBRUc7QUFDSCxnRUFBZ0U7QUFDaEUsTUFBTSxVQUFVLDBCQUEwQixDQUFDLE1BQXNEO0lBQ2hHLDhEQUE4RDtJQUM5RCxPQUFPLFVBQVUsTUFBcUMsRUFBRSxNQUFjLEVBQUUsVUFBeUM7UUFDaEgsTUFBTSxvQkFBb0IsR0FBRyxVQUF5QyxHQUFHLElBQWU7WUFDdkYsT0FBTyxtQkFBbUIsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDO2dCQUMzQyxJQUFJLEVBQUUsTUFBTSxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVc7Z0JBQ2pFLE1BQU0sRUFBRSxNQUFNLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxNQUFNO2dCQUN2RCxJQUFJO2FBQ21CLENBQUMsQ0FBQztRQUMzQixDQUFDLENBQUM7UUFDRixJQUFJLFVBQVUsRUFBRTtZQUNmLFVBQVUsQ0FBQyxLQUFLLEdBQUcsb0JBQW9CLENBQUM7U0FDeEM7YUFBTTtZQUNMLE1BQTZDLENBQUMsTUFBTSxDQUFDLEdBQUcsb0JBQW9CLENBQUM7U0FDOUU7SUFDRixDQUFDLENBQUM7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWV0aG9kSW52b2tlUmVxdWVzdCB9IGZyb20gJy4uLy4uLy4uL2ludGVybmFsL21vZGVscyc7XG5pbXBvcnQgeyBCYXNlSGFuZGxlckNoYWluU2VydmljZSB9IGZyb20gJy4uLy4uLy4uL2ludGVybmFsL3NlcnZpY2VzL2Jhc2UtaGFuZGxlci1jaGFpbi5zZXJ2aWNlJztcbmltcG9ydCB7IEhhbmRsZXJDaGFpblNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9wdWJsaWMvc2VydmljZXMvaGFuZGxlci1jaGFpbi9oYW5kbGVyLWNoYWluLnNlcnZpY2UnO1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG5leHBvcnQgZnVuY3Rpb24gSW1wbGVtZW50VXNpbmdIYW5kbGVyQ2hhaW4oY29uZmlnPzogeyByZXF1ZXN0VHlwZT86IHN0cmluZzsgbWV0aG9kTmFtZT86IHN0cmluZyB9KSB7XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5cdHJldHVybiBmdW5jdGlvbiAodGFyZ2V0OiBCYXNlSGFuZGxlckNoYWluU2VydmljZSB8IGFueSwgbWV0aG9kOiBzdHJpbmcsIGRlc2NyaXB0b3I/OiBUeXBlZFByb3BlcnR5RGVzY3JpcHRvcjxhbnk+KSB7XG5cdFx0Y29uc3QgbWV0aG9kSW1wbGVtZW50YXRpb24gPSBmdW5jdGlvbiAodGhpczogQmFzZUhhbmRsZXJDaGFpblNlcnZpY2UsIC4uLmFyZ3M6IHVua25vd25bXSkge1xuXHRcdFx0cmV0dXJuIEhhbmRsZXJDaGFpblNlcnZpY2UuaW5zdGFuY2UucHJvY2Vzcyh7XG5cdFx0XHRcdHR5cGU6IGNvbmZpZz8ucmVxdWVzdFR5cGUgPyBjb25maWcucmVxdWVzdFR5cGUgOiB0aGlzLnJlcXVlc3RUeXBlLFxuXHRcdFx0XHRtZXRob2Q6IGNvbmZpZz8ubWV0aG9kTmFtZSA/IGNvbmZpZy5tZXRob2ROYW1lIDogbWV0aG9kLFxuXHRcdFx0XHRhcmdzLFxuXHRcdFx0fSBhcyBNZXRob2RJbnZva2VSZXF1ZXN0KTtcblx0XHR9O1xuXHRcdGlmIChkZXNjcmlwdG9yKSB7XG5cdFx0XHRkZXNjcmlwdG9yLnZhbHVlID0gbWV0aG9kSW1wbGVtZW50YXRpb247XG5cdFx0fSBlbHNlIHtcblx0XHRcdCh0YXJnZXQgYXMgdW5rbm93biBhcyBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPilbbWV0aG9kXSA9IG1ldGhvZEltcGxlbWVudGF0aW9uO1xuXHRcdH1cblx0fTtcbn1cbiJdfQ==