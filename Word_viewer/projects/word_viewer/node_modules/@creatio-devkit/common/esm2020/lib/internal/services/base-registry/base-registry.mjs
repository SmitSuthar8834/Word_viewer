import { get, set } from 'lodash';
const global = window;
/**
 * @public
 * @description For internal use only.
 * @hostPublicApi
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
export class ɵBaseRegistry {
    constructor() {
        /**
         * @hostPubicApi available through window.creatio.registry.<registryKey>.store
         */
        this.store = {
            typeInfos: new Map(),
        };
    }
    static get store() {
        if (!this._instance) {
            let globalInstance = get(global, this._prefix + this.registryKey);
            if (!globalInstance) {
                globalInstance = new this();
                set(global, this._prefix + this.registryKey, globalInstance);
            }
            this._instance = globalInstance;
        }
        return this._instance.store;
    }
}
ɵBaseRegistry._prefix = 'creatio.registry.';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1yZWdpc3RyeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvZGV2a2l0L2NvbW1vbi9zcmMvbGliL2ludGVybmFsL3NlcnZpY2VzL2Jhc2UtcmVnaXN0cnkvYmFzZS1yZWdpc3RyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUNsQyxNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUM7QUFZdEI7Ozs7R0FJRztBQUNILGdFQUFnRTtBQUNoRSxNQUFNLE9BQU8sYUFBYTtJQUExQjtRQWtCQzs7V0FFRztRQUNPLFVBQUssR0FBd0I7WUFDdEMsU0FBUyxFQUFFLElBQUksR0FBRyxFQUFFO1NBQ3BCLENBQUM7SUFDSCxDQUFDO0lBbEJVLE1BQU0sS0FBSyxLQUFLO1FBQ3pCLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ3BCLElBQUksY0FBYyxHQUFHLEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7WUFDbEUsSUFBSSxDQUFDLGNBQWMsRUFBRTtnQkFDcEIsY0FBYyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7Z0JBQzVCLEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLGNBQWMsQ0FBQyxDQUFDO2FBQzdEO1lBQ0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxjQUFjLENBQUM7U0FDaEM7UUFDRCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDO0lBQzdCLENBQUM7O0FBZnVCLHFCQUFPLEdBQUcsbUJBQW1CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXQsIHNldCB9IGZyb20gJ2xvZGFzaCc7XG5jb25zdCBnbG9iYWwgPSB3aW5kb3c7XG5cbi8qKlxuICogQHB1YmxpY1xuICogQGRlc2NyaXB0aW9uIEZvciBpbnRlcm5hbCB1c2Ugb25seS5cbiAqIEBob3N0UHVibGljQXBpXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmludGVyZmFjZSDJtVJlZ2lzdHJ5SXRlbXNTdG9yZSB7XG5cdHR5cGVJbmZvczogTWFwPHN0cmluZywgYW55Pjtcbn1cblxuLyoqXG4gKiBAcHVibGljXG4gKiBAZGVzY3JpcHRpb24gRm9yIGludGVybmFsIHVzZSBvbmx5LlxuICogQGhvc3RQdWJsaWNBcGlcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuZXhwb3J0IGNsYXNzIMm1QmFzZVJlZ2lzdHJ5IHtcblx0cHJpdmF0ZSBzdGF0aWMgcmVhZG9ubHkgX3ByZWZpeCA9ICdjcmVhdGlvLnJlZ2lzdHJ5Lic7XG5cdHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZTogybVCYXNlUmVnaXN0cnk7XG5cblx0cHJvdGVjdGVkIHN0YXRpYyByZWFkb25seSByZWdpc3RyeUtleTogc3RyaW5nO1xuXG5cdHByb3RlY3RlZCBzdGF0aWMgZ2V0IHN0b3JlKCk6IMm1UmVnaXN0cnlJdGVtc1N0b3JlIHtcblx0XHRpZiAoIXRoaXMuX2luc3RhbmNlKSB7XG5cdFx0XHRsZXQgZ2xvYmFsSW5zdGFuY2UgPSBnZXQoZ2xvYmFsLCB0aGlzLl9wcmVmaXggKyB0aGlzLnJlZ2lzdHJ5S2V5KTtcblx0XHRcdGlmICghZ2xvYmFsSW5zdGFuY2UpIHtcblx0XHRcdFx0Z2xvYmFsSW5zdGFuY2UgPSBuZXcgdGhpcygpO1xuXHRcdFx0XHRzZXQoZ2xvYmFsLCB0aGlzLl9wcmVmaXggKyB0aGlzLnJlZ2lzdHJ5S2V5LCBnbG9iYWxJbnN0YW5jZSk7XG5cdFx0XHR9XG5cdFx0XHR0aGlzLl9pbnN0YW5jZSA9IGdsb2JhbEluc3RhbmNlO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcy5faW5zdGFuY2Uuc3RvcmU7XG5cdH1cblxuXHQvKipcblx0ICogQGhvc3RQdWJpY0FwaSBhdmFpbGFibGUgdGhyb3VnaCB3aW5kb3cuY3JlYXRpby5yZWdpc3RyeS48cmVnaXN0cnlLZXk+LnN0b3JlXG5cdCAqL1xuXHRwcm90ZWN0ZWQgc3RvcmU6IMm1UmVnaXN0cnlJdGVtc1N0b3JlID0ge1xuXHRcdHR5cGVJbmZvczogbmV3IE1hcCgpLFxuXHR9O1xufVxuIl19