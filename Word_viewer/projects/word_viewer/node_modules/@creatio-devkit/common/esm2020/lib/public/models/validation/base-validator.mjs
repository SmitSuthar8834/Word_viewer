/**
 * @public
 * @description Abstract Base Validator class for designing custom validators.
 * @example
 * @CrtValidator({
 *    type: 'crt.Required',
 * })
 * export class RequiredValidator extends BaseValidator {
 *    protected override async = false;
 *    public validate(controlState: CrtControlState, params?: ValidatorParametersValues): CrtValidationErrors | null {
 *      Implementation here...
 *    }
 * }
 */
export class BaseValidator {
    /**
     * @description getter for async/sync indicator
     */
    get isAsync() {
        return this.async;
    }
    /**
     * @description Function used for validation
     */
    get validateFn() {
        return this.validate.bind(this);
    }
    /**
     * @internal
     */
    static [Symbol.hasInstance](instance) {
        return instance?.constructor?.['_instanceOfKey'] === BaseValidator._instanceOfKey;
    }
}
/**
 * @internal
 * @dontChange
 */
BaseValidator._instanceOfKey = 'devkit_BaseValidator';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS12YWxpZGF0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2RldmtpdC9jb21tb24vc3JjL2xpYi9wdWJsaWMvbW9kZWxzL3ZhbGlkYXRpb24vYmFzZS12YWxpZGF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0E7Ozs7Ozs7Ozs7Ozs7R0FhRztBQUNILE1BQU0sT0FBZ0IsYUFBYTtJQWFsQzs7T0FFRztJQUNILElBQVcsT0FBTztRQUNqQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDbkIsQ0FBQztJQUVEOztPQUVHO0lBQ0gsSUFBVyxVQUFVO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLFFBQXVCO1FBQ3pELE9BQU8sUUFBUSxFQUFFLFdBQVcsRUFBRSxDQUFDLGdCQUFnQixDQUFDLEtBQUssYUFBYSxDQUFDLGNBQWMsQ0FBQztJQUNuRixDQUFDOztBQS9CRDs7O0dBR0c7QUFDcUIsNEJBQWMsR0FBRyxzQkFBc0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENydENvbnRyb2xTdGF0ZSB9IGZyb20gJy4vY3J0LWNvbnRyb2wtc3RhdGUnO1xuaW1wb3J0IHsgQ3J0VmFsaWRhdGlvbkVycm9ycyB9IGZyb20gJy4vY3J0LXZhbGlkYXRpb24tZXJyb3JzJztcbmltcG9ydCB7IENydFZhbGlkYXRvckZuIH0gZnJvbSAnLi9jcnQtdmFsaWRhdG9yLWZuJztcbmltcG9ydCB7IFZhbGlkYXRvclBhcmFtZXRlcnNWYWx1ZXMgfSBmcm9tICcuL3ZhbGlkYXRvci1wYXJhbWV0ZXItdmFsdWVzJztcblxuLyoqXG4gKiBAcHVibGljXG4gKiBAZGVzY3JpcHRpb24gQWJzdHJhY3QgQmFzZSBWYWxpZGF0b3IgY2xhc3MgZm9yIGRlc2lnbmluZyBjdXN0b20gdmFsaWRhdG9ycy5cbiAqIEBleGFtcGxlXG4gKiBAQ3J0VmFsaWRhdG9yKHtcbiAqICAgIHR5cGU6ICdjcnQuUmVxdWlyZWQnLFxuICogfSlcbiAqIGV4cG9ydCBjbGFzcyBSZXF1aXJlZFZhbGlkYXRvciBleHRlbmRzIEJhc2VWYWxpZGF0b3Ige1xuICogICAgcHJvdGVjdGVkIG92ZXJyaWRlIGFzeW5jID0gZmFsc2U7XG4gKiAgICBwdWJsaWMgdmFsaWRhdGUoY29udHJvbFN0YXRlOiBDcnRDb250cm9sU3RhdGUsIHBhcmFtcz86IFZhbGlkYXRvclBhcmFtZXRlcnNWYWx1ZXMpOiBDcnRWYWxpZGF0aW9uRXJyb3JzIHwgbnVsbCB7XG4gKiAgICAgIEltcGxlbWVudGF0aW9uIGhlcmUuLi5cbiAqICAgIH1cbiAqIH1cbiAqL1xuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEJhc2VWYWxpZGF0b3Ige1xuXHQvKipcblx0ICogQGludGVybmFsXG5cdCAqIEBkb250Q2hhbmdlXG5cdCAqL1xuXHRwcml2YXRlIHN0YXRpYyByZWFkb25seSBfaW5zdGFuY2VPZktleSA9ICdkZXZraXRfQmFzZVZhbGlkYXRvcic7XG5cblx0LyoqXG5cdCAqIEBhYnN0cmFjdFxuXHQgKiBAZGVzY3JpcHRpb24gaW5kaWNhdG9yIHRvIHJlY29nbml6ZSB3aGV0aGVyIHZhbGlkYXRvciBhc3luY2hyb25vdXMgb3Igc3luY2hyb25vdXNcblx0ICovXG5cdHByb3RlY3RlZCBhYnN0cmFjdCBhc3luYzogYm9vbGVhbjtcblxuXHQvKipcblx0ICogQGRlc2NyaXB0aW9uIGdldHRlciBmb3IgYXN5bmMvc3luYyBpbmRpY2F0b3Jcblx0ICovXG5cdHB1YmxpYyBnZXQgaXNBc3luYygpOiBib29sZWFuIHtcblx0XHRyZXR1cm4gdGhpcy5hc3luYztcblx0fVxuXG5cdC8qKlxuXHQgKiBAZGVzY3JpcHRpb24gRnVuY3Rpb24gdXNlZCBmb3IgdmFsaWRhdGlvblxuXHQgKi9cblx0cHVibGljIGdldCB2YWxpZGF0ZUZuKCk6IENydFZhbGlkYXRvckZuIHtcblx0XHRyZXR1cm4gdGhpcy52YWxpZGF0ZS5iaW5kKHRoaXMpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEBpbnRlcm5hbFxuXHQgKi9cblx0cHVibGljIHN0YXRpYyBbU3ltYm9sLmhhc0luc3RhbmNlXShpbnN0YW5jZTogQmFzZVZhbGlkYXRvcik6IGJvb2xlYW4ge1xuXHRcdHJldHVybiBpbnN0YW5jZT8uY29uc3RydWN0b3I/LlsnX2luc3RhbmNlT2ZLZXknXSA9PT0gQmFzZVZhbGlkYXRvci5faW5zdGFuY2VPZktleTtcblx0fVxuXG5cdC8qKlxuXHQgKiBAZGVzY3JpcHRpb24gTWV0aG9kIHdoaWNoIGNvbnRhaW5zIG1haW4gbG9naWMgcmVsYXRlcyB2YWxpZGF0aW9uLlxuXHQgKiBAcGFyYW0gY29udHJvbFN0YXRlIC0ge0BsaW5rIENydENvbnRyb2xTdGF0ZX1cblx0ICogQHBhcmFtIHBhcmFtcyAtIGluY29taW5nIHBhcmFtZXRlcnMgZm9yIHZhbGlkYXRpb24ge0BsaW5rIFZhbGlkYXRvclBhcmFtZXRlcnNWYWx1ZXN9XG5cdCAqL1xuXHRwdWJsaWMgYWJzdHJhY3QgdmFsaWRhdGUoXG5cdFx0Y29udHJvbFN0YXRlOiBDcnRDb250cm9sU3RhdGUsXG5cdFx0cGFyYW1zPzogVmFsaWRhdG9yUGFyYW1ldGVyc1ZhbHVlcyxcblx0KTogQ3J0VmFsaWRhdGlvbkVycm9ycyB8IG51bGwgfCBQcm9taXNlPENydFZhbGlkYXRpb25FcnJvcnMgfCBudWxsPjtcbn1cbiJdfQ==