import { ɵBaseRegistry } from '../base-registry';
import { checkCrtTypeNamePascalCase, checkOnlyOneRegistration, checkTypeNameFormat, } from '../element-registration-checker';
/**
 * @internal
 */
export const designTimeViewElementRegistryKey = 'DesignTimeViewElementRegistry';
/**
 * @internal
 * @hostPublicApi available through window.creatio.registry.DesignTimeViewElementRegistry
 */
export class DesignTimeViewElementRegistry extends ɵBaseRegistry {
    static validate(config) {
        checkTypeNameFormat(config.type, 'DesignTimeViewElementRegistryItemTypeName');
        checkCrtTypeNamePascalCase(config.type);
        checkOnlyOneRegistration(config.type, config, this.infos);
    }
    static register(config) {
        this.infos.set(config.type, config);
    }
    static getByOverriddenType(type) {
        const item = Array.from(this.infos).find(([_, info]) => info.overrideType === type);
        if (item) {
            return item[1];
        }
        return null;
    }
    static get infos() {
        return this.store.typeInfos;
    }
}
DesignTimeViewElementRegistry.registryKey = designTimeViewElementRegistryKey;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVzaWduLXRpbWUtdmlldy1lbGVtZW50LXJlZ2lzdHJ5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9kZXZraXQvY29tbW9uL3NyYy9saWIvaW50ZXJuYWwvc2VydmljZXMvZGVzaWduLXRpbWUtdmlldy1lbGVtZW50LXJlZ2lzdHJ5L2Rlc2lnbi10aW1lLXZpZXctZWxlbWVudC1yZWdpc3RyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDakQsT0FBTyxFQUNOLDBCQUEwQixFQUMxQix3QkFBd0IsRUFDeEIsbUJBQW1CLEdBQ25CLE1BQU0saUNBQWlDLENBQUM7QUFFekM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxnQ0FBZ0MsR0FBRywrQkFBK0IsQ0FBQztBQUVoRjs7O0dBR0c7QUFDSCxNQUFNLE9BQU8sNkJBQThCLFNBQVEsYUFBYTtJQUd4RCxNQUFNLENBQUMsUUFBUSxDQUFDLE1BQXlDO1FBQy9ELG1CQUFtQixDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsMkNBQTJDLENBQUMsQ0FBQztRQUM5RSwwQkFBMEIsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDeEMsd0JBQXdCLENBQW9DLE1BQU0sQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM5RixDQUFDO0lBRU0sTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUF5QztRQUMvRCxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFTSxNQUFNLENBQUMsbUJBQW1CLENBQUMsSUFBWTtRQUM3QyxNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFlBQVksS0FBSyxJQUFJLENBQUMsQ0FBQztRQUNwRixJQUFJLElBQUksRUFBRTtZQUNULE9BQU8sSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ2Y7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7SUFFTSxNQUFNLEtBQUssS0FBSztRQUN0QixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDO0lBQzdCLENBQUM7O0FBdEJrQyx5Q0FBVyxHQUFHLGdDQUFnQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGVzaWduVGltZVZpZXdFbGVtZW50UmVnaXN0cnlJdGVtIH0gZnJvbSAnLi4vLi4vbW9kZWxzJztcbmltcG9ydCB7IMm1QmFzZVJlZ2lzdHJ5IH0gZnJvbSAnLi4vYmFzZS1yZWdpc3RyeSc7XG5pbXBvcnQge1xuXHRjaGVja0NydFR5cGVOYW1lUGFzY2FsQ2FzZSxcblx0Y2hlY2tPbmx5T25lUmVnaXN0cmF0aW9uLFxuXHRjaGVja1R5cGVOYW1lRm9ybWF0LFxufSBmcm9tICcuLi9lbGVtZW50LXJlZ2lzdHJhdGlvbi1jaGVja2VyJztcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNvbnN0IGRlc2lnblRpbWVWaWV3RWxlbWVudFJlZ2lzdHJ5S2V5ID0gJ0Rlc2lnblRpbWVWaWV3RWxlbWVudFJlZ2lzdHJ5JztcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqIEBob3N0UHVibGljQXBpIGF2YWlsYWJsZSB0aHJvdWdoIHdpbmRvdy5jcmVhdGlvLnJlZ2lzdHJ5LkRlc2lnblRpbWVWaWV3RWxlbWVudFJlZ2lzdHJ5XG4gKi9cbmV4cG9ydCBjbGFzcyBEZXNpZ25UaW1lVmlld0VsZW1lbnRSZWdpc3RyeSBleHRlbmRzIMm1QmFzZVJlZ2lzdHJ5IHtcblx0cHJvdGVjdGVkIHN0YXRpYyBvdmVycmlkZSByZWFkb25seSByZWdpc3RyeUtleSA9IGRlc2lnblRpbWVWaWV3RWxlbWVudFJlZ2lzdHJ5S2V5O1xuXG5cdHB1YmxpYyBzdGF0aWMgdmFsaWRhdGUoY29uZmlnOiBEZXNpZ25UaW1lVmlld0VsZW1lbnRSZWdpc3RyeUl0ZW0pOiB2b2lkIHtcblx0XHRjaGVja1R5cGVOYW1lRm9ybWF0KGNvbmZpZy50eXBlLCAnRGVzaWduVGltZVZpZXdFbGVtZW50UmVnaXN0cnlJdGVtVHlwZU5hbWUnKTtcblx0XHRjaGVja0NydFR5cGVOYW1lUGFzY2FsQ2FzZShjb25maWcudHlwZSk7XG5cdFx0Y2hlY2tPbmx5T25lUmVnaXN0cmF0aW9uPERlc2lnblRpbWVWaWV3RWxlbWVudFJlZ2lzdHJ5SXRlbT4oY29uZmlnLnR5cGUsIGNvbmZpZywgdGhpcy5pbmZvcyk7XG5cdH1cblxuXHRwdWJsaWMgc3RhdGljIHJlZ2lzdGVyKGNvbmZpZzogRGVzaWduVGltZVZpZXdFbGVtZW50UmVnaXN0cnlJdGVtKTogdm9pZCB7XG5cdFx0dGhpcy5pbmZvcy5zZXQoY29uZmlnLnR5cGUsIGNvbmZpZyk7XG5cdH1cblxuXHRwdWJsaWMgc3RhdGljIGdldEJ5T3ZlcnJpZGRlblR5cGUodHlwZTogc3RyaW5nKTogRGVzaWduVGltZVZpZXdFbGVtZW50UmVnaXN0cnlJdGVtIHwgbnVsbCB7XG5cdFx0Y29uc3QgaXRlbSA9IEFycmF5LmZyb20odGhpcy5pbmZvcykuZmluZCgoW18sIGluZm9dKSA9PiBpbmZvLm92ZXJyaWRlVHlwZSA9PT0gdHlwZSk7XG5cdFx0aWYgKGl0ZW0pIHtcblx0XHRcdHJldHVybiBpdGVtWzFdO1xuXHRcdH1cblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdHB1YmxpYyBzdGF0aWMgZ2V0IGluZm9zKCk6IE1hcDxzdHJpbmcsIERlc2lnblRpbWVWaWV3RWxlbWVudFJlZ2lzdHJ5SXRlbT4ge1xuXHRcdHJldHVybiB0aGlzLnN0b3JlLnR5cGVJbmZvcztcblx0fVxufVxuIl19