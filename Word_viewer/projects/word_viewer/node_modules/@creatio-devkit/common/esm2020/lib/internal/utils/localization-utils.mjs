import { cloneDeep, get, set } from 'lodash';
import { objectDeepKeys } from './object-deep-keys';
import { LocalizableValue } from '../../public/models';
/**
 * @internal
 */
export function applyLocalizeMetadataFn(obj, localizeMetadata) {
    const localizableEntries = objectDeepKeys(obj)
        .map((path) => ({ path, value: get(obj, path) }))
        .filter(({ value }) => value instanceof LocalizableValue);
    if (localizableEntries.length === 0) {
        return obj;
    }
    const localized = cloneDeep(obj);
    if (!localizeMetadata) {
        console.error("Unable to localize metadata. 'localizeMetadata' bootstrap option was not provided.");
    }
    localizableEntries.forEach(({ path, value }) => {
        const localizedValue = localizeMetadata?.(value.key) ?? value.key;
        set(localized, path, localizedValue);
    });
    return localized;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWxpemF0aW9uLXV0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9kZXZraXQvY29tbW9uL3NyYy9saWIvaW50ZXJuYWwvdXRpbHMvbG9jYWxpemF0aW9uLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUU3QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFcEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFdkQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsdUJBQXVCLENBQW1CLEdBQVcsRUFBRSxnQkFBd0M7SUFDOUcsTUFBTSxrQkFBa0IsR0FBRyxjQUFjLENBQUMsR0FBRyxDQUFDO1NBQzVDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDaEQsTUFBTSxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLENBQUMsS0FBSyxZQUFZLGdCQUFnQixDQUFDLENBQUM7SUFDM0QsSUFBSSxrQkFBa0IsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1FBQ3BDLE9BQU8sR0FBUSxDQUFDO0tBQ2hCO0lBQ0QsTUFBTSxTQUFTLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2pDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtRQUN0QixPQUFPLENBQUMsS0FBSyxDQUFDLG9GQUFvRixDQUFDLENBQUM7S0FDcEc7SUFDRCxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFO1FBQzlDLE1BQU0sY0FBYyxHQUFHLGdCQUFnQixFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUM7UUFDbEUsR0FBRyxDQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUUsY0FBYyxDQUFDLENBQUM7SUFDdEMsQ0FBQyxDQUFDLENBQUM7SUFDSCxPQUFPLFNBQWMsQ0FBQztBQUN2QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2xvbmVEZWVwLCBnZXQsIHNldCB9IGZyb20gJ2xvZGFzaCc7XG5cbmltcG9ydCB7IG9iamVjdERlZXBLZXlzIH0gZnJvbSAnLi9vYmplY3QtZGVlcC1rZXlzJztcbmltcG9ydCB7TG9jYWxpemVGbn0gZnJvbSAnLi4vLi4vYmFzZS1leHBvcnRzJztcbmltcG9ydCB7IExvY2FsaXphYmxlVmFsdWUgfSBmcm9tICcuLi8uLi9wdWJsaWMvbW9kZWxzJztcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFwcGx5TG9jYWxpemVNZXRhZGF0YUZuPFQgZXh0ZW5kcyBvYmplY3Q+KG9iajogb2JqZWN0LCBsb2NhbGl6ZU1ldGFkYXRhOiBMb2NhbGl6ZUZuIHwgdW5kZWZpbmVkKTogVCB7XG5cdGNvbnN0IGxvY2FsaXphYmxlRW50cmllcyA9IG9iamVjdERlZXBLZXlzKG9iailcblx0XHQubWFwKChwYXRoKSA9PiAoeyBwYXRoLCB2YWx1ZTogZ2V0KG9iaiwgcGF0aCkgfSkpXG5cdFx0LmZpbHRlcigoeyB2YWx1ZSB9KSA9PiB2YWx1ZSBpbnN0YW5jZW9mIExvY2FsaXphYmxlVmFsdWUpO1xuXHRpZiAobG9jYWxpemFibGVFbnRyaWVzLmxlbmd0aCA9PT0gMCkge1xuXHRcdHJldHVybiBvYmogYXMgVDtcblx0fVxuXHRjb25zdCBsb2NhbGl6ZWQgPSBjbG9uZURlZXAob2JqKTtcblx0aWYgKCFsb2NhbGl6ZU1ldGFkYXRhKSB7XG5cdFx0Y29uc29sZS5lcnJvcihcIlVuYWJsZSB0byBsb2NhbGl6ZSBtZXRhZGF0YS4gJ2xvY2FsaXplTWV0YWRhdGEnIGJvb3RzdHJhcCBvcHRpb24gd2FzIG5vdCBwcm92aWRlZC5cIik7XG5cdH1cblx0bG9jYWxpemFibGVFbnRyaWVzLmZvckVhY2goKHsgcGF0aCwgdmFsdWUgfSkgPT4ge1xuXHRcdGNvbnN0IGxvY2FsaXplZFZhbHVlID0gbG9jYWxpemVNZXRhZGF0YT8uKHZhbHVlLmtleSkgPz8gdmFsdWUua2V5O1xuXHRcdHNldChsb2NhbGl6ZWQsIHBhdGgsIGxvY2FsaXplZFZhbHVlKTtcblx0fSk7XG5cdHJldHVybiBsb2NhbGl6ZWQgYXMgVDtcbn1cbiJdfQ==