/**
 * @public
 * Returns a string represent of date in ISO 8601 without time zone specification(doesn't convert it
 * using local timezone).
 *
 * Example:
 *
 *      const date = new Date(2018, 01, 20, 15, 10, 30);
 *      const result = toLocalISOString(date);
 *      //result: '2018-02-20T15:10:30'
 *
 * @param date Date value.
 */
export function ɵtoLocalISOString(date) {
    if (!(date instanceof Date)) {
        throw new TypeError();
    }
    const timeZoneOffset = date.getTimezoneOffset() * 60000;
    return new Date(date.getTime() - timeZoneOffset).toISOString().slice(0, -1);
}
/**
 * @public
 * Returns encoded date in string value.
 * @param date Date value.
 */
export function ɵencodeDate(date) {
    return `"${ɵtoLocalISOString(date)}"`;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvZGV2a2l0L2Jhc2Uvc3JjL2xpYi9leHRlcm5hbC91dGlscy9kYXRlLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7R0FZRztBQUVILE1BQU0sVUFBVSxpQkFBaUIsQ0FBQyxJQUFVO0lBQzNDLElBQUksQ0FBQyxDQUFDLElBQUksWUFBWSxJQUFJLENBQUMsRUFBRTtRQUM1QixNQUFNLElBQUksU0FBUyxFQUFFLENBQUM7S0FDdEI7SUFDRCxNQUFNLGNBQWMsR0FBRyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsR0FBRyxLQUFLLENBQUM7SUFDeEQsT0FBTyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEdBQUcsY0FBYyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzdFLENBQUM7QUFFRDs7OztHQUlHO0FBQ0gsTUFBTSxVQUFVLFdBQVcsQ0FBQyxJQUFVO0lBQ3JDLE9BQU8sSUFBSSxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO0FBQ3ZDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBwdWJsaWNcbiAqIFJldHVybnMgYSBzdHJpbmcgcmVwcmVzZW50IG9mIGRhdGUgaW4gSVNPIDg2MDEgd2l0aG91dCB0aW1lIHpvbmUgc3BlY2lmaWNhdGlvbihkb2Vzbid0IGNvbnZlcnQgaXRcbiAqIHVzaW5nIGxvY2FsIHRpbWV6b25lKS5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKDIwMTgsIDAxLCAyMCwgMTUsIDEwLCAzMCk7XG4gKiAgICAgIGNvbnN0IHJlc3VsdCA9IHRvTG9jYWxJU09TdHJpbmcoZGF0ZSk7XG4gKiAgICAgIC8vcmVzdWx0OiAnMjAxOC0wMi0yMFQxNToxMDozMCdcbiAqXG4gKiBAcGFyYW0gZGF0ZSBEYXRlIHZhbHVlLlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiDJtXRvTG9jYWxJU09TdHJpbmcoZGF0ZTogRGF0ZSk6IHN0cmluZyB7XG5cdGlmICghKGRhdGUgaW5zdGFuY2VvZiBEYXRlKSkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoKTtcblx0fVxuXHRjb25zdCB0aW1lWm9uZU9mZnNldCA9IGRhdGUuZ2V0VGltZXpvbmVPZmZzZXQoKSAqIDYwMDAwO1xuXHRyZXR1cm4gbmV3IERhdGUoZGF0ZS5nZXRUaW1lKCkgLSB0aW1lWm9uZU9mZnNldCkudG9JU09TdHJpbmcoKS5zbGljZSgwLCAtMSk7XG59XG5cbi8qKlxuICogQHB1YmxpY1xuICogUmV0dXJucyBlbmNvZGVkIGRhdGUgaW4gc3RyaW5nIHZhbHVlLlxuICogQHBhcmFtIGRhdGUgRGF0ZSB2YWx1ZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIMm1ZW5jb2RlRGF0ZShkYXRlOiBEYXRlKTogc3RyaW5nIHtcblx0cmV0dXJuIGBcIiR7ybV0b0xvY2FsSVNPU3RyaW5nKGRhdGUpfVwiYDtcbn1cbiJdfQ==