import { ɵArgumentFunctionExpression } from './argument-function-expression';
import { ɵFunctionType } from '../../enums';
export class ɵWindowFunctionExpression extends ɵArgumentFunctionExpression {
    /**
     * @internal
     * @dontChange
     */
    static get _instanceOfKeys() {
        return [...ɵArgumentFunctionExpression._instanceOfKeys, this._instanceOfKey];
    }
    constructor(config) {
        super(config);
        this.functionType = ɵFunctionType.Window;
    }
    /**
     * Parses expression from json.
     * @public
     */
    static fromJson(dto, filterParser, expressionParser) {
        const functionArgument = expressionParser?.fromJson(dto['functionArgument'], filterParser);
        return new ɵWindowFunctionExpression({ functionArgument, isBlock: dto['isBlock'] });
    }
    clone() {
        return new ɵWindowFunctionExpression(this);
    }
}
/**
 * @internal
 * @dontChange
 */
ɵWindowFunctionExpression._instanceOfKey = 'devkit_WindowFunctionExpression';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2luZG93LWZ1bmN0aW9uLWV4cHJlc3Npb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2RldmtpdC9iYXNlL3NyYy9saWIvcHVibGljL2VzcS9kYXRhLW1vZGVsL2V4cHJlc3Npb25zL2Z1bmN0aW9ucy93aW5kb3ctZnVuY3Rpb24tZXhwcmVzc2lvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsMkJBQTJCLEVBQXFDLE1BQU0sZ0NBQWdDLENBQUM7QUFFaEgsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQU01QyxNQUFNLE9BQU8seUJBQTBCLFNBQVEsMkJBQTJCO0lBT3pFOzs7T0FHRztJQUNPLE1BQU0sS0FBSyxlQUFlO1FBQ25DLE9BQU8sQ0FBQyxHQUFHLDJCQUEyQixDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDOUUsQ0FBQztJQU1ELFlBQVksTUFBdUM7UUFDbEQsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBTEMsaUJBQVksR0FBa0IsYUFBYSxDQUFDLE1BQU0sQ0FBQztJQU1uRSxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksTUFBTSxDQUFDLFFBQVEsQ0FHcEIsR0FBZ0IsRUFBRSxZQUEyQixFQUFFLGdCQUFvQztRQUNwRixNQUFNLGdCQUFnQixHQUFHLGdCQUFnQixFQUFFLFFBQVEsQ0FDbEQsR0FBRyxDQUFDLGtCQUFrQixDQUFnQixFQUN0QyxZQUFZLENBQ3NCLENBQUM7UUFDcEMsT0FBTyxJQUFJLHlCQUF5QixDQUFDLEVBQUUsZ0JBQWdCLEVBQUUsT0FBTyxFQUFFLEdBQUcsQ0FBQyxTQUFTLENBQVksRUFBRSxDQUFDLENBQUM7SUFDaEcsQ0FBQztJQUVNLEtBQUs7UUFDWCxPQUFPLElBQUkseUJBQXlCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDNUMsQ0FBQzs7QUF2Q0Q7OztHQUdHO0FBQ3VCLHdDQUFjLEdBQVcsaUNBQWlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyDJtUFnZ3JlZ2F0aW9uRnVuY3Rpb25FeHByZXNzaW9uIH0gZnJvbSAnLi9hZ2dyZWdhdGlvbi1mdW5jdGlvbi1leHByZXNzaW9uJztcbmltcG9ydCB7IMm1QXJndW1lbnRGdW5jdGlvbkV4cHJlc3Npb24sIMm1QXJndW1lbnRGdW5jdGlvbkV4cHJlc3Npb25Db25maWcgfSBmcm9tICcuL2FyZ3VtZW50LWZ1bmN0aW9uLWV4cHJlc3Npb24nO1xuaW1wb3J0IHsgybVKc29uT2JqZWN0IH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlwZXMvanNvbi1kYXRhLnR5cGUnO1xuaW1wb3J0IHsgybVGdW5jdGlvblR5cGUgfSBmcm9tICcuLi8uLi9lbnVtcyc7XG5pbXBvcnQgeyDJtUJhc2VGaWx0ZXJQYXJzZXIgfSBmcm9tICcuLi8uLi9maWx0ZXJzL2ZpbHRlci1wYXJzZXIvYmFzZS1maWx0ZXItcGFyc2VyJztcbmltcG9ydCB7IMm1QmFzZUV4cHJlc3Npb25QYXJzZXIgfSBmcm9tICcuLi9leHByZXNzaW9uLXBhcnNlci9iYXNlLWV4cHJlc3Npb24tcGFyc2VyJztcblxuZXhwb3J0IHR5cGUgybVXaW5kb3dGdW5jdGlvbkV4cHJlc3Npb25Db25maWcgPSDJtUFyZ3VtZW50RnVuY3Rpb25FeHByZXNzaW9uQ29uZmlnPMm1V2luZG93RnVuY3Rpb25FeHByZXNzaW9uPjtcblxuZXhwb3J0IGNsYXNzIMm1V2luZG93RnVuY3Rpb25FeHByZXNzaW9uIGV4dGVuZHMgybVBcmd1bWVudEZ1bmN0aW9uRXhwcmVzc2lvbiB7XG5cdC8qKlxuXHQgKiBAaW50ZXJuYWxcblx0ICogQGRvbnRDaGFuZ2Vcblx0ICovXG5cdHByb3RlY3RlZCBzdGF0aWMgcmVhZG9ubHkgX2luc3RhbmNlT2ZLZXk6IHN0cmluZyA9ICdkZXZraXRfV2luZG93RnVuY3Rpb25FeHByZXNzaW9uJztcblxuXHQvKipcblx0ICogQGludGVybmFsXG5cdCAqIEBkb250Q2hhbmdlXG5cdCAqL1xuXHRwcm90ZWN0ZWQgc3RhdGljIGdldCBfaW5zdGFuY2VPZktleXMoKTogc3RyaW5nW10ge1xuXHRcdHJldHVybiBbLi4uybVBcmd1bWVudEZ1bmN0aW9uRXhwcmVzc2lvbi5faW5zdGFuY2VPZktleXMsIHRoaXMuX2luc3RhbmNlT2ZLZXldO1xuXHR9XG5cblx0cHVibGljIHJlYWRvbmx5IGZ1bmN0aW9uVHlwZTogybVGdW5jdGlvblR5cGUgPSDJtUZ1bmN0aW9uVHlwZS5XaW5kb3c7XG5cblx0cHVibGljIHJlYWRvbmx5IGZ1bmN0aW9uQXJndW1lbnQhOiDJtUFnZ3JlZ2F0aW9uRnVuY3Rpb25FeHByZXNzaW9uO1xuXG5cdGNvbnN0cnVjdG9yKGNvbmZpZzogybVXaW5kb3dGdW5jdGlvbkV4cHJlc3Npb25Db25maWcpIHtcblx0XHRzdXBlcihjb25maWcpO1xuXHR9XG5cblx0LyoqXG5cdCAqIFBhcnNlcyBleHByZXNzaW9uIGZyb20ganNvbi5cblx0ICogQHB1YmxpY1xuXHQgKi9cblx0cHVibGljIHN0YXRpYyBmcm9tSnNvbjxcblx0XHRURmlsdGVyUGFyc2VyIGV4dGVuZHMgdHlwZW9mIMm1QmFzZUZpbHRlclBhcnNlcixcblx0XHRURXhwcmVzc2lvblBhcnNlciBleHRlbmRzIHR5cGVvZiDJtUJhc2VFeHByZXNzaW9uUGFyc2VyLFxuXHQ+KGR0bzogybVKc29uT2JqZWN0LCBmaWx0ZXJQYXJzZXI6IFRGaWx0ZXJQYXJzZXIsIGV4cHJlc3Npb25QYXJzZXI/OiBURXhwcmVzc2lvblBhcnNlcik6IMm1V2luZG93RnVuY3Rpb25FeHByZXNzaW9uIHtcblx0XHRjb25zdCBmdW5jdGlvbkFyZ3VtZW50ID0gZXhwcmVzc2lvblBhcnNlcj8uZnJvbUpzb24oXG5cdFx0XHRkdG9bJ2Z1bmN0aW9uQXJndW1lbnQnXSBhcyDJtUpzb25PYmplY3QsXG5cdFx0XHRmaWx0ZXJQYXJzZXIsXG5cdFx0KSBhcyDJtUFnZ3JlZ2F0aW9uRnVuY3Rpb25FeHByZXNzaW9uO1xuXHRcdHJldHVybiBuZXcgybVXaW5kb3dGdW5jdGlvbkV4cHJlc3Npb24oeyBmdW5jdGlvbkFyZ3VtZW50LCBpc0Jsb2NrOiBkdG9bJ2lzQmxvY2snXSBhcyBib29sZWFuIH0pO1xuXHR9XG5cblx0cHVibGljIGNsb25lKCk6IMm1V2luZG93RnVuY3Rpb25FeHByZXNzaW9uIHtcblx0XHRyZXR1cm4gbmV3IMm1V2luZG93RnVuY3Rpb25FeHByZXNzaW9uKHRoaXMpO1xuXHR9XG59XG4iXX0=