import { ɵExpressionType } from '../../enums/expression-type.enum';
import { ɵFunctionType } from '../../enums/function-type.enum';
import { ɵArithmeticExpression } from '../arithmetic';
import { ɵColumnExpression } from '../columns/column-expression';
import { ɵDatePartFunctionExpression, ɵLengthFunctionExpression, ɵMacrosFunctionExpression, ɵWindowFunctionExpression, } from '../functions';
import { ɵParameterExpression } from '../parameters/parameter-expression';
import { ɵAggregationSubQueryExpression } from '../sub-queries/aggregation-sub-query-expression';
/**
 * Function expression resolver.
 * @public
 */
class FunctionExpressionResolver {
    static resolve(dto) {
        const expressionClass = {
            [ɵFunctionType.Macros]: ɵMacrosFunctionExpression,
            [ɵFunctionType.Length]: ɵLengthFunctionExpression,
            [ɵFunctionType.Window]: ɵWindowFunctionExpression,
            [ɵFunctionType.DatePart]: ɵDatePartFunctionExpression,
            [ɵFunctionType.DateAdd]: ɵDatePartFunctionExpression,
            [ɵFunctionType.DateDiff]: ɵDatePartFunctionExpression,
        };
        return expressionClass[dto['functionType']];
    }
}
/**
 * Expression resolver.
 * @public
 */
export class ɵExpressionResolver {
    static resolve(expressionType, dto) {
        const expressionClass = {
            [ɵExpressionType.SchemaColumn]: ɵColumnExpression,
            [ɵExpressionType.Parameter]: ɵParameterExpression,
            [ɵExpressionType.SubQuery]: ɵAggregationSubQueryExpression,
            [ɵExpressionType.ArithmeticOperation]: ɵArithmeticExpression,
            [ɵExpressionType.Function]: FunctionExpressionResolver.resolve(dto),
        };
        return expressionClass[expressionType];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwcmVzc2lvbi1yZXNvbHZlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvZGV2a2l0L2Jhc2Uvc3JjL2xpYi9wdWJsaWMvZXNxL2RhdGEtbW9kZWwvZXhwcmVzc2lvbnMvZXhwcmVzc2lvbi1wYXJzZXIvZXhwcmVzc2lvbi1yZXNvbHZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDbkUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQy9ELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV0RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNqRSxPQUFPLEVBQ04sMkJBQTJCLEVBQzNCLHlCQUF5QixFQUN6Qix5QkFBeUIsRUFDekIseUJBQXlCLEdBQ3pCLE1BQU0sY0FBYyxDQUFDO0FBQ3RCLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLGlEQUFpRCxDQUFDO0FBRWpHOzs7R0FHRztBQUNILE1BQU0sMEJBQTBCO0lBQ3hCLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBZ0I7UUFDckMsTUFBTSxlQUFlLEdBQUc7WUFDdkIsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEVBQUUseUJBQXlCO1lBQ2pELENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxFQUFFLHlCQUF5QjtZQUNqRCxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsRUFBRSx5QkFBeUI7WUFDakQsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLEVBQUUsMkJBQTJCO1lBQ3JELENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxFQUFFLDJCQUEyQjtZQUNwRCxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsRUFBRSwyQkFBMkI7U0FDckQsQ0FBQztRQUNGLE9BQU8sZUFBZSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQWtCLENBQUMsQ0FBQztJQUM5RCxDQUFDO0NBQ0Q7QUFFRDs7O0dBR0c7QUFDSCxNQUFNLE9BQU8sbUJBQW1CO0lBQ3hCLE1BQU0sQ0FBQyxPQUFPLENBQUMsY0FBK0IsRUFBRSxHQUFnQjtRQUN0RSxNQUFNLGVBQWUsR0FBRztZQUN2QixDQUFDLGVBQWUsQ0FBQyxZQUFZLENBQUMsRUFBRSxpQkFBaUI7WUFDakQsQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDLEVBQUUsb0JBQW9CO1lBQ2pELENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxFQUFFLDhCQUE4QjtZQUMxRCxDQUFDLGVBQWUsQ0FBQyxtQkFBbUIsQ0FBQyxFQUFFLHFCQUFxQjtZQUM1RCxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsRUFBRSwwQkFBMEIsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1NBQ25FLENBQUM7UUFDRixPQUFPLGVBQWUsQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUN4QyxDQUFDO0NBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyDJtUpzb25PYmplY3QgfSBmcm9tICcuLi8uLi8uLi8uLi90eXBlcyc7XG5pbXBvcnQgeyDJtUV4cHJlc3Npb25UeXBlIH0gZnJvbSAnLi4vLi4vZW51bXMvZXhwcmVzc2lvbi10eXBlLmVudW0nO1xuaW1wb3J0IHsgybVGdW5jdGlvblR5cGUgfSBmcm9tICcuLi8uLi9lbnVtcy9mdW5jdGlvbi10eXBlLmVudW0nO1xuaW1wb3J0IHsgybVBcml0aG1ldGljRXhwcmVzc2lvbiB9IGZyb20gJy4uL2FyaXRobWV0aWMnO1xuaW1wb3J0IHsgybVCYXNlRXhwcmVzc2lvbiB9IGZyb20gJy4uL2Jhc2UtZXhwcmVzc2lvbic7XG5pbXBvcnQgeyDJtUNvbHVtbkV4cHJlc3Npb24gfSBmcm9tICcuLi9jb2x1bW5zL2NvbHVtbi1leHByZXNzaW9uJztcbmltcG9ydCB7XG5cdMm1RGF0ZVBhcnRGdW5jdGlvbkV4cHJlc3Npb24sXG5cdMm1TGVuZ3RoRnVuY3Rpb25FeHByZXNzaW9uLFxuXHTJtU1hY3Jvc0Z1bmN0aW9uRXhwcmVzc2lvbixcblx0ybVXaW5kb3dGdW5jdGlvbkV4cHJlc3Npb24sXG59IGZyb20gJy4uL2Z1bmN0aW9ucyc7XG5pbXBvcnQgeyDJtVBhcmFtZXRlckV4cHJlc3Npb24gfSBmcm9tICcuLi9wYXJhbWV0ZXJzL3BhcmFtZXRlci1leHByZXNzaW9uJztcbmltcG9ydCB7IMm1QWdncmVnYXRpb25TdWJRdWVyeUV4cHJlc3Npb24gfSBmcm9tICcuLi9zdWItcXVlcmllcy9hZ2dyZWdhdGlvbi1zdWItcXVlcnktZXhwcmVzc2lvbic7XG5cbi8qKlxuICogRnVuY3Rpb24gZXhwcmVzc2lvbiByZXNvbHZlci5cbiAqIEBwdWJsaWNcbiAqL1xuY2xhc3MgRnVuY3Rpb25FeHByZXNzaW9uUmVzb2x2ZXIge1xuXHRwdWJsaWMgc3RhdGljIHJlc29sdmUoZHRvOiDJtUpzb25PYmplY3QpOiB0eXBlb2YgybVCYXNlRXhwcmVzc2lvbiB7XG5cdFx0Y29uc3QgZXhwcmVzc2lvbkNsYXNzID0ge1xuXHRcdFx0W8m1RnVuY3Rpb25UeXBlLk1hY3Jvc106IMm1TWFjcm9zRnVuY3Rpb25FeHByZXNzaW9uLFxuXHRcdFx0W8m1RnVuY3Rpb25UeXBlLkxlbmd0aF06IMm1TGVuZ3RoRnVuY3Rpb25FeHByZXNzaW9uLFxuXHRcdFx0W8m1RnVuY3Rpb25UeXBlLldpbmRvd106IMm1V2luZG93RnVuY3Rpb25FeHByZXNzaW9uLFxuXHRcdFx0W8m1RnVuY3Rpb25UeXBlLkRhdGVQYXJ0XTogybVEYXRlUGFydEZ1bmN0aW9uRXhwcmVzc2lvbixcblx0XHRcdFvJtUZ1bmN0aW9uVHlwZS5EYXRlQWRkXTogybVEYXRlUGFydEZ1bmN0aW9uRXhwcmVzc2lvbixcblx0XHRcdFvJtUZ1bmN0aW9uVHlwZS5EYXRlRGlmZl06IMm1RGF0ZVBhcnRGdW5jdGlvbkV4cHJlc3Npb24sXG5cdFx0fTtcblx0XHRyZXR1cm4gZXhwcmVzc2lvbkNsYXNzW2R0b1snZnVuY3Rpb25UeXBlJ10gYXMgybVGdW5jdGlvblR5cGVdO1xuXHR9XG59XG5cbi8qKlxuICogRXhwcmVzc2lvbiByZXNvbHZlci5cbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGNsYXNzIMm1RXhwcmVzc2lvblJlc29sdmVyIHtcblx0cHVibGljIHN0YXRpYyByZXNvbHZlKGV4cHJlc3Npb25UeXBlOiDJtUV4cHJlc3Npb25UeXBlLCBkdG86IMm1SnNvbk9iamVjdCk6IHR5cGVvZiDJtUJhc2VFeHByZXNzaW9uIHtcblx0XHRjb25zdCBleHByZXNzaW9uQ2xhc3MgPSB7XG5cdFx0XHRbybVFeHByZXNzaW9uVHlwZS5TY2hlbWFDb2x1bW5dOiDJtUNvbHVtbkV4cHJlc3Npb24sXG5cdFx0XHRbybVFeHByZXNzaW9uVHlwZS5QYXJhbWV0ZXJdOiDJtVBhcmFtZXRlckV4cHJlc3Npb24sXG5cdFx0XHRbybVFeHByZXNzaW9uVHlwZS5TdWJRdWVyeV06IMm1QWdncmVnYXRpb25TdWJRdWVyeUV4cHJlc3Npb24sXG5cdFx0XHRbybVFeHByZXNzaW9uVHlwZS5Bcml0aG1ldGljT3BlcmF0aW9uXTogybVBcml0aG1ldGljRXhwcmVzc2lvbixcblx0XHRcdFvJtUV4cHJlc3Npb25UeXBlLkZ1bmN0aW9uXTogRnVuY3Rpb25FeHByZXNzaW9uUmVzb2x2ZXIucmVzb2x2ZShkdG8pLFxuXHRcdH07XG5cdFx0cmV0dXJuIGV4cHJlc3Npb25DbGFzc1tleHByZXNzaW9uVHlwZV07XG5cdH1cbn1cbiJdfQ==