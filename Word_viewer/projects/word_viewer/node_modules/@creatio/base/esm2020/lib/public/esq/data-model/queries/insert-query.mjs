import { __decorate, __metadata } from "tslib";
import { classToPlain, Expose } from 'class-transformer';
import { ɵBaseQuery } from './base-query';
import { ɵQueryOperationType } from './query-operation-type';
import { ɵParameterExpression } from '../expressions';
import { ɵValidationUtilities } from '../../../exceptions';
/**
 * @public
 */
export class ɵInsertQuery extends ɵBaseQuery {
    // endregion
    // region Constructors: Public
    constructor(rootSchemaName) {
        super(ɵQueryOperationType.Insert, rootSchemaName);
        // region Fields: Private
        this._columnValues = new Map();
    }
    // endregion
    // region Properties: Public
    get columnValues() {
        return {
            items: classToPlain(this._columnValues),
        };
    }
    // endregion
    // region Methods: Public
    addColumn(columnName, columnValue, dataValueType) {
        ɵValidationUtilities.checkArgumentEmpty('columnName', columnName);
        this._columnValues.set(columnName, new ɵParameterExpression({ value: columnValue, dataValueType }));
    }
}
__decorate([
    Expose(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], ɵInsertQuery.prototype, "columnValues", null);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5zZXJ0LXF1ZXJ5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9kZXZraXQvYmFzZS9zcmMvbGliL3B1YmxpYy9lc3EvZGF0YS1tb2RlbC9xdWVyaWVzL2luc2VydC1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFlBQVksRUFBRSxNQUFNLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUV2RCxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ3hDLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBQzNELE9BQU8sRUFBQyxvQkFBb0IsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBR3BELE9BQU8sRUFBQyxvQkFBb0IsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBRXpEOztHQUVHO0FBQ0gsTUFBTSxPQUFPLFlBQWEsU0FBUSxVQUFVO0lBSzNDLFlBQVk7SUFFWiw4QkFBOEI7SUFFOUIsWUFBWSxjQUFzQjtRQUNqQyxLQUFLLENBQUMsbUJBQW1CLENBQUMsTUFBTSxFQUFFLGNBQWMsQ0FBQyxDQUFDO1FBVG5ELHlCQUF5QjtRQUVqQixrQkFBYSxHQUFHLElBQUksR0FBRyxFQUFnQyxDQUFDO0lBUWhFLENBQUM7SUFFRCxZQUFZO0lBRVosNEJBQTRCO0lBRTVCLElBQ1csWUFBWTtRQUN0QixPQUFPO1lBQ04sS0FBSyxFQUFFLFlBQVksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDO1NBQ3ZDLENBQUM7SUFDSCxDQUFDO0lBRUQsWUFBWTtJQUVaLHlCQUF5QjtJQUVsQixTQUFTLENBQUMsVUFBa0IsRUFBRSxXQUErQixFQUFFLGFBQTZCO1FBQ2xHLG9CQUFvQixDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxVQUFVLENBQUMsQ0FBQztRQUNsRSxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsSUFBSSxvQkFBb0IsQ0FBQyxFQUFDLEtBQUssRUFBRSxXQUFXLEVBQUUsYUFBYSxFQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ25HLENBQUM7Q0FHRDtBQWpCQTtJQUFDLE1BQU0sRUFBRTs7O2dEQUtSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjbGFzc1RvUGxhaW4sIEV4cG9zZX0gZnJvbSAnY2xhc3MtdHJhbnNmb3JtZXInO1xuXG5pbXBvcnQge8m1QmFzZVF1ZXJ5fSBmcm9tICcuL2Jhc2UtcXVlcnknO1xuaW1wb3J0IHvJtVF1ZXJ5T3BlcmF0aW9uVHlwZX0gZnJvbSAnLi9xdWVyeS1vcGVyYXRpb24tdHlwZSc7XG5pbXBvcnQge8m1UGFyYW1ldGVyRXhwcmVzc2lvbn0gZnJvbSAnLi4vZXhwcmVzc2lvbnMnO1xuaW1wb3J0IHvJtUVudGl0eUNvbHVtblZhbHVlfSBmcm9tICcuLi8uLi8uLi90eXBlcyc7XG5pbXBvcnQge8m1RGF0YVZhbHVlVHlwZX0gZnJvbSAnLi4vLi4vLi4vZW51bXMnO1xuaW1wb3J0IHvJtVZhbGlkYXRpb25VdGlsaXRpZXN9IGZyb20gJy4uLy4uLy4uL2V4Y2VwdGlvbnMnO1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGNsYXNzIMm1SW5zZXJ0UXVlcnkgZXh0ZW5kcyDJtUJhc2VRdWVyeSB7XG5cdC8vIHJlZ2lvbiBGaWVsZHM6IFByaXZhdGVcblxuXHRwcml2YXRlIF9jb2x1bW5WYWx1ZXMgPSBuZXcgTWFwPHN0cmluZywgybVQYXJhbWV0ZXJFeHByZXNzaW9uPigpO1xuXG5cdC8vIGVuZHJlZ2lvblxuXG5cdC8vIHJlZ2lvbiBDb25zdHJ1Y3RvcnM6IFB1YmxpY1xuXG5cdGNvbnN0cnVjdG9yKHJvb3RTY2hlbWFOYW1lOiBzdHJpbmcpIHtcblx0XHRzdXBlcijJtVF1ZXJ5T3BlcmF0aW9uVHlwZS5JbnNlcnQsIHJvb3RTY2hlbWFOYW1lKTtcblx0fVxuXG5cdC8vIGVuZHJlZ2lvblxuXG5cdC8vIHJlZ2lvbiBQcm9wZXJ0aWVzOiBQdWJsaWNcblxuXHRARXhwb3NlKClcblx0cHVibGljIGdldCBjb2x1bW5WYWx1ZXMoKTogeyBpdGVtczogeyBba2V5OiBzdHJpbmddOiDJtVBhcmFtZXRlckV4cHJlc3Npb24gfSB9IHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0aXRlbXM6IGNsYXNzVG9QbGFpbih0aGlzLl9jb2x1bW5WYWx1ZXMpLFxuXHRcdH07XG5cdH1cblxuXHQvLyBlbmRyZWdpb25cblxuXHQvLyByZWdpb24gTWV0aG9kczogUHVibGljXG5cblx0cHVibGljIGFkZENvbHVtbihjb2x1bW5OYW1lOiBzdHJpbmcsIGNvbHVtblZhbHVlOiDJtUVudGl0eUNvbHVtblZhbHVlLCBkYXRhVmFsdWVUeXBlOiDJtURhdGFWYWx1ZVR5cGUpOiB2b2lkIHtcblx0XHTJtVZhbGlkYXRpb25VdGlsaXRpZXMuY2hlY2tBcmd1bWVudEVtcHR5KCdjb2x1bW5OYW1lJywgY29sdW1uTmFtZSk7XG5cdFx0dGhpcy5fY29sdW1uVmFsdWVzLnNldChjb2x1bW5OYW1lLCBuZXcgybVQYXJhbWV0ZXJFeHByZXNzaW9uKHt2YWx1ZTogY29sdW1uVmFsdWUsIGRhdGFWYWx1ZVR5cGV9KSk7XG5cdH1cblxuXHQvLyBlbmRyZWdpb25cbn1cbiJdfQ==