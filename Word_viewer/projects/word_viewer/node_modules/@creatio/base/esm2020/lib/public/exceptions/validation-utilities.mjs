import { ɵArgumentEmptyException } from './argument-empty-exception';
import { ɵArgumentOutOfRangeException } from './argument-out-of-range-exception';
export class ɵValidationUtilities {
    // region Methods: Public
    static checkArgumentEmpty(argumentName, argumentValue) {
        if (argumentValue === undefined || argumentValue === null) {
            throw new ɵArgumentEmptyException(argumentName);
        }
    }
    static checkArrayEmpty(argumentName, argumentValue) {
        ɵValidationUtilities.checkArgumentEmpty(argumentName, argumentValue);
        if (argumentValue.length === 0) {
            throw new ɵArgumentEmptyException(argumentName);
        }
    }
    static checkStringIsNotEmpty(argumentName, argumentValue) {
        this.checkArgumentEmpty(argumentName, argumentValue);
        if (argumentValue === '') {
            throw new ɵArgumentEmptyException(argumentName);
        }
        return argumentValue;
    }
    static checkArgumentOutOfRange(argumentName, argumentValue, range) {
        if (range.begin && argumentValue < range.begin) {
            throw new ɵArgumentOutOfRangeException(argumentName);
        }
        if (range.end && argumentValue > range.end) {
            throw new ɵArgumentOutOfRangeException(argumentName);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsaWRhdGlvbi11dGlsaXRpZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2RldmtpdC9iYXNlL3NyYy9saWIvcHVibGljL2V4Y2VwdGlvbnMvdmFsaWRhdGlvbi11dGlsaXRpZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDckUsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFFakYsTUFBTSxPQUFPLG9CQUFvQjtJQUNoQyx5QkFBeUI7SUFFbEIsTUFBTSxDQUFDLGtCQUFrQixDQUMvQixZQUFvQixFQUNwQixhQUFtQztRQUVuQyxJQUFJLGFBQWEsS0FBSyxTQUFTLElBQUksYUFBYSxLQUFLLElBQUksRUFBRTtZQUMxRCxNQUFNLElBQUksdUJBQXVCLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDaEQ7SUFDRixDQUFDO0lBRU0sTUFBTSxDQUFDLGVBQWUsQ0FBSSxZQUFvQixFQUFFLGFBQTJCO1FBQ2pGLG9CQUFvQixDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxhQUFhLENBQUMsQ0FBQztRQUNyRSxJQUFJLGFBQWEsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQy9CLE1BQU0sSUFBSSx1QkFBdUIsQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUNoRDtJQUNGLENBQUM7SUFFTSxNQUFNLENBQUMscUJBQXFCLENBQUMsWUFBb0IsRUFBRSxhQUFxQjtRQUM5RSxJQUFJLENBQUMsa0JBQWtCLENBQUMsWUFBWSxFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBQ3JELElBQUksYUFBYSxLQUFLLEVBQUUsRUFBRTtZQUN6QixNQUFNLElBQUksdUJBQXVCLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDaEQ7UUFDRCxPQUFPLGFBQWEsQ0FBQztJQUN0QixDQUFDO0lBRU0sTUFBTSxDQUFDLHVCQUF1QixDQUNwQyxZQUFvQixFQUNwQixhQUFxQixFQUNyQixLQUF1QztRQUV2QyxJQUFJLEtBQUssQ0FBQyxLQUFLLElBQUksYUFBYSxHQUFHLEtBQUssQ0FBQyxLQUFLLEVBQUU7WUFDL0MsTUFBTSxJQUFJLDRCQUE0QixDQUFDLFlBQVksQ0FBQyxDQUFDO1NBQ3JEO1FBQ0QsSUFBSSxLQUFLLENBQUMsR0FBRyxJQUFJLGFBQWEsR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFO1lBQzNDLE1BQU0sSUFBSSw0QkFBNEIsQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUNyRDtJQUNGLENBQUM7Q0FHRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IMm1QXJndW1lbnRFbXB0eUV4Y2VwdGlvbiB9IGZyb20gJy4vYXJndW1lbnQtZW1wdHktZXhjZXB0aW9uJztcbmltcG9ydCB7IMm1QXJndW1lbnRPdXRPZlJhbmdlRXhjZXB0aW9uIH0gZnJvbSAnLi9hcmd1bWVudC1vdXQtb2YtcmFuZ2UtZXhjZXB0aW9uJztcblxuZXhwb3J0IGNsYXNzIMm1VmFsaWRhdGlvblV0aWxpdGllcyB7XG5cdC8vIHJlZ2lvbiBNZXRob2RzOiBQdWJsaWNcblxuXHRwdWJsaWMgc3RhdGljIGNoZWNrQXJndW1lbnRFbXB0eTxUPihcblx0XHRhcmd1bWVudE5hbWU6IHN0cmluZyxcblx0XHRhcmd1bWVudFZhbHVlOiBUIHwgbnVsbCB8IHVuZGVmaW5lZCxcblx0KTogYXNzZXJ0cyBhcmd1bWVudFZhbHVlIGlzIFQge1xuXHRcdGlmIChhcmd1bWVudFZhbHVlID09PSB1bmRlZmluZWQgfHwgYXJndW1lbnRWYWx1ZSA9PT0gbnVsbCkge1xuXHRcdFx0dGhyb3cgbmV3IMm1QXJndW1lbnRFbXB0eUV4Y2VwdGlvbihhcmd1bWVudE5hbWUpO1xuXHRcdH1cblx0fVxuXG5cdHB1YmxpYyBzdGF0aWMgY2hlY2tBcnJheUVtcHR5PFQ+KGFyZ3VtZW50TmFtZTogc3RyaW5nLCBhcmd1bWVudFZhbHVlOiBBcnJheUxpa2U8VD4pOiB2b2lkIHtcblx0XHTJtVZhbGlkYXRpb25VdGlsaXRpZXMuY2hlY2tBcmd1bWVudEVtcHR5KGFyZ3VtZW50TmFtZSwgYXJndW1lbnRWYWx1ZSk7XG5cdFx0aWYgKGFyZ3VtZW50VmFsdWUubGVuZ3RoID09PSAwKSB7XG5cdFx0XHR0aHJvdyBuZXcgybVBcmd1bWVudEVtcHR5RXhjZXB0aW9uKGFyZ3VtZW50TmFtZSk7XG5cdFx0fVxuXHR9XG5cblx0cHVibGljIHN0YXRpYyBjaGVja1N0cmluZ0lzTm90RW1wdHkoYXJndW1lbnROYW1lOiBzdHJpbmcsIGFyZ3VtZW50VmFsdWU6IHN0cmluZyk6IHN0cmluZyB7XG5cdFx0dGhpcy5jaGVja0FyZ3VtZW50RW1wdHkoYXJndW1lbnROYW1lLCBhcmd1bWVudFZhbHVlKTtcblx0XHRpZiAoYXJndW1lbnRWYWx1ZSA9PT0gJycpIHtcblx0XHRcdHRocm93IG5ldyDJtUFyZ3VtZW50RW1wdHlFeGNlcHRpb24oYXJndW1lbnROYW1lKTtcblx0XHR9XG5cdFx0cmV0dXJuIGFyZ3VtZW50VmFsdWU7XG5cdH1cblxuXHRwdWJsaWMgc3RhdGljIGNoZWNrQXJndW1lbnRPdXRPZlJhbmdlKFxuXHRcdGFyZ3VtZW50TmFtZTogc3RyaW5nLFxuXHRcdGFyZ3VtZW50VmFsdWU6IG51bWJlcixcblx0XHRyYW5nZTogeyBiZWdpbj86IG51bWJlcjsgZW5kPzogbnVtYmVyIH0sXG5cdCk6IHZvaWQge1xuXHRcdGlmIChyYW5nZS5iZWdpbiAmJiBhcmd1bWVudFZhbHVlIDwgcmFuZ2UuYmVnaW4pIHtcblx0XHRcdHRocm93IG5ldyDJtUFyZ3VtZW50T3V0T2ZSYW5nZUV4Y2VwdGlvbihhcmd1bWVudE5hbWUpO1xuXHRcdH1cblx0XHRpZiAocmFuZ2UuZW5kICYmIGFyZ3VtZW50VmFsdWUgPiByYW5nZS5lbmQpIHtcblx0XHRcdHRocm93IG5ldyDJtUFyZ3VtZW50T3V0T2ZSYW5nZUV4Y2VwdGlvbihhcmd1bWVudE5hbWUpO1xuXHRcdH1cblx0fVxuXG5cdC8vIGVuZHJlZ2lvblxufVxuIl19