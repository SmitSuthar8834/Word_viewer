{"ast":null,"code":"import { ClassTransformer } from './ClassTransformer';\nexport { ClassTransformer } from './ClassTransformer';\nexport * from './decorators';\nexport * from './interfaces';\nexport * from './enums';\nconst classTransformer = new ClassTransformer();\nexport function classToPlain(object, options) {\n  return classTransformer.classToPlain(object, options);\n}\nexport function classToPlainFromExist(object, plainObject, options) {\n  return classTransformer.classToPlainFromExist(object, plainObject, options);\n}\nexport function plainToClass(cls, plain, options) {\n  return classTransformer.plainToClass(cls, plain, options);\n}\nexport function plainToClassFromExist(clsObject, plain, options) {\n  return classTransformer.plainToClassFromExist(clsObject, plain, options);\n}\nexport function classToClass(object, options) {\n  return classTransformer.classToClass(object, options);\n}\nexport function classToClassFromExist(object, fromObject, options) {\n  return classTransformer.classToClassFromExist(object, fromObject, options);\n}\nexport function serialize(object, options) {\n  return classTransformer.serialize(object, options);\n}\n/**\n * Deserializes given JSON string to a object of the given class.\n */\nexport function deserialize(cls, json, options) {\n  return classTransformer.deserialize(cls, json, options);\n}\n/**\n * Deserializes given JSON string to an array of objects of the given class.\n */\nexport function deserializeArray(cls, json, options) {\n  return classTransformer.deserializeArray(cls, json, options);\n}","map":{"version":3,"names":["ClassTransformer","classTransformer","classToPlain","object","options","classToPlainFromExist","plainObject","plainToClass","cls","plain","plainToClassFromExist","clsObject","classToClass","classToClassFromExist","fromObject","serialize","deserialize","json","deserializeArray"],"sources":["C:/Users/Lenovo/Desktop/Attachment_Previewer/Attachment_Viewer/projects/word_viewer/node_modules/class-transformer/esm2015/index.js"],"sourcesContent":["import { ClassTransformer } from './ClassTransformer';\nexport { ClassTransformer } from './ClassTransformer';\nexport * from './decorators';\nexport * from './interfaces';\nexport * from './enums';\nconst classTransformer = new ClassTransformer();\nexport function classToPlain(object, options) {\n    return classTransformer.classToPlain(object, options);\n}\nexport function classToPlainFromExist(object, plainObject, options) {\n    return classTransformer.classToPlainFromExist(object, plainObject, options);\n}\nexport function plainToClass(cls, plain, options) {\n    return classTransformer.plainToClass(cls, plain, options);\n}\nexport function plainToClassFromExist(clsObject, plain, options) {\n    return classTransformer.plainToClassFromExist(clsObject, plain, options);\n}\nexport function classToClass(object, options) {\n    return classTransformer.classToClass(object, options);\n}\nexport function classToClassFromExist(object, fromObject, options) {\n    return classTransformer.classToClassFromExist(object, fromObject, options);\n}\nexport function serialize(object, options) {\n    return classTransformer.serialize(object, options);\n}\n/**\n * Deserializes given JSON string to a object of the given class.\n */\nexport function deserialize(cls, json, options) {\n    return classTransformer.deserialize(cls, json, options);\n}\n/**\n * Deserializes given JSON string to an array of objects of the given class.\n */\nexport function deserializeArray(cls, json, options) {\n    return classTransformer.deserializeArray(cls, json, options);\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AACrD,SAASA,gBAAgB,QAAQ,oBAAoB;AACrD,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B,cAAc,SAAS;AACvB,MAAMC,gBAAgB,GAAG,IAAID,gBAAgB,EAAE;AAC/C,OAAO,SAASE,YAAY,CAACC,MAAM,EAAEC,OAAO,EAAE;EAC1C,OAAOH,gBAAgB,CAACC,YAAY,CAACC,MAAM,EAAEC,OAAO,CAAC;AACzD;AACA,OAAO,SAASC,qBAAqB,CAACF,MAAM,EAAEG,WAAW,EAAEF,OAAO,EAAE;EAChE,OAAOH,gBAAgB,CAACI,qBAAqB,CAACF,MAAM,EAAEG,WAAW,EAAEF,OAAO,CAAC;AAC/E;AACA,OAAO,SAASG,YAAY,CAACC,GAAG,EAAEC,KAAK,EAAEL,OAAO,EAAE;EAC9C,OAAOH,gBAAgB,CAACM,YAAY,CAACC,GAAG,EAAEC,KAAK,EAAEL,OAAO,CAAC;AAC7D;AACA,OAAO,SAASM,qBAAqB,CAACC,SAAS,EAAEF,KAAK,EAAEL,OAAO,EAAE;EAC7D,OAAOH,gBAAgB,CAACS,qBAAqB,CAACC,SAAS,EAAEF,KAAK,EAAEL,OAAO,CAAC;AAC5E;AACA,OAAO,SAASQ,YAAY,CAACT,MAAM,EAAEC,OAAO,EAAE;EAC1C,OAAOH,gBAAgB,CAACW,YAAY,CAACT,MAAM,EAAEC,OAAO,CAAC;AACzD;AACA,OAAO,SAASS,qBAAqB,CAACV,MAAM,EAAEW,UAAU,EAAEV,OAAO,EAAE;EAC/D,OAAOH,gBAAgB,CAACY,qBAAqB,CAACV,MAAM,EAAEW,UAAU,EAAEV,OAAO,CAAC;AAC9E;AACA,OAAO,SAASW,SAAS,CAACZ,MAAM,EAAEC,OAAO,EAAE;EACvC,OAAOH,gBAAgB,CAACc,SAAS,CAACZ,MAAM,EAAEC,OAAO,CAAC;AACtD;AACA;AACA;AACA;AACA,OAAO,SAASY,WAAW,CAACR,GAAG,EAAES,IAAI,EAAEb,OAAO,EAAE;EAC5C,OAAOH,gBAAgB,CAACe,WAAW,CAACR,GAAG,EAAES,IAAI,EAAEb,OAAO,CAAC;AAC3D;AACA;AACA;AACA;AACA,OAAO,SAASc,gBAAgB,CAACV,GAAG,EAAES,IAAI,EAAEb,OAAO,EAAE;EACjD,OAAOH,gBAAgB,CAACiB,gBAAgB,CAACV,GAAG,EAAES,IAAI,EAAEb,OAAO,CAAC;AAChE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}