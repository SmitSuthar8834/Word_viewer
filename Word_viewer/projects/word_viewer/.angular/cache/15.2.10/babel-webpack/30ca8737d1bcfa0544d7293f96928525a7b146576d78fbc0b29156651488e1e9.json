{"ast":null,"code":"import { classToPlain, Exclude, Expose } from 'class-transformer';\nimport { __decorate, __metadata } from 'tslib';\n\n/**\n * @public\n * Returns a string represent of date in ISO 8601 without time zone specification(doesn't convert it\n * using local timezone).\n *\n * Example:\n *\n *      const date = new Date(2018, 01, 20, 15, 10, 30);\n *      const result = toLocalISOString(date);\n *      //result: '2018-02-20T15:10:30'\n *\n * @param date Date value.\n */\nfunction ɵtoLocalISOString(date) {\n  if (!(date instanceof Date)) {\n    throw new TypeError();\n  }\n  const timeZoneOffset = date.getTimezoneOffset() * 60000;\n  return new Date(date.getTime() - timeZoneOffset).toISOString().slice(0, -1);\n}\n/**\n * @public\n * Returns encoded date in string value.\n * @param date Date value.\n */\nfunction ɵencodeDate(date) {\n  return `\"${ɵtoLocalISOString(date)}\"`;\n}\n\n/**\n * @public\n */\nvar ɵDataSourceScope;\n(function (ɵDataSourceScope) {\n  ɵDataSourceScope[\"ViewElement\"] = \"viewElement\";\n  ɵDataSourceScope[\"Page\"] = \"page\";\n})(ɵDataSourceScope || (ɵDataSourceScope = {}));\n\n/**\n * @public\n */\nvar ɵDataSchemaAttributeType;\n(function (ɵDataSchemaAttributeType) {\n  ɵDataSchemaAttributeType[\"OwnAttribute\"] = \"Own\";\n  ɵDataSchemaAttributeType[\"ForwardReferenceAttribute\"] = \"ForwardReference\";\n  ɵDataSchemaAttributeType[\"BackReferenceAttribute\"] = \"BackReference\";\n  ɵDataSchemaAttributeType[\"AggregationAttribute\"] = \"Aggregation\";\n  ɵDataSchemaAttributeType[\"FunctionAttribute\"] = \"Function\";\n})(ɵDataSchemaAttributeType || (ɵDataSchemaAttributeType = {}));\n/**\n * @public\n */\nvar ɵDataSchemaAttributeUsageType;\n(function (ɵDataSchemaAttributeUsageType) {\n  ɵDataSchemaAttributeUsageType[ɵDataSchemaAttributeUsageType[\"General\"] = 0] = \"General\";\n  ɵDataSchemaAttributeUsageType[ɵDataSchemaAttributeUsageType[\"Advanced\"] = 1] = \"Advanced\";\n  ɵDataSchemaAttributeUsageType[ɵDataSchemaAttributeUsageType[\"None\"] = 2] = \"None\";\n})(ɵDataSchemaAttributeUsageType || (ɵDataSchemaAttributeUsageType = {}));\n\n/**\n * @public\n */\nvar ɵDefaultValueSource;\n(function (ɵDefaultValueSource) {\n  ɵDefaultValueSource[ɵDefaultValueSource[\"None\"] = 0] = \"None\";\n  ɵDefaultValueSource[ɵDefaultValueSource[\"Const\"] = 1] = \"Const\";\n  ɵDefaultValueSource[ɵDefaultValueSource[\"Settings\"] = 2] = \"Settings\";\n  ɵDefaultValueSource[ɵDefaultValueSource[\"SystemValue\"] = 3] = \"SystemValue\";\n  ɵDefaultValueSource[ɵDefaultValueSource[\"Sequence\"] = 4] = \"Sequence\";\n})(ɵDefaultValueSource || (ɵDefaultValueSource = {}));\n\n/**\n * Lookup mode\n * @internal\n */\nvar LookupMode;\n(function (LookupMode) {\n  LookupMode[\"List\"] = \"List\";\n  LookupMode[\"SelectionWindow\"] = \"SelectionWindow\";\n})(LookupMode || (LookupMode = {}));\nvar ɵDataValueType;\n(function (ɵDataValueType) {\n  ɵDataValueType[ɵDataValueType[\"Guid\"] = 0] = \"Guid\";\n  ɵDataValueType[ɵDataValueType[\"Text\"] = 1] = \"Text\";\n  ɵDataValueType[ɵDataValueType[\"Integer\"] = 4] = \"Integer\";\n  ɵDataValueType[ɵDataValueType[\"Float\"] = 5] = \"Float\";\n  ɵDataValueType[ɵDataValueType[\"Money\"] = 6] = \"Money\";\n  ɵDataValueType[ɵDataValueType[\"DateTime\"] = 7] = \"DateTime\";\n  ɵDataValueType[ɵDataValueType[\"Date\"] = 8] = \"Date\";\n  ɵDataValueType[ɵDataValueType[\"Time\"] = 9] = \"Time\";\n  ɵDataValueType[ɵDataValueType[\"Lookup\"] = 10] = \"Lookup\";\n  ɵDataValueType[ɵDataValueType[\"Enum\"] = 11] = \"Enum\";\n  ɵDataValueType[ɵDataValueType[\"Boolean\"] = 12] = \"Boolean\";\n  ɵDataValueType[ɵDataValueType[\"Blob\"] = 13] = \"Blob\";\n  ɵDataValueType[ɵDataValueType[\"Image\"] = 14] = \"Image\";\n  ɵDataValueType[ɵDataValueType[\"CUSTOM_OBJECT\"] = 15] = \"CUSTOM_OBJECT\";\n  ɵDataValueType[ɵDataValueType[\"IMAGELOOKUP\"] = 16] = \"IMAGELOOKUP\";\n  ɵDataValueType[ɵDataValueType[\"COLLECTION\"] = 17] = \"COLLECTION\";\n  ɵDataValueType[ɵDataValueType[\"Color\"] = 18] = \"Color\";\n  ɵDataValueType[ɵDataValueType[\"LOCALIZABLE_STRING\"] = 19] = \"LOCALIZABLE_STRING\";\n  ɵDataValueType[ɵDataValueType[\"ENTITY\"] = 20] = \"ENTITY\";\n  ɵDataValueType[ɵDataValueType[\"ENTITY_COLLECTION\"] = 21] = \"ENTITY_COLLECTION\";\n  ɵDataValueType[ɵDataValueType[\"ENTITY_COLUMN_MAPPING_COLLECTION\"] = 22] = \"ENTITY_COLUMN_MAPPING_COLLECTION\";\n  ɵDataValueType[ɵDataValueType[\"HASH_TEXT\"] = 23] = \"HASH_TEXT\";\n  ɵDataValueType[ɵDataValueType[\"SECURE_TEXT\"] = 24] = \"SECURE_TEXT\";\n  ɵDataValueType[ɵDataValueType[\"FILE\"] = 25] = \"FILE\";\n  ɵDataValueType[ɵDataValueType[\"MAPPING\"] = 26] = \"MAPPING\";\n  ɵDataValueType[ɵDataValueType[\"SHORT_TEXT\"] = 27] = \"SHORT_TEXT\";\n  ɵDataValueType[ɵDataValueType[\"MEDIUM_TEXT\"] = 28] = \"MEDIUM_TEXT\";\n  ɵDataValueType[ɵDataValueType[\"MAXSIZE_TEXT\"] = 29] = \"MAXSIZE_TEXT\";\n  ɵDataValueType[ɵDataValueType[\"LONG_TEXT\"] = 30] = \"LONG_TEXT\";\n  ɵDataValueType[ɵDataValueType[\"FLOAT1\"] = 31] = \"FLOAT1\";\n  ɵDataValueType[ɵDataValueType[\"FLOAT2\"] = 32] = \"FLOAT2\";\n  ɵDataValueType[ɵDataValueType[\"FLOAT3\"] = 33] = \"FLOAT3\";\n  ɵDataValueType[ɵDataValueType[\"FLOAT4\"] = 34] = \"FLOAT4\";\n  ɵDataValueType[ɵDataValueType[\"LOCALIZABLE_PARAMETER_VALUES_LIST\"] = 35] = \"LOCALIZABLE_PARAMETER_VALUES_LIST\";\n  ɵDataValueType[ɵDataValueType[\"METADATA_TEXT\"] = 36] = \"METADATA_TEXT\";\n  ɵDataValueType[ɵDataValueType[\"STAGE_INDICATOR\"] = 37] = \"STAGE_INDICATOR\";\n  ɵDataValueType[ɵDataValueType[\"OBJECT_LIST\"] = 38] = \"OBJECT_LIST\";\n  ɵDataValueType[ɵDataValueType[\"COMPOSITE_OBJECT_LIST\"] = 39] = \"COMPOSITE_OBJECT_LIST\";\n  ɵDataValueType[ɵDataValueType[\"FLOAT8\"] = 40] = \"FLOAT8\";\n  ɵDataValueType[ɵDataValueType[\"FILE_LOCATOR\"] = 41] = \"FILE_LOCATOR\";\n  ɵDataValueType[ɵDataValueType[\"PHONE_TEXT\"] = 42] = \"PHONE_TEXT\";\n  ɵDataValueType[ɵDataValueType[\"RICH_TEXT\"] = 43] = \"RICH_TEXT\";\n  ɵDataValueType[ɵDataValueType[\"WEB_TEXT\"] = 44] = \"WEB_TEXT\";\n  ɵDataValueType[ɵDataValueType[\"EMAIL_TEXT\"] = 45] = \"EMAIL_TEXT\";\n})(ɵDataValueType || (ɵDataValueType = {}));\nvar ɵAggregationType;\n(function (ɵAggregationType) {\n  /** Aggregation function type not defined. */\n  ɵAggregationType[ɵAggregationType[\"None\"] = 0] = \"None\";\n  /** Aggregation function type not defined. */\n  ɵAggregationType[ɵAggregationType[\"Count\"] = 1] = \"Count\";\n  /** Sum of values of all elements. */\n  ɵAggregationType[ɵAggregationType[\"Sum\"] = 2] = \"Sum\";\n  /** Average value for all elements. */\n  ɵAggregationType[ɵAggregationType[\"Avg\"] = 3] = \"Avg\";\n  /** The minimum value among all elements. */\n  ɵAggregationType[ɵAggregationType[\"Min\"] = 4] = \"Min\";\n  /** The maximum value among all elements. */\n  ɵAggregationType[ɵAggregationType[\"Max\"] = 5] = \"Max\";\n  /** Top one record from collection. */\n  ɵAggregationType[ɵAggregationType[\"TopOne\"] = 6] = \"TopOne\";\n})(ɵAggregationType || (ɵAggregationType = {}));\nvar ɵAggregationFunction;\n(function (ɵAggregationFunction) {\n  /** Aggregation function type not defined. */\n  ɵAggregationFunction[\"None\"] = \"\";\n  /** Aggregation function type not defined. */\n  ɵAggregationFunction[\"Count\"] = \"Count\";\n  /** Sum of values of all elements. */\n  ɵAggregationFunction[\"Sum\"] = \"Sum\";\n  /** Average value for all elements. */\n  ɵAggregationFunction[\"Avg\"] = \"Avg\";\n  /** The minimum value among all elements. */\n  ɵAggregationFunction[\"Min\"] = \"Min\";\n  /** The maximum value among all elements. */\n  ɵAggregationFunction[\"Max\"] = \"Max\";\n  /** Top one record from collection. */\n  ɵAggregationFunction[\"TopOne\"] = \"TopOne\";\n})(ɵAggregationFunction || (ɵAggregationFunction = {}));\n\n/**\n * Type of DataSchema. In combination with the name is used for unique identification of {@link DataSchema}.\n */\nvar ɵDataSchemaType;\n(function (ɵDataSchemaType) {\n  ɵDataSchemaType[\"Entity\"] = \"Entity\";\n  ɵDataSchemaType[\"ClientUnit\"] = \"ClientUnit\";\n})(ɵDataSchemaType || (ɵDataSchemaType = {}));\nvar ɵLogicalOperatorType;\n(function (ɵLogicalOperatorType) {\n  ɵLogicalOperatorType[ɵLogicalOperatorType[\"And\"] = 0] = \"And\";\n  ɵLogicalOperatorType[ɵLogicalOperatorType[\"Or\"] = 1] = \"Or\";\n})(ɵLogicalOperatorType || (ɵLogicalOperatorType = {}));\nvar ɵAggregationEvalType;\n(function (ɵAggregationEvalType) {\n  /** The scope of the aggregating function is not defined. */\n  ɵAggregationEvalType[ɵAggregationEvalType[\"None\"] = 0] = \"None\";\n  /** Applies to all elements. */\n  ɵAggregationEvalType[ɵAggregationEvalType[\"All\"] = 1] = \"All\";\n  /** Applies to unique values. */\n  ɵAggregationEvalType[ɵAggregationEvalType[\"Distinct\"] = 2] = \"Distinct\";\n})(ɵAggregationEvalType || (ɵAggregationEvalType = {}));\nvar ɵArithmeticOperation;\n(function (ɵArithmeticOperation) {\n  /** Addition. */\n  ɵArithmeticOperation[ɵArithmeticOperation[\"Addition\"] = 0] = \"Addition\";\n  /** Subtraction. */\n  ɵArithmeticOperation[ɵArithmeticOperation[\"Subtraction\"] = 1] = \"Subtraction\";\n  /** Multiplication. */\n  ɵArithmeticOperation[ɵArithmeticOperation[\"Multiplication\"] = 2] = \"Multiplication\";\n  /** Division. */\n  ɵArithmeticOperation[ɵArithmeticOperation[\"Division\"] = 3] = \"Division\";\n})(ɵArithmeticOperation || (ɵArithmeticOperation = {}));\n\n/* eslint-disable @typescript-eslint/naming-convention */\nvar ɵComparisonType;\n(function (ɵComparisonType) {\n  ɵComparisonType[ɵComparisonType[\"Between\"] = 0] = \"Between\";\n  ɵComparisonType[ɵComparisonType[\"Contain\"] = 11] = \"Contain\";\n  ɵComparisonType[ɵComparisonType[\"End_with\"] = 13] = \"End_with\";\n  ɵComparisonType[ɵComparisonType[\"Equal\"] = 3] = \"Equal\";\n  ɵComparisonType[ɵComparisonType[\"Exists\"] = 15] = \"Exists\";\n  ɵComparisonType[ɵComparisonType[\"Greater\"] = 7] = \"Greater\";\n  ɵComparisonType[ɵComparisonType[\"Greater_or_equal\"] = 8] = \"Greater_or_equal\";\n  ɵComparisonType[ɵComparisonType[\"Is_not_null\"] = 2] = \"Is_not_null\";\n  ɵComparisonType[ɵComparisonType[\"Is_null\"] = 1] = \"Is_null\";\n  ɵComparisonType[ɵComparisonType[\"Less\"] = 5] = \"Less\";\n  ɵComparisonType[ɵComparisonType[\"Less_or_equal\"] = 6] = \"Less_or_equal\";\n  ɵComparisonType[ɵComparisonType[\"Not_contain\"] = 12] = \"Not_contain\";\n  ɵComparisonType[ɵComparisonType[\"Not_end_with\"] = 14] = \"Not_end_with\";\n  ɵComparisonType[ɵComparisonType[\"Not_equal\"] = 4] = \"Not_equal\";\n  ɵComparisonType[ɵComparisonType[\"Not_exists\"] = 16] = \"Not_exists\";\n  ɵComparisonType[ɵComparisonType[\"Not_start_with\"] = 10] = \"Not_start_with\";\n  ɵComparisonType[ɵComparisonType[\"Start_with\"] = 9] = \"Start_with\";\n})(ɵComparisonType || (ɵComparisonType = {}));\nvar ɵDatePartType;\n(function (ɵDatePartType) {\n  /** Empty value. */\n  ɵDatePartType[ɵDatePartType[\"None\"] = 0] = \"None\";\n  /** Day. */\n  ɵDatePartType[ɵDatePartType[\"Day\"] = 1] = \"Day\";\n  /** Week. */\n  ɵDatePartType[ɵDatePartType[\"Week\"] = 2] = \"Week\";\n  /** Month. */\n  ɵDatePartType[ɵDatePartType[\"Month\"] = 3] = \"Month\";\n  /** Year. */\n  ɵDatePartType[ɵDatePartType[\"Year\"] = 4] = \"Year\";\n  /** Day of the week. */\n  ɵDatePartType[ɵDatePartType[\"WeekDay\"] = 5] = \"WeekDay\";\n  /** Hour. */\n  ɵDatePartType[ɵDatePartType[\"Hour\"] = 6] = \"Hour\";\n  /** Minute. */\n  ɵDatePartType[ɵDatePartType[\"HourMinute\"] = 7] = \"HourMinute\";\n})(ɵDatePartType || (ɵDatePartType = {}));\nvar ɵExpressionType;\n(function (ɵExpressionType) {\n  ɵExpressionType[ɵExpressionType[\"SchemaColumn\"] = 0] = \"SchemaColumn\";\n  ɵExpressionType[ɵExpressionType[\"Function\"] = 1] = \"Function\";\n  ɵExpressionType[ɵExpressionType[\"Parameter\"] = 2] = \"Parameter\";\n  ɵExpressionType[ɵExpressionType[\"SubQuery\"] = 3] = \"SubQuery\";\n  ɵExpressionType[ɵExpressionType[\"ArithmeticOperation\"] = 4] = \"ArithmeticOperation\";\n})(ɵExpressionType || (ɵExpressionType = {}));\nvar ɵFilterType;\n(function (ɵFilterType) {\n  ɵFilterType[ɵFilterType[\"None\"] = 0] = \"None\";\n  ɵFilterType[ɵFilterType[\"Compare\"] = 1] = \"Compare\";\n  ɵFilterType[ɵFilterType[\"IsNull\"] = 2] = \"IsNull\";\n  ɵFilterType[ɵFilterType[\"Between\"] = 3] = \"Between\";\n  ɵFilterType[ɵFilterType[\"In\"] = 4] = \"In\";\n  ɵFilterType[ɵFilterType[\"Exists\"] = 5] = \"Exists\";\n  ɵFilterType[ɵFilterType[\"FilterGroup\"] = 6] = \"FilterGroup\";\n})(ɵFilterType || (ɵFilterType = {}));\nvar ɵFunctionType;\n(function (ɵFunctionType) {\n  ɵFunctionType[ɵFunctionType[\"None\"] = 0] = \"None\";\n  /** Substitution by macro. */\n  ɵFunctionType[ɵFunctionType[\"Macros\"] = 1] = \"Macros\";\n  /** Aggregating function. */\n  ɵFunctionType[ɵFunctionType[\"Aggregation\"] = 2] = \"Aggregation\";\n  /** Date fragment. */\n  ɵFunctionType[ɵFunctionType[\"DatePart\"] = 3] = \"DatePart\";\n  /** The size of the value in bytes, used for binary data. */\n  ɵFunctionType[ɵFunctionType[\"Length\"] = 4] = \"Length\";\n  /** Window query function */\n  ɵFunctionType[ɵFunctionType[\"Window\"] = 5] = \"Window\";\n  /** Date add. */\n  ɵFunctionType[ɵFunctionType[\"DateAdd\"] = 6] = \"DateAdd\";\n  /** Date diff. */\n  ɵFunctionType[ɵFunctionType[\"DateDiff\"] = 7] = \"DateDiff\";\n})(ɵFunctionType || (ɵFunctionType = {}));\nvar ɵOrderDirection;\n(function (ɵOrderDirection) {\n  ɵOrderDirection[ɵOrderDirection[\"None\"] = 0] = \"None\";\n  ɵOrderDirection[ɵOrderDirection[\"Asc\"] = 1] = \"Asc\";\n  ɵOrderDirection[ɵOrderDirection[\"Desc\"] = 2] = \"Desc\";\n})(ɵOrderDirection || (ɵOrderDirection = {}));\nvar ɵQueryMacrosType;\n(function (ɵQueryMacrosType) {\n  /** Macro type not defined. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"None\"] = 0] = \"None\";\n  /** Current user. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"CurrentUser\"] = 1] = \"CurrentUser\";\n  /** Current user contact. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"CurrentUserContact\"] = 2] = \"CurrentUserContact\";\n  /** Yesterday. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"Yesterday\"] = 3] = \"Yesterday\";\n  /** Today. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"Today\"] = 4] = \"Today\";\n  /** Tomorrow. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"Tomorrow\"] = 5] = \"Tomorrow\";\n  /** Previous week. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"PreviousWeek\"] = 6] = \"PreviousWeek\";\n  /** This week. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"CurrentWeek\"] = 7] = \"CurrentWeek\";\n  /** Next week. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"NextWeek\"] = 8] = \"NextWeek\";\n  /** Previous month. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"PreviousMonth\"] = 9] = \"PreviousMonth\";\n  /** Current month. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"CurrentMonth\"] = 10] = \"CurrentMonth\";\n  /** Next month. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"NextMonth\"] = 11] = \"NextMonth\";\n  /** Previous quarter. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"PreviousQuarter\"] = 12] = \"PreviousQuarter\";\n  /** Current quarter. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"CurrentQuarter\"] = 13] = \"CurrentQuarter\";\n  /** Next quarter. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"NextQuarter\"] = 14] = \"NextQuarter\";\n  /** Previous half of the year. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"PreviousHalfYear\"] = 15] = \"PreviousHalfYear\";\n  /** Current half-year. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"CurrentHalfYear\"] = 16] = \"CurrentHalfYear\";\n  /** Next half-year. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"NextHalfYear\"] = 17] = \"NextHalfYear\";\n  /** Last year. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"PreviousYear\"] = 18] = \"PreviousYear\";\n  /** This year. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"CurrentYear\"] = 19] = \"CurrentYear\";\n  /** Previous hour. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"PreviousHour\"] = 20] = \"PreviousHour\";\n  /** Current hour. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"CurrentHour\"] = 21] = \"CurrentHour\";\n  /** Next hour. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"NextHour\"] = 22] = \"NextHour\";\n  /** Next year. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"NextYear\"] = 23] = \"NextYear\";\n  /** Next N Days. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"NextNDays\"] = 24] = \"NextNDays\";\n  /** Previous N days. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"PreviousNDays\"] = 25] = \"PreviousNDays\";\n  /** Next N hours. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"NextNHours\"] = 26] = \"NextNHours\";\n  /** Previous N hours. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"PreviousNHours\"] = 27] = \"PreviousNHours\";\n  /** Primary column. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"PrimaryColumn\"] = 34] = \"PrimaryColumn\";\n  /** Primary displayed column. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"PrimaryDisplayColumn\"] = 35] = \"PrimaryDisplayColumn\";\n  /** Primary image display column. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"PrimaryImageColumn\"] = 36] = \"PrimaryImageColumn\";\n  /** Anniversary today. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"DayOfYearToday\"] = 37] = \"DayOfYearToday\";\n  /** Anniversary on the date computed as today plus days offset. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"DayOfYearTodayPlusDaysOffset\"] = 38] = \"DayOfYearTodayPlusDaysOffset\";\n  /** Anniversary on the next several days. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"NextNDaysOfYear\"] = 39] = \"NextNDaysOfYear\";\n  /** Anniversary on the previous several days. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"PreviousNDaysOfYear\"] = 40] = \"PreviousNDaysOfYear\";\n  /** Primary color display column. */\n  ɵQueryMacrosType[ɵQueryMacrosType[\"PrimaryColorColumn\"] = 41] = \"PrimaryColorColumn\";\n})(ɵQueryMacrosType || (ɵQueryMacrosType = {}));\nclass ɵBaseExpression {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [this._instanceOfKey];\n  }\n  static [Symbol.hasInstance](instance) {\n    const instanceOfKeys = instance?.constructor?.['_instanceOfKeys'] ?? [];\n    return instanceOfKeys.includes(this._instanceOfKey);\n  }\n  constructor(config) {\n    this.isBlock = false;\n    this.isBlock = config?.isBlock;\n  }\n  /**\n   * Parses expression from json.\n   * @public\n   */\n  static fromJson(dto, filterParser, expressionParser) {\n    throw new Error(`fromJson not supported on expression type ${this.constructor.name}`);\n  }\n  serializeItem(item) {\n    return typeof item.toJson === 'function' ? item.toJson() : classToPlain(item, {\n      exposeUnsetFields: false,\n      excludePrefixes: ['_']\n    });\n  }\n  /**\n   * Converts instance to json object.\n   * @public\n   */\n  toJson() {\n    return classToPlain(this, {\n      exposeUnsetFields: false,\n      excludePrefixes: ['_']\n    });\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵBaseExpression._instanceOfKey = 'devkit_BaseExpression';\nclass ɵArithmeticExpression extends ɵBaseExpression {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵBaseExpression._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(config) {\n    super(config);\n    this.expressionType = ɵExpressionType.ArithmeticOperation;\n    this.arithmeticOperation = config?.arithmeticOperation;\n    this.leftArithmeticOperand = config?.leftArithmeticOperand.clone();\n    this.rightArithmeticOperand = config?.rightArithmeticOperand.clone();\n  }\n  /**\n   * Parses expression from json.\n   * @public\n   */\n  static fromJson(dto, filterParser, expressionParser) {\n    const leftArithmeticOperand = expressionParser?.fromJson(dto['leftArithmeticOperand'], filterParser);\n    const rightArithmeticOperand = expressionParser?.fromJson(dto['rightArithmeticOperand'], filterParser);\n    const config = {\n      leftArithmeticOperand,\n      rightArithmeticOperand,\n      arithmeticOperation: dto['arithmeticOperation'],\n      isBlock: dto['isBlock']\n    };\n    return new ɵArithmeticExpression(config);\n  }\n  clone() {\n    return new ɵArithmeticExpression(this);\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵArithmeticExpression._instanceOfKey = 'devkit_ArithmeticExpression';\nclass ɵColumnExpression extends ɵBaseExpression {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵBaseExpression._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(config) {\n    super(config);\n    this.expressionType = ɵExpressionType.SchemaColumn;\n    this.columnPath = config?.columnPath;\n  }\n  /**\n   * Parses expression from json.\n   * @public\n   */\n  static fromJson(dto) {\n    const expression = new ɵColumnExpression({\n      columnPath: dto['columnPath']\n    });\n    return expression;\n  }\n  clone() {\n    return new ɵColumnExpression(this);\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵColumnExpression._instanceOfKey = 'devkit_ColumnExpression';\n\n/**\n * Expression parser interface\n * @public\n */\nclass ɵBaseExpressionParser {\n  static fromJson(dto, filterParser) {\n    throw new Error('not implemented');\n  }\n}\nclass ɵFunctionExpression extends ɵBaseExpression {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵBaseExpression._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(config) {\n    super(config);\n    this.expressionType = ɵExpressionType.Function;\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵFunctionExpression._instanceOfKey = 'devkit_FunctionExpression';\nclass ɵArgumentFunctionExpression extends ɵFunctionExpression {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵFunctionExpression._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(config) {\n    super(config);\n    this.functionArgument = config?.functionArgument.clone();\n  }\n  toJson() {\n    const result = super.toJson();\n    if (this.functionArgument) {\n      result['functionArgument'] = this.serializeItem(this.functionArgument);\n    }\n    return result;\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵArgumentFunctionExpression._instanceOfKey = 'devkit_ArgumentFunctionExpression';\nclass ɵAggregationFunctionExpression extends ɵArgumentFunctionExpression {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵArgumentFunctionExpression._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(config) {\n    super(config);\n    this.functionType = ɵFunctionType.Aggregation;\n    this.aggregationType = config?.aggregationType;\n    this.aggregationEvalType = config?.aggregationEvalType;\n  }\n  /**\n   * Parses expression from json.\n   * @public\n   */\n  static fromJson(dto, filterParser, expressionParser) {\n    const functionArgument = expressionParser?.fromJson(dto['functionArgument'], filterParser);\n    const aggregationType = dto['aggregationType'];\n    const aggregationEvalType = dto['aggregationEvalType'];\n    return new ɵAggregationFunctionExpression({\n      functionArgument,\n      aggregationType,\n      aggregationEvalType,\n      isBlock: dto['isBlock']\n    });\n  }\n  clone() {\n    return new ɵAggregationFunctionExpression(this);\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵAggregationFunctionExpression._instanceOfKey = 'devkit_AggregationFunctionExpression';\nclass ɵDatePartFunctionExpression extends ɵArgumentFunctionExpression {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵArgumentFunctionExpression._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(config) {\n    super(config);\n    this.functionType = ɵFunctionType.DatePart;\n    this.datePartType = config?.datePartType;\n  }\n  /**\n   * Parses expression from json.\n   * @public\n   */\n  static fromJson(dto, filterParser, expressionParser) {\n    const functionArgument = expressionParser?.fromJson(dto['functionArgument'], filterParser);\n    const datePartType = dto['datePartType'];\n    return new ɵDatePartFunctionExpression({\n      functionArgument,\n      datePartType,\n      isBlock: dto['isBlock']\n    });\n  }\n  clone() {\n    return new ɵDatePartFunctionExpression(this);\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵDatePartFunctionExpression._instanceOfKey = 'devkit_DatePartFunctionExpression';\nclass ɵLengthFunctionExpression extends ɵArgumentFunctionExpression {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵArgumentFunctionExpression._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(config) {\n    super(config);\n    this.functionType = ɵFunctionType.Length;\n  }\n  /**\n   * Parses expression from json.\n   * @public\n   */\n  static fromJson(dto, filterParser, expressionParser) {\n    const functionArgument = expressionParser?.fromJson(dto['functionArgument'], filterParser);\n    return new ɵLengthFunctionExpression({\n      functionArgument,\n      isBlock: dto['isBlock']\n    });\n  }\n  clone() {\n    return new ɵLengthFunctionExpression(this);\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵLengthFunctionExpression._instanceOfKey = 'devkit_LengthFunctionExpression';\nclass ɵMacrosFunctionExpression extends ɵFunctionExpression {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵFunctionExpression._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(config) {\n    super(config);\n    this.functionType = ɵFunctionType.Macros;\n    this.macrosType = config?.macrosType;\n  }\n  /**\n   * Parses expression from json.\n   * @public\n   */\n  static fromJson(dto) {\n    const expression = new ɵMacrosFunctionExpression({\n      macrosType: dto['macrosType']\n    });\n    return expression;\n  }\n  clone() {\n    return new ɵMacrosFunctionExpression(this);\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵMacrosFunctionExpression._instanceOfKey = 'devkit_MacrosFunctionExpression';\nclass ɵWindowFunctionExpression extends ɵArgumentFunctionExpression {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵArgumentFunctionExpression._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(config) {\n    super(config);\n    this.functionType = ɵFunctionType.Window;\n  }\n  /**\n   * Parses expression from json.\n   * @public\n   */\n  static fromJson(dto, filterParser, expressionParser) {\n    const functionArgument = expressionParser?.fromJson(dto['functionArgument'], filterParser);\n    return new ɵWindowFunctionExpression({\n      functionArgument,\n      isBlock: dto['isBlock']\n    });\n  }\n  clone() {\n    return new ɵWindowFunctionExpression(this);\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵWindowFunctionExpression._instanceOfKey = 'devkit_WindowFunctionExpression';\nclass ɵParameterExpression extends ɵBaseExpression {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵBaseExpression._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(config) {\n    super(config);\n    this.expressionType = ɵExpressionType.Parameter;\n    const value = config?.value;\n    if (value instanceof Date) {\n      const cloneDate = new Date();\n      cloneDate.setTime(value.getTime());\n      this.value = cloneDate;\n    } else if (!value) {\n      this.value = value;\n    } else {\n      this.value = typeof value === 'object' ? {\n        ...value\n      } : value;\n    }\n    this.dataValueType = config?.dataValueType ?? ɵDataValueType.Text;\n    this.parameter = {\n      dataValueType: this.dataValueType,\n      ...this._getParameterValueMetadata()\n    };\n  }\n  /**\n   * Parses expression from json.\n   * @public\n   */\n  static fromJson(dto) {\n    const expression = new ɵParameterExpression(dto['parameter']);\n    return expression;\n  }\n  _convertStringToBlobArray(str) {\n    const out = [];\n    let position = 0;\n    for (let i = 0; i < str.length; i++) {\n      const code = str.charCodeAt(i);\n      if (code < 128) {\n        out[position++] = String.fromCharCode(code);\n      } else if (code < 2048) {\n        /* eslint-disable no-bitwise */\n        out[position++] = String.fromCharCode(code >> 6 | 192);\n        out[position++] = String.fromCharCode(code & 63 | 128);\n      } else {\n        out[position++] = String.fromCharCode(code >> 12 | 224);\n        out[position++] = String.fromCharCode(code >> 6 & 63 | 128);\n        out[position++] = String.fromCharCode(code & 63 | 128);\n        /* eslint-enable no-bitwise */\n      }\n    }\n\n    return out;\n  }\n  _getParameterValueMetadata() {\n    if (this.dataValueType === ɵDataValueType.Blob) {\n      return {\n        arrayValue: !this.value ? [] : this._convertStringToBlobArray(this.value)\n      };\n    } else if (this.value instanceof Date) {\n      return {\n        value: ɵencodeDate(this.value)\n      };\n    } else {\n      return {\n        value: this.value\n      };\n    }\n  }\n  clone() {\n    return new ɵParameterExpression(this);\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵParameterExpression._instanceOfKey = 'devkit_ParameterExpression';\n__decorate([Exclude(), __metadata(\"design:type\", Object)], ɵParameterExpression.prototype, \"value\", void 0);\n__decorate([Exclude(), __metadata(\"design:type\", Number)], ɵParameterExpression.prototype, \"dataValueType\", void 0);\nclass ɵSubQueryExpression extends ɵBaseExpression {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵBaseExpression._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(config) {\n    super(config);\n    this.expressionType = ɵExpressionType.SubQuery;\n    this.columnPath = config?.columnPath;\n    const subFilter = config?.subFilters;\n    this.subFilters = typeof subFilter?.clone === 'function' ? subFilter.clone() : subFilter;\n    this.subOrderDirection = config.subOrderDirection;\n    this.subOrderColumn = config.subOrderColumn;\n  }\n  /**\n   * Parses expression from json.\n   * @public\n   */\n  static fromJson(dto, filterParser) {\n    const expression = new ɵSubQueryExpression({\n      columnPath: dto['columnPath'],\n      subFilters: filterParser.fromJson(dto['subFilters']),\n      subOrderDirection: dto['subOrderDirection'],\n      subOrderColumn: dto['subOrderColumn']\n    });\n    return expression;\n  }\n  clone() {\n    return new ɵSubQueryExpression(this);\n  }\n  toJson() {\n    const result = super.toJson();\n    if (this.subFilters) {\n      result['subFilters'] = this.serializeItem(this.subFilters);\n    }\n    return result;\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵSubQueryExpression._instanceOfKey = 'devkit_SubQueryExpression';\nclass ɵAggregationSubQueryExpression extends ɵSubQueryExpression {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵSubQueryExpression._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(config) {\n    super(config);\n    this.aggregationType = config?.aggregationType;\n    this.functionType = config?.functionType;\n  }\n  /**\n   * Parses expression from json.\n   * @public\n   */\n  static fromJson(dto, filterParser) {\n    const subQueryExpression = super.fromJson(dto, filterParser);\n    const expression = new ɵAggregationSubQueryExpression({\n      aggregationType: dto['aggregationType'],\n      functionType: dto['functionType'],\n      ...subQueryExpression\n    });\n    return expression;\n  }\n  clone() {\n    return new ɵAggregationSubQueryExpression(this);\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵAggregationSubQueryExpression._instanceOfKey = 'devkit_AggregationSubQueryExpression';\n\n/**\n * Function expression resolver.\n * @public\n */\nclass FunctionExpressionResolver {\n  static resolve(dto) {\n    const expressionClass = {\n      [ɵFunctionType.Macros]: ɵMacrosFunctionExpression,\n      [ɵFunctionType.Length]: ɵLengthFunctionExpression,\n      [ɵFunctionType.Window]: ɵWindowFunctionExpression,\n      [ɵFunctionType.DatePart]: ɵDatePartFunctionExpression,\n      [ɵFunctionType.DateAdd]: ɵDatePartFunctionExpression,\n      [ɵFunctionType.DateDiff]: ɵDatePartFunctionExpression\n    };\n    return expressionClass[dto['functionType']];\n  }\n}\n/**\n * Expression resolver.\n * @public\n */\nclass ɵExpressionResolver {\n  static resolve(expressionType, dto) {\n    const expressionClass = {\n      [ɵExpressionType.SchemaColumn]: ɵColumnExpression,\n      [ɵExpressionType.Parameter]: ɵParameterExpression,\n      [ɵExpressionType.SubQuery]: ɵAggregationSubQueryExpression,\n      [ɵExpressionType.ArithmeticOperation]: ɵArithmeticExpression,\n      [ɵExpressionType.Function]: FunctionExpressionResolver.resolve(dto)\n    };\n    return expressionClass[expressionType];\n  }\n}\n\n/**\n * Expression parser.\n * @public\n */\nclass ɵExpressionParser extends ɵBaseExpressionParser {\n  /**\n   * Parses expression from json.\n   * @public\n   */\n  static fromJson(dto, filterParser) {\n    const expressionType = dto['expressionType'];\n    return ɵExpressionResolver.resolve(expressionType, dto).fromJson(dto, filterParser, ɵExpressionParser);\n  }\n}\nconst ɵEXPRESSION_TYPE_MOCK = -1;\nclass ɵExpressionMock extends ɵBaseExpression {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵBaseExpression._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(config) {\n    super(config || {});\n    this.expressionType = ɵEXPRESSION_TYPE_MOCK;\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  get plainObject() {\n    return classToPlain(this, {\n      exposeUnsetFields: false,\n      excludePrefixes: ['_']\n    });\n  }\n  clone() {\n    return new ɵExpressionMock(this);\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵExpressionMock._instanceOfKey = 'devkit_ExpressionMock';\nclass ɵBaseFilter {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [this._instanceOfKey];\n  }\n  static [Symbol.hasInstance](instance) {\n    const instanceOfKeys = instance?.constructor?.['_instanceOfKeys'] ?? [];\n    return instanceOfKeys.includes(this._instanceOfKey);\n  }\n  constructor(filterType) {\n    this.isEnabled = true;\n    this.trimDateTimeParameterToDate = false;\n    this.filterType = filterType;\n  }\n  /**\n   * Parses filter from json.\n   * @public\n   */\n  static fromJson(dto, filterParser, expressionParser) {\n    throw new Error(`fromJson not supported on filter type ${this.constructor.name}`);\n  }\n  serializeItem(item) {\n    return typeof item.toJson === 'function' ? item.toJson() : classToPlain(item, {\n      exposeUnsetFields: false,\n      excludePrefixes: ['_']\n    });\n  }\n  /**\n   * Converts instance to json object.\n   * @public\n   */\n  toJson() {\n    return classToPlain(this, {\n      exposeUnsetFields: false,\n      excludePrefixes: ['_']\n    });\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵBaseFilter._instanceOfKey = 'devkit_BaseFilter';\nclass ɵFilterMock extends ɵBaseFilter {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵBaseFilter._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(filterType = ɵFilterType.None) {\n    super(filterType);\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  get plainObject() {\n    return classToPlain(this, {\n      exposeUnsetFields: false,\n      excludePrefixes: ['_']\n    });\n  }\n  clone() {\n    return new ɵFilterMock(this.filterType);\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵFilterMock._instanceOfKey = 'devkit_FilterMock';\nconst ɵparserMock = {\n  fromJson: data => ({\n    ...data,\n    clone: () => data\n  }),\n  clone: () => this\n};\nclass ɵSingleFilter extends ɵBaseFilter {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵBaseFilter._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(filterType, comparisonType, leftExpression) {\n    super(filterType);\n    this.comparisonType = comparisonType;\n    this.leftExpression = leftExpression.clone();\n  }\n  toJson() {\n    return {\n      ...super.toJson(),\n      leftExpression: this.serializeItem(this.leftExpression)\n    };\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵSingleFilter._instanceOfKey = 'devkit_SingleFilter';\nclass ɵCompareFilter extends ɵSingleFilter {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵSingleFilter._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(comparisonType, leftExpression, rightExpression) {\n    super(ɵFilterType.Compare, comparisonType, leftExpression);\n    this.rightExpression = rightExpression.clone();\n  }\n  /**\n   * Parses filter from json.\n   * @public\n   */\n  static fromJson(dto, filterParser, expressionParser) {\n    const filter = new ɵCompareFilter(dto['comparisonType'], expressionParser.fromJson(dto['leftExpression'], filterParser), expressionParser.fromJson(dto['rightExpression'], filterParser));\n    return filter;\n  }\n  clone() {\n    return new ɵCompareFilter(this.comparisonType, this.leftExpression, this.rightExpression);\n  }\n  toJson() {\n    return {\n      ...super.toJson(),\n      rightExpression: this.serializeItem(this.rightExpression)\n    };\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵCompareFilter._instanceOfKey = 'devkit_CompareFilter';\nclass ɵBetweenFilter extends ɵSingleFilter {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵSingleFilter._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(leftExpression, rightLessExpression, rightGreaterExpression) {\n    super(ɵFilterType.Between, ɵComparisonType.Between, leftExpression);\n    this.rightLessExpression = rightLessExpression.clone();\n    this.rightGreaterExpression = rightGreaterExpression.clone();\n  }\n  /**\n   * Parses filter from json.\n   * @public\n   */\n  static fromJson(dto, filterParser, expressionParser) {\n    const filter = new ɵBetweenFilter(expressionParser.fromJson(dto['leftExpression'], filterParser), expressionParser.fromJson(dto['rightLessExpression'], filterParser), expressionParser.fromJson(dto['rightGreaterExpression'], filterParser));\n    return filter;\n  }\n  clone() {\n    return new ɵBetweenFilter(this.leftExpression, this.rightLessExpression, this.rightGreaterExpression);\n  }\n  toJson() {\n    return {\n      ...super.toJson(),\n      rightLessExpression: this.serializeItem(this.rightLessExpression),\n      rightGreaterExpression: this.serializeItem(this.rightGreaterExpression)\n    };\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵBetweenFilter._instanceOfKey = 'devkit_BetweenFilter';\nclass ɵExistsFilter extends ɵSingleFilter {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵSingleFilter._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(leftExpression, subFilters, comparisonType = ɵComparisonType.Exists, isAggregative = true) {\n    super(ɵFilterType.Exists, comparisonType, leftExpression);\n    this.subFilters = subFilters?.clone();\n    this.isAggregative = isAggregative;\n  }\n  /**\n   * Parses filter from json.\n   * @public\n   */\n  static fromJson(dto, filterParser, expressionParser) {\n    const leftExpression = expressionParser.fromJson(dto['leftExpression'], filterParser);\n    const subFilters = filterParser.fromJson(dto['subFilters']);\n    return new ɵExistsFilter(leftExpression, subFilters, dto['comparisonType'], dto['isAggregative']);\n  }\n  clone() {\n    return new ɵExistsFilter(this.leftExpression, this.subFilters, this.comparisonType, this.isAggregative);\n  }\n  toJson() {\n    const result = super.toJson();\n    if (this.subFilters) {\n      result['subFilters'] = this.serializeItem(this.subFilters);\n    }\n    return result;\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵExistsFilter._instanceOfKey = 'devkit_ExistsFilter';\nclass ɵInFilter extends ɵSingleFilter {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵSingleFilter._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(comparisonType, leftExpression, rightExpressions) {\n    super(ɵFilterType.In, comparisonType, leftExpression);\n    this.rightExpressions = rightExpressions.map(expression => expression.clone());\n  }\n  /**\n   * Parses in filter from json.\n   * @public\n   */\n  static fromJson(dto, filterParser, expressionParser) {\n    const dtoRightExpressions = dto['rightExpressions'] ?? [];\n    return new ɵInFilter(dto['comparisonType'], expressionParser.fromJson(dto['leftExpression'], filterParser), dtoRightExpressions.map(expression => expressionParser.fromJson(expression, filterParser)));\n  }\n  clone() {\n    return new ɵInFilter(this.comparisonType, this.leftExpression, this.rightExpressions);\n  }\n  toJson() {\n    return {\n      ...super.toJson(),\n      rightExpressions: this.rightExpressions.map(expression => this.serializeItem(expression))\n    };\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵInFilter._instanceOfKey = 'devkit_InFilter';\nclass ɵIsNullFilter extends ɵSingleFilter {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵSingleFilter._instanceOfKeys, this._instanceOfKey];\n  }\n  constructor(comparisonType, leftExpression) {\n    super(ɵFilterType.IsNull, comparisonType, leftExpression);\n  }\n  get isNull() {\n    return this.comparisonType === ɵComparisonType.Is_null;\n  }\n  /**\n   * Parses isNull filter from json.\n   * @public\n   */\n  static fromJson(dto, filterParser, expressionParser) {\n    return new ɵIsNullFilter(dto['comparisonType'], expressionParser.fromJson(dto['leftExpression'], filterParser));\n  }\n  clone() {\n    return new ɵIsNullFilter(this.comparisonType, this.leftExpression);\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵIsNullFilter._instanceOfKey = 'devkit_IsNullFilter';\n__decorate([Expose(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ɵIsNullFilter.prototype, \"isNull\", null);\n\n/**\n * Empty Guid constant.\n * @public\n */\nconst ɵEMPTY_GUID = '00000000-0000-0000-0000-000000000000';\n/**\n * Regular expression for Guid validation.\n * @public\n */\nconst validator = new RegExp('^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$', 'i');\n/**\n * Generates guid part.\n * @param length Part length.\n * @public\n */\nfunction generateGuidPart(length) {\n  let out = '';\n  for (let i = 0; i < length; i++) {\n    // eslint-disable-next-line no-bitwise\n    out += ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);\n  }\n  return out;\n}\n/**\n * Generates new Guid.\n * @public\n */\nfunction ɵgenerateGuid() {\n  return [generateGuidPart(2), generateGuidPart(1), generateGuidPart(1), generateGuidPart(1), generateGuidPart(3)].join('-');\n}\n/**\n * Checks if value is Guid.\n * @param value Value for check.\n * @public\n */\nfunction ɵisGuid(value) {\n  return Boolean(value) && validator.test(value);\n}\n/**\n * Checks if Guid is empty value or equal to EMPTY_GUID.\n * @param guid Guid for check.\n * @public\n */\nfunction ɵisEmptyGuid(guid) {\n  return !guid || guid === ɵEMPTY_GUID;\n}\n\n/**\n * @public\n */\nclass ɵNextHandlerAlreadySpecifiedException extends Error {\n  constructor() {\n    super('Next handler already specified');\n  }\n}\nclass ɵArgumentEmptyException extends Error {\n  // region Constructors: Public\n  constructor(argumentName) {\n    super(`Argument with name '${argumentName}' is empty.`);\n  }\n}\nclass ɵArgumentOutOfRangeException extends Error {\n  // region Constructors: Public\n  constructor(argumentName) {\n    super(`Argument with name '${argumentName}' is out of range.`);\n  }\n}\nclass ɵItemNotFoundException extends Error {\n  // region Constructors: Public\n  constructor(key) {\n    super(`Item with key '${key}' does not exist.`);\n  }\n}\nclass ɵValidationUtilities {\n  // region Methods: Public\n  static checkArgumentEmpty(argumentName, argumentValue) {\n    if (argumentValue === undefined || argumentValue === null) {\n      throw new ɵArgumentEmptyException(argumentName);\n    }\n  }\n  static checkArrayEmpty(argumentName, argumentValue) {\n    ɵValidationUtilities.checkArgumentEmpty(argumentName, argumentValue);\n    if (argumentValue.length === 0) {\n      throw new ɵArgumentEmptyException(argumentName);\n    }\n  }\n  static checkStringIsNotEmpty(argumentName, argumentValue) {\n    this.checkArgumentEmpty(argumentName, argumentValue);\n    if (argumentValue === '') {\n      throw new ɵArgumentEmptyException(argumentName);\n    }\n    return argumentValue;\n  }\n  static checkArgumentOutOfRange(argumentName, argumentValue, range) {\n    if (range.begin && argumentValue < range.begin) {\n      throw new ɵArgumentOutOfRangeException(argumentName);\n    }\n    if (range.end && argumentValue > range.end) {\n      throw new ɵArgumentOutOfRangeException(argumentName);\n    }\n  }\n}\nclass ɵFilterGroup extends ɵBaseFilter {\n  /**\n   * @internal\n   * @dontChange\n   */\n  static get _instanceOfKeys() {\n    return [...ɵBaseFilter._instanceOfKeys, this._instanceOfKey];\n  }\n  get items() {\n    const result = {};\n    this.filters.forEach((filter, key) => {\n      result[key] = this.serializeItem(filter);\n    });\n    return result;\n  }\n  constructor(logicalOperation = ɵLogicalOperatorType.And) {\n    super(ɵFilterType.FilterGroup);\n    this.filters = new Map();\n    this.logicalOperation = logicalOperation;\n  }\n  /**\n   * Parses filter group from json.\n   * @public\n   */\n  static fromJson(dto, filterParser) {\n    const logicalOperation = dto['logicalOperation'];\n    const group = new ɵFilterGroup(logicalOperation || ɵLogicalOperatorType.And);\n    Object.entries(dto['items']).forEach(([key, filterDTO]) => {\n      group.add(filterParser.fromJson(filterDTO), key);\n    });\n    return group;\n  }\n  /**\n   * Returns filter item by index.\n   * @param index Item index.\n   * @returns Filter.\n   */\n  getItemByIndex(index) {\n    return this.items[Object.keys(this.items)[index]];\n  }\n  /**\n   * Creates and adds compare filter by value.\n   * @param comparisonType Comparison type.\n   * @param columnPath Column path.\n   * @param parameterValue Parameter value.\n   * @param filterKey Filter key.\n   */\n  addSchemaColumnFilterWithParameter(comparisonType, columnPath, parameterValue, filterKey) {\n    const leftExpression = new ɵColumnExpression({\n      columnPath\n    });\n    const rightExpression = new ɵParameterExpression({\n      value: parameterValue\n    });\n    const filter = new ɵCompareFilter(comparisonType, leftExpression, rightExpression);\n    this.add(filter, filterKey);\n  }\n  /**\n   * Creates and adds in filter by values.\n   * @param comparisonType Comparison type.\n   * @param columnPath Column path.\n   * @param parameterValues Parameter values.\n   * @param filterKey Filter key.\n   */\n  addSchemaColumnInFilterWithParameters(comparisonType, columnPath, parameterValues, filterKey) {\n    const leftExpression = new ɵColumnExpression({\n      columnPath\n    });\n    const expressions = parameterValues.map(singleParameterValue => new ɵParameterExpression({\n      value: singleParameterValue\n    }));\n    const filter = new ɵInFilter(comparisonType, leftExpression, expressions);\n    this.add(filter, filterKey);\n  }\n  addSchemaColumnIsNullFilter(columnPath, filterKey) {\n    const leftExpression = new ɵColumnExpression({\n      columnPath\n    });\n    const filter = new ɵIsNullFilter(ɵComparisonType.Is_null, leftExpression);\n    this.add(filter, filterKey);\n  }\n  /**\n   * Creates and adds not null filter.\n   * @param columnPath Column path.\n   * @param filterKey Filter key.\n   */\n  addSchemaColumnIsNotNullFilter(columnPath, filterKey) {\n    const leftExpression = new ɵColumnExpression({\n      columnPath\n    });\n    const filter = new ɵIsNullFilter(ɵComparisonType.Is_not_null, leftExpression);\n    this.add(filter, filterKey);\n  }\n  /**\n   * Creates and adds filter between less value and greater value.\n   * @param columnPath Column path.\n   * @param lessParamValue Less parameter value.\n   * @param greaterParamValue Greater parameter value.\n   * @param filterKey Filter key.\n   */\n  addSchemaColumnBetweenFilterWithParameters(columnPath, lessParamValue, greaterParamValue, filterKey) {\n    const leftExpression = new ɵColumnExpression({\n      columnPath\n    });\n    const rightLessExpression = new ɵParameterExpression({\n      value: lessParamValue\n    });\n    const rightGreaterExpression = new ɵParameterExpression({\n      value: greaterParamValue\n    });\n    const filter = new ɵBetweenFilter(leftExpression, rightLessExpression, rightGreaterExpression);\n    this.add(filter, filterKey);\n  }\n  addExistsFilter(columnPath, subFilters, filterKey) {\n    const leftExpression = new ɵColumnExpression({\n      columnPath\n    });\n    const filter = new ɵExistsFilter(leftExpression, subFilters);\n    this.add(filter, filterKey);\n  }\n  addNotExistsFilter(columnPath, subFilters, filterKey) {\n    const leftExpression = new ɵColumnExpression({\n      columnPath\n    });\n    const filter = new ɵExistsFilter(leftExpression, subFilters, ɵComparisonType.Not_exists);\n    this.add(filter, filterKey);\n  }\n  add(filter, filterKey) {\n    ɵValidationUtilities.checkArgumentEmpty('filter', filter);\n    const key = filterKey || ɵgenerateGuid();\n    this.filters.set(key, filter);\n  }\n  clone() {\n    const filterGroup = new ɵFilterGroup(this.logicalOperation);\n    this.filters.forEach((filter, filterKey) => {\n      filterGroup.filters.set(filterKey, filter.clone());\n    });\n    return filterGroup;\n  }\n}\n/**\n * @internal\n * @dontChange\n */\nɵFilterGroup._instanceOfKey = 'devkit_FilterGroup';\n__decorate([Exclude(), __metadata(\"design:type\", Object)], ɵFilterGroup.prototype, \"filters\", void 0);\n__decorate([Expose(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [])], ɵFilterGroup.prototype, \"items\", null);\n\n/**\n * Filter parser interface\n * @public\n */\nclass ɵBaseFilterParser {\n  static fromJson(dto) {\n    throw new Error('not implemented');\n  }\n}\n\n/**\n * Filter resolver.\n * @public\n */\nclass ɵFilterResolver {\n  static resolve(filterType) {\n    const filterClass = {\n      [ɵFilterType.Compare]: ɵCompareFilter,\n      [ɵFilterType.FilterGroup]: ɵFilterGroup,\n      [ɵFilterType.In]: ɵInFilter,\n      [ɵFilterType.IsNull]: ɵIsNullFilter,\n      [ɵFilterType.Exists]: ɵExistsFilter,\n      [ɵFilterType.Between]: ɵBetweenFilter\n    };\n    return filterClass[filterType];\n  }\n}\n\n/**\n * Filter parser.\n * @public\n */\nclass ɵFilterParser extends ɵBaseFilterParser {\n  static fromJson(dto) {\n    const filterType = dto['filterType'];\n    return ɵFilterResolver.resolve(filterType).fromJson(dto, ɵFilterParser, ɵExpressionParser);\n  }\n}\nconst ɵDEFAULT_FILTER_PLAIN_OBJ = {\n  isEnabled: true,\n  trimDateTimeParameterToDate: false\n};\nfunction ɵgetFilterPlainObj(filterPlainObj) {\n  return {\n    ...ɵDEFAULT_FILTER_PLAIN_OBJ,\n    ...filterPlainObj\n  };\n}\nclass ɵBaseQueryColumn {\n  constructor(expression) {\n    this.orderDirection = ɵOrderDirection.None;\n    this.orderPosition = -1;\n    this.isVisible = true;\n    this.expression = expression;\n  }\n  /**\n   * Adds ordering options.\n   * @param orderDirection Direction.\n   * @param orderPosition Position.\n   * @returns Self.\n   */\n  withOrdering(orderDirection, orderPosition) {\n    ɵValidationUtilities.checkArgumentEmpty('orderDirection', orderDirection);\n    ɵValidationUtilities.checkArgumentEmpty('orderPosition', orderPosition);\n    ɵValidationUtilities.checkArgumentOutOfRange('orderPosition', orderPosition, {\n      begin: -1\n    });\n    this.orderDirection = orderDirection;\n    this.orderPosition = orderPosition;\n    return this;\n  }\n  /**\n   * Adds options.\n   * @param options Options.\n   * @returns Self.\n   */\n  withOptions(options) {\n    ɵValidationUtilities.checkArgumentEmpty('options', options);\n    this.isVisible = options.isVisible ?? true;\n    return this;\n  }\n  /**\n   * Adds caption.\n   * @param caption Caption.\n   * @returns Self.\n   */\n  withCaption(caption) {\n    ɵValidationUtilities.checkArgumentEmpty('caption', caption);\n    this.caption = caption;\n    return this;\n  }\n}\nclass ɵArithmeticQueryColumn extends ɵBaseQueryColumn {\n  // region Constructors: Public\n  constructor(arithmeticOperation, leftArithmeticOperand, rightArithmeticOperand) {\n    super(new ɵArithmeticExpression({\n      arithmeticOperation,\n      leftArithmeticOperand,\n      rightArithmeticOperand\n    }));\n  }\n}\nclass ɵEntityQueryColumn extends ɵBaseQueryColumn {\n  // region Constructors: Public\n  constructor(columnPath) {\n    super(new ɵColumnExpression({\n      columnPath\n    }));\n  }\n}\nclass ɵParameterQueryColumn extends ɵBaseQueryColumn {\n  // region Constructors: Public\n  constructor(value, dataValueType) {\n    super(new ɵParameterExpression({\n      value,\n      dataValueType\n    }));\n  }\n}\nclass ɵAggregationSubQueryColumn extends ɵBaseQueryColumn {\n  // region Constructors: Public\n  constructor(columnPath, aggregationType, subFilters, subOrderDirection, subOrderColumn) {\n    super(new ɵAggregationSubQueryExpression({\n      aggregationType,\n      columnPath,\n      subFilters,\n      subOrderDirection,\n      subOrderColumn\n    }));\n  }\n}\nclass ɵSubQueryColumn extends ɵBaseQueryColumn {\n  // region Constructors: Public\n  constructor(columnPath, subFilters) {\n    super(new ɵSubQueryExpression({\n      columnPath,\n      subFilters\n    }));\n  }\n}\nclass ɵAggregationFunctionColumn extends ɵBaseQueryColumn {\n  // region Constructors: Public\n  constructor(aggregationType, aggregationEvalType, functionArgument) {\n    super(new ɵAggregationFunctionExpression({\n      aggregationType,\n      aggregationEvalType,\n      functionArgument\n    }));\n  }\n}\nclass ɵDatePartFunctionColumn extends ɵBaseQueryColumn {\n  // region Constructors: Public\n  constructor(datePartType, functionArgument) {\n    super(new ɵDatePartFunctionExpression({\n      datePartType,\n      functionArgument\n    }));\n  }\n  // endregion\n  // region Properties: Public\n  get datePartType() {\n    return this.expression?.datePartType;\n  }\n}\nclass ɵLengthFunctionColumn extends ɵBaseQueryColumn {\n  // region Constructors: Public\n  constructor(functionArgument) {\n    super(new ɵLengthFunctionExpression({\n      functionArgument\n    }));\n  }\n}\nclass ɵMacrosFunctionColumn extends ɵBaseQueryColumn {\n  // region Constructors: Public\n  constructor(macrosType) {\n    super(new ɵMacrosFunctionExpression({\n      macrosType\n    }));\n  }\n}\nclass ɵWindowFunctionColumn extends ɵBaseQueryColumn {\n  // region Constructors: Public\n  constructor(functionArgument) {\n    super(new ɵWindowFunctionExpression({\n      functionArgument\n    }));\n  }\n}\nconst ɵDEFAULT_COLUMN_PLAIN_OBJ = {\n  isVisible: true,\n  orderPosition: -1,\n  orderDirection: ɵOrderDirection.None\n};\nfunction ɵgetColumnPlainObj(expressionPlainObj) {\n  return {\n    ...ɵDEFAULT_COLUMN_PLAIN_OBJ,\n    expression: expressionPlainObj\n  };\n}\n\n/**\n * @public\n */\nclass ɵBaseQuery {\n  // region Constructors: Protected\n  constructor(operationType, rootSchemaName) {\n    this.operationType = operationType;\n    this.rootSchemaName = rootSchemaName;\n    ɵValidationUtilities.checkArgumentEmpty('_operationType', operationType);\n    ɵValidationUtilities.checkArgumentEmpty('_rootSchemaName', rootSchemaName);\n  }\n  // endregion\n  // region Methods: Public\n  getMetadata() {\n    return classToPlain(this, {\n      exposeUnsetFields: false,\n      excludePrefixes: ['_']\n    });\n  }\n}\n\n/**\n * @public\n */\nclass ɵBaseFilterableQuery extends ɵBaseQuery {\n  constructor(operationType, rootSchemaName) {\n    super(operationType, rootSchemaName);\n    this.filters = new ɵFilterGroup();\n  }\n  clearFilters() {\n    this.filters.filters.clear();\n  }\n  getMetadata() {\n    return {\n      ...super.getMetadata(),\n      filters: this.filters.toJson()\n    };\n  }\n}\n\n/**\n * @public\n */\nvar ɵQueryOperationType;\n(function (ɵQueryOperationType) {\n  ɵQueryOperationType[ɵQueryOperationType[\"Select\"] = 0] = \"Select\";\n  ɵQueryOperationType[ɵQueryOperationType[\"Insert\"] = 1] = \"Insert\";\n  ɵQueryOperationType[ɵQueryOperationType[\"Update\"] = 2] = \"Update\";\n  ɵQueryOperationType[ɵQueryOperationType[\"Delete\"] = 3] = \"Delete\";\n  // Batch,\n  // ListSelect,\n  // FilteredSelect,\n  // LookupSelect\n})(ɵQueryOperationType || (ɵQueryOperationType = {}));\n\n/**\n * @public\n */\nclass ɵDeleteQuery extends ɵBaseFilterableQuery {\n  // region Constructors: Public\n  constructor(rootSchemaName) {\n    super(ɵQueryOperationType.Delete, rootSchemaName);\n  }\n}\n\n/**\n * @public\n */\nclass ɵEntitySchemaQuery extends ɵBaseFilterableQuery {\n  constructor(rootSchemaName) {\n    super(ɵQueryOperationType.Select, rootSchemaName);\n    this._columns = new Map();\n    this.isDistinct = false;\n    /**\n     * Number of rows to select.\n     */\n    this.rowCount = -1;\n    /**\n     * Rows count to skip.\n     */\n    this.rowsOffset = -1;\n    this.useLocalization = true;\n    this.useRecordDeactivation = false;\n    this._getIsPageable = () => this.rowCount > 0 && this.rowsOffset > -1;\n  }\n  _internalAddColumn(key, column) {\n    if (!this._columns.has(key)) {\n      this._columns.set(key, column);\n    }\n  }\n  // endregion\n  // region Methods: Public\n  /**\n   * Returns column instance by column alias.\n   * @param columnAlias Column alias.\n   * @returns [BaseQueryColumn] Column instance.\n   */\n  getColumn(columnAlias) {\n    if (!this._columns.has(columnAlias)) {\n      throw new ɵItemNotFoundException(columnAlias);\n    }\n    return this.findColumn(columnAlias);\n  }\n  /**\n   * Returns column instance by column alias if not found returns null.\n   */\n  findColumn(columnAlias) {\n    return this._columns.get(columnAlias);\n  }\n  /**\n   * @inheritDoc\n   */\n  getMetadata() {\n    return {\n      ...super.getMetadata(),\n      columns: {\n        items: classToPlain(this._columns, {\n          exposeUnsetFields: false,\n          excludePrefixes: ['_']\n        })\n      },\n      allColumns: false,\n      isDistinct: this.isDistinct,\n      ignoreDisplayValues: false,\n      rowCount: this.rowCount,\n      rowsOffset: this.rowsOffset,\n      isPageable: this._getIsPageable(),\n      conditionalValues: this.conditionalValues ? this.conditionalValues : null,\n      isHierarchical: false,\n      hierarchicalMaxDepth: 0,\n      hierarchicalColumnName: null,\n      hierarchicalColumnValue: null,\n      useLocalization: this.useLocalization,\n      useRecordDeactivation: this.useRecordDeactivation\n    };\n  }\n  /**\n   * Add column.\n   * @param column Column path.\n   * @param columnAlias Column alias.\n   * @returns [BaseQueryColumn] Column instance.\n   */\n  addColumn(column, columnAlias) {\n    this._internalAddColumn(columnAlias, column);\n    return column;\n  }\n  /**\n   * Add column by column path.\n   * @param columnPath Column path.\n   * @param columnAlias Column alias.\n   * @returns [EntityQueryColumn] Column instance.\n   */\n  addSchemaColumn(columnPath, columnAlias) {\n    ɵValidationUtilities.checkArgumentEmpty('columnPath', columnPath);\n    const column = new ɵEntityQueryColumn(columnPath);\n    this._internalAddColumn(columnAlias || columnPath, column);\n    return column;\n  }\n  /**\n   * Add aggregation sub query column.\n   * @param columnPath Column path.\n   * @param aggregationType Aggregation type.\n   * @param subFilters Sub query filters.\n   * @param columnAlias Column alias.\n   * @returns [AggregationSubQueryColumn] Column instance.\n   */\n  addAggregationSubQueryColumn(columnPath, aggregationType, aggregationConfig, columnAlias) {\n    const column = new ɵAggregationSubQueryColumn(columnPath, aggregationType, aggregationConfig.filter, aggregationConfig.sortByDirection, aggregationConfig.sortByColumn);\n    this._internalAddColumn(columnAlias || columnPath, column);\n    return column;\n  }\n  /**\n   * Add parameter column.\n   * @param value Parameter value.\n   * @param dataValueType Parameter data value type.\n   * @param columnAlias Column alias.\n   * @returns [ParameterQueryColumn] Column instance.\n   */\n  addParameterColumn(value, dataValueType, columnAlias) {\n    const column = new ɵParameterQueryColumn(value, dataValueType);\n    this._internalAddColumn(columnAlias, column);\n    return column;\n  }\n  /**\n   * Add arithmetic column.\n   * @param arithmeticOperation Arithmetic operation.\n   * @param leftArithmeticOperand Left arithmetic operand expression.\n   * @param rightArithmeticOperand Right arithmetic operand expression.\n   * @param columnAlias Column alias.\n   * @returns [ArithmeticQueryColumn] Column instance.\n   */\n  addArithmeticColumn(arithmeticOperation, leftArithmeticOperand, rightArithmeticOperand, columnAlias) {\n    const column = new ɵArithmeticQueryColumn(arithmeticOperation, leftArithmeticOperand, rightArithmeticOperand);\n    this._internalAddColumn(columnAlias, column);\n    return column;\n  }\n  /**\n   * Add macros function column.\n   * @param queryMacrosType Macros type.\n   * @param columnAlias Column alias.\n   * @returns [MacrosFunctionColumn] Column instance.\n   */\n  addMacrosFunctionColumn(queryMacrosType, columnAlias) {\n    const column = new ɵMacrosFunctionColumn(queryMacrosType);\n    this._internalAddColumn(columnAlias, column);\n    return column;\n  }\n  /**\n   * Add date part function column.\n   * @param columnPath Column path.\n   * @param datePartType Date part type.\n   * @param columnAlias Column alias.\n   * @returns [DatePartFunctionColumn] Column instance.\n   */\n  addDatePartFunctionColumn(columnPath, datePartType, columnAlias) {\n    const functionArgument = new ɵColumnExpression({\n      columnPath\n    });\n    const column = new ɵDatePartFunctionColumn(datePartType, functionArgument);\n    this._internalAddColumn(columnAlias, column);\n    return column;\n  }\n  /**\n   * Add aggregation function column.\n   * @param columnPath Column path.\n   * @param aggregationType Aggregation type.\n   * @param columnAlias Column alias.\n   * @param aggregationEvalType Aggregation eval type.\n   * @returns [AggregationFunctionColumn] Column instance.\n   */\n  addAggregationFunctionColumn(columnPath, aggregationType, columnAlias, aggregationEvalType = ɵAggregationEvalType.None) {\n    const functionArgument = new ɵColumnExpression({\n      columnPath\n    });\n    const column = new ɵAggregationFunctionColumn(aggregationType, aggregationEvalType, functionArgument);\n    this._internalAddColumn(columnAlias, column);\n    return column;\n  }\n  /**\n   * Add length function column.\n   * @param columnPath Column path.\n   * @param columnAlias Column alias.\n   * @returns [LengthFunctionColumn] Column instance.\n   */\n  addLengthFunctionColumn(columnPath, columnAlias) {\n    const functionArgument = new ɵColumnExpression({\n      columnPath\n    });\n    const column = new ɵLengthFunctionColumn(functionArgument);\n    this._internalAddColumn(columnAlias, column);\n    return column;\n  }\n  /**\n   * Add window function column.\n   * @param columnPath Column path.\n   * @param aggregationType Aggregation type.\n   * @param columnAlias Column alias.\n   * @param aggregationEvalType Aggregation eval type.\n   * @returns [WindowFunctionColumn] Column instance.\n   */\n  addWindowFunctionColumn(columnPath, aggregationType, columnAlias, aggregationEvalType = ɵAggregationEvalType.None) {\n    const functionArgument = new ɵAggregationFunctionExpression({\n      aggregationType,\n      aggregationEvalType,\n      functionArgument: new ɵColumnExpression({\n        columnPath\n      })\n    });\n    const column = new ɵWindowFunctionColumn(functionArgument);\n    this._internalAddColumn(columnAlias, column);\n    return column;\n  }\n}\n\n/**\n * @public\n */\nclass ɵInsertQuery extends ɵBaseQuery {\n  // endregion\n  // region Constructors: Public\n  constructor(rootSchemaName) {\n    super(ɵQueryOperationType.Insert, rootSchemaName);\n    // region Fields: Private\n    this._columnValues = new Map();\n  }\n  // endregion\n  // region Properties: Public\n  get columnValues() {\n    return {\n      items: classToPlain(this._columnValues)\n    };\n  }\n  // endregion\n  // region Methods: Public\n  addColumn(columnName, columnValue, dataValueType) {\n    ɵValidationUtilities.checkArgumentEmpty('columnName', columnName);\n    this._columnValues.set(columnName, new ɵParameterExpression({\n      value: columnValue,\n      dataValueType\n    }));\n  }\n}\n__decorate([Expose(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [])], ɵInsertQuery.prototype, \"columnValues\", null);\n\n/**\n * @public\n */\nclass ɵUpdateQuery extends ɵBaseFilterableQuery {\n  // endregion\n  // region Constructors: Public\n  constructor(rootSchemaName) {\n    super(ɵQueryOperationType.Update, rootSchemaName);\n    // region Fields: Private\n    this._columnValues = new Map();\n    // endregion\n    // region Fields: Public\n    /**\n     * Flag that indicates whether to force save data.\n     */\n    this.isForceUpdate = false;\n  }\n  // endregion\n  // region Properties: Public\n  get columnValues() {\n    return {\n      items: classToPlain(this._columnValues)\n    };\n  }\n  // endregion\n  // region Methods: Public\n  addColumn(columnName, columnValue, dataValueType) {\n    ɵValidationUtilities.checkArgumentEmpty('columnName', columnName);\n    this._columnValues.set(columnName, new ɵParameterExpression({\n      value: columnValue,\n      dataValueType\n    }));\n  }\n}\n__decorate([Expose(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [])], ɵUpdateQuery.prototype, \"columnValues\", null);\n\n/**\n * @public\n */\nclass ɵSelectLocalizationQuery extends ɵEntitySchemaQuery {}\n\n/**\n * @public\n * @class ɵBaseRequest\n * @describe Base definition of request.\n * @template TEvent\n */\nclass ɵBaseRequest {}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * @public\n */\nvar ɵModelParameterType;\n(function (ɵModelParameterType) {\n  ɵModelParameterType[\"PrimaryColumnValue\"] = \"primaryColumnValue\";\n  ɵModelParameterType[\"Filter\"] = \"filter\";\n  ɵModelParameterType[\"PrimaryDisplayValueFilter\"] = \"primaryDisplayValueFilter\";\n  ɵModelParameterType[\"Empty\"] = \"empty\";\n  ɵModelParameterType[\"Never\"] = \"never\";\n})(ɵModelParameterType || (ɵModelParameterType = {}));\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LookupMode, ɵAggregationEvalType, ɵAggregationFunction, ɵAggregationFunctionColumn, ɵAggregationFunctionExpression, ɵAggregationSubQueryColumn, ɵAggregationSubQueryExpression, ɵAggregationType, ɵArgumentEmptyException, ɵArgumentFunctionExpression, ɵArgumentOutOfRangeException, ɵArithmeticExpression, ɵArithmeticOperation, ɵArithmeticQueryColumn, ɵBaseExpression, ɵBaseExpressionParser, ɵBaseFilter, ɵBaseFilterParser, ɵBaseFilterableQuery, ɵBaseQuery, ɵBaseQueryColumn, ɵBaseRequest, ɵBetweenFilter, ɵColumnExpression, ɵCompareFilter, ɵComparisonType, ɵDEFAULT_COLUMN_PLAIN_OBJ, ɵDEFAULT_FILTER_PLAIN_OBJ, ɵDataSchemaAttributeType, ɵDataSchemaAttributeUsageType, ɵDataSchemaType, ɵDataSourceScope, ɵDataValueType, ɵDatePartFunctionColumn, ɵDatePartFunctionExpression, ɵDatePartType, ɵDefaultValueSource, ɵDeleteQuery, ɵEMPTY_GUID, ɵEXPRESSION_TYPE_MOCK, ɵEntityQueryColumn, ɵEntitySchemaQuery, ɵExistsFilter, ɵExpressionMock, ɵExpressionParser, ɵExpressionResolver, ɵExpressionType, ɵFilterGroup, ɵFilterMock, ɵFilterParser, ɵFilterResolver, ɵFilterType, ɵFunctionExpression, ɵFunctionType, ɵInFilter, ɵInsertQuery, ɵIsNullFilter, ɵItemNotFoundException, ɵLengthFunctionColumn, ɵLengthFunctionExpression, ɵLogicalOperatorType, ɵMacrosFunctionColumn, ɵMacrosFunctionExpression, ɵModelParameterType, ɵNextHandlerAlreadySpecifiedException, ɵOrderDirection, ɵParameterExpression, ɵParameterQueryColumn, ɵQueryMacrosType, ɵQueryOperationType, ɵSelectLocalizationQuery, ɵSingleFilter, ɵSubQueryColumn, ɵSubQueryExpression, ɵUpdateQuery, ɵValidationUtilities, ɵWindowFunctionColumn, ɵWindowFunctionExpression, ɵencodeDate, ɵgenerateGuid, ɵgetColumnPlainObj, ɵgetFilterPlainObj, ɵisEmptyGuid, ɵisGuid, ɵparserMock, ɵtoLocalISOString };","map":{"version":3,"names":["classToPlain","Exclude","Expose","__decorate","__metadata","ɵtoLocalISOString","date","Date","TypeError","timeZoneOffset","getTimezoneOffset","getTime","toISOString","slice","ɵencodeDate","ɵDataSourceScope","ɵDataSchemaAttributeType","ɵDataSchemaAttributeUsageType","ɵDefaultValueSource","LookupMode","ɵDataValueType","ɵAggregationType","ɵAggregationFunction","ɵDataSchemaType","ɵLogicalOperatorType","ɵAggregationEvalType","ɵArithmeticOperation","ɵComparisonType","ɵDatePartType","ɵExpressionType","ɵFilterType","ɵFunctionType","ɵOrderDirection","ɵQueryMacrosType","ɵBaseExpression","_instanceOfKeys","_instanceOfKey","Symbol","hasInstance","instance","instanceOfKeys","constructor","includes","config","isBlock","fromJson","dto","filterParser","expressionParser","Error","name","serializeItem","item","toJson","exposeUnsetFields","excludePrefixes","ɵArithmeticExpression","expressionType","ArithmeticOperation","arithmeticOperation","leftArithmeticOperand","clone","rightArithmeticOperand","ɵColumnExpression","SchemaColumn","columnPath","expression","ɵBaseExpressionParser","ɵFunctionExpression","Function","ɵArgumentFunctionExpression","functionArgument","result","ɵAggregationFunctionExpression","functionType","Aggregation","aggregationType","aggregationEvalType","ɵDatePartFunctionExpression","DatePart","datePartType","ɵLengthFunctionExpression","Length","ɵMacrosFunctionExpression","Macros","macrosType","ɵWindowFunctionExpression","Window","ɵParameterExpression","Parameter","value","cloneDate","setTime","dataValueType","Text","parameter","_getParameterValueMetadata","_convertStringToBlobArray","str","out","position","i","length","code","charCodeAt","String","fromCharCode","Blob","arrayValue","Object","prototype","Number","ɵSubQueryExpression","SubQuery","subFilter","subFilters","subOrderDirection","subOrderColumn","ɵAggregationSubQueryExpression","subQueryExpression","FunctionExpressionResolver","resolve","expressionClass","DateAdd","DateDiff","ɵExpressionResolver","ɵExpressionParser","ɵEXPRESSION_TYPE_MOCK","ɵExpressionMock","plainObject","ɵBaseFilter","filterType","isEnabled","trimDateTimeParameterToDate","ɵFilterMock","None","ɵparserMock","data","ɵSingleFilter","comparisonType","leftExpression","ɵCompareFilter","rightExpression","Compare","filter","ɵBetweenFilter","rightLessExpression","rightGreaterExpression","Between","ɵExistsFilter","Exists","isAggregative","ɵInFilter","rightExpressions","In","map","dtoRightExpressions","ɵIsNullFilter","IsNull","isNull","Is_null","Boolean","ɵEMPTY_GUID","validator","RegExp","generateGuidPart","Math","random","toString","substring","ɵgenerateGuid","join","ɵisGuid","test","ɵisEmptyGuid","guid","ɵNextHandlerAlreadySpecifiedException","ɵArgumentEmptyException","argumentName","ɵArgumentOutOfRangeException","ɵItemNotFoundException","key","ɵValidationUtilities","checkArgumentEmpty","argumentValue","undefined","checkArrayEmpty","checkStringIsNotEmpty","checkArgumentOutOfRange","range","begin","end","ɵFilterGroup","items","filters","forEach","logicalOperation","And","FilterGroup","Map","group","entries","filterDTO","add","getItemByIndex","index","keys","addSchemaColumnFilterWithParameter","parameterValue","filterKey","addSchemaColumnInFilterWithParameters","parameterValues","expressions","singleParameterValue","addSchemaColumnIsNullFilter","addSchemaColumnIsNotNullFilter","Is_not_null","addSchemaColumnBetweenFilterWithParameters","lessParamValue","greaterParamValue","addExistsFilter","addNotExistsFilter","Not_exists","set","filterGroup","ɵBaseFilterParser","ɵFilterResolver","filterClass","ɵFilterParser","ɵDEFAULT_FILTER_PLAIN_OBJ","ɵgetFilterPlainObj","filterPlainObj","ɵBaseQueryColumn","orderDirection","orderPosition","isVisible","withOrdering","withOptions","options","withCaption","caption","ɵArithmeticQueryColumn","ɵEntityQueryColumn","ɵParameterQueryColumn","ɵAggregationSubQueryColumn","ɵSubQueryColumn","ɵAggregationFunctionColumn","ɵDatePartFunctionColumn","ɵLengthFunctionColumn","ɵMacrosFunctionColumn","ɵWindowFunctionColumn","ɵDEFAULT_COLUMN_PLAIN_OBJ","ɵgetColumnPlainObj","expressionPlainObj","ɵBaseQuery","operationType","rootSchemaName","getMetadata","ɵBaseFilterableQuery","clearFilters","clear","ɵQueryOperationType","ɵDeleteQuery","Delete","ɵEntitySchemaQuery","Select","_columns","isDistinct","rowCount","rowsOffset","useLocalization","useRecordDeactivation","_getIsPageable","_internalAddColumn","column","has","getColumn","columnAlias","findColumn","get","columns","allColumns","ignoreDisplayValues","isPageable","conditionalValues","isHierarchical","hierarchicalMaxDepth","hierarchicalColumnName","hierarchicalColumnValue","addColumn","addSchemaColumn","addAggregationSubQueryColumn","aggregationConfig","sortByDirection","sortByColumn","addParameterColumn","addArithmeticColumn","addMacrosFunctionColumn","queryMacrosType","addDatePartFunctionColumn","addAggregationFunctionColumn","addLengthFunctionColumn","addWindowFunctionColumn","ɵInsertQuery","Insert","_columnValues","columnValues","columnName","columnValue","ɵUpdateQuery","Update","isForceUpdate","ɵSelectLocalizationQuery","ɵBaseRequest","ɵModelParameterType"],"sources":["C:/Users/Lenovo/Desktop/Attachment_Previewer/Attachment_Viewer/projects/word_viewer/node_modules/@creatio/base/fesm2020/creatio-base.mjs"],"sourcesContent":["import { classToPlain, Exclude, Expose } from 'class-transformer';\nimport { __decorate, __metadata } from 'tslib';\n\n/**\n * @public\n * Returns a string represent of date in ISO 8601 without time zone specification(doesn't convert it\n * using local timezone).\n *\n * Example:\n *\n *      const date = new Date(2018, 01, 20, 15, 10, 30);\n *      const result = toLocalISOString(date);\n *      //result: '2018-02-20T15:10:30'\n *\n * @param date Date value.\n */\nfunction ɵtoLocalISOString(date) {\n    if (!(date instanceof Date)) {\n        throw new TypeError();\n    }\n    const timeZoneOffset = date.getTimezoneOffset() * 60000;\n    return new Date(date.getTime() - timeZoneOffset).toISOString().slice(0, -1);\n}\n/**\n * @public\n * Returns encoded date in string value.\n * @param date Date value.\n */\nfunction ɵencodeDate(date) {\n    return `\"${ɵtoLocalISOString(date)}\"`;\n}\n\n/**\n * @public\n */\nvar ɵDataSourceScope;\n(function (ɵDataSourceScope) {\n    ɵDataSourceScope[\"ViewElement\"] = \"viewElement\";\n    ɵDataSourceScope[\"Page\"] = \"page\";\n})(ɵDataSourceScope || (ɵDataSourceScope = {}));\n\n/**\n * @public\n */\nvar ɵDataSchemaAttributeType;\n(function (ɵDataSchemaAttributeType) {\n    ɵDataSchemaAttributeType[\"OwnAttribute\"] = \"Own\";\n    ɵDataSchemaAttributeType[\"ForwardReferenceAttribute\"] = \"ForwardReference\";\n    ɵDataSchemaAttributeType[\"BackReferenceAttribute\"] = \"BackReference\";\n    ɵDataSchemaAttributeType[\"AggregationAttribute\"] = \"Aggregation\";\n    ɵDataSchemaAttributeType[\"FunctionAttribute\"] = \"Function\";\n})(ɵDataSchemaAttributeType || (ɵDataSchemaAttributeType = {}));\n/**\n * @public\n */\nvar ɵDataSchemaAttributeUsageType;\n(function (ɵDataSchemaAttributeUsageType) {\n    ɵDataSchemaAttributeUsageType[ɵDataSchemaAttributeUsageType[\"General\"] = 0] = \"General\";\n    ɵDataSchemaAttributeUsageType[ɵDataSchemaAttributeUsageType[\"Advanced\"] = 1] = \"Advanced\";\n    ɵDataSchemaAttributeUsageType[ɵDataSchemaAttributeUsageType[\"None\"] = 2] = \"None\";\n})(ɵDataSchemaAttributeUsageType || (ɵDataSchemaAttributeUsageType = {}));\n\n/**\n * @public\n */\nvar ɵDefaultValueSource;\n(function (ɵDefaultValueSource) {\n    ɵDefaultValueSource[ɵDefaultValueSource[\"None\"] = 0] = \"None\";\n    ɵDefaultValueSource[ɵDefaultValueSource[\"Const\"] = 1] = \"Const\";\n    ɵDefaultValueSource[ɵDefaultValueSource[\"Settings\"] = 2] = \"Settings\";\n    ɵDefaultValueSource[ɵDefaultValueSource[\"SystemValue\"] = 3] = \"SystemValue\";\n    ɵDefaultValueSource[ɵDefaultValueSource[\"Sequence\"] = 4] = \"Sequence\";\n})(ɵDefaultValueSource || (ɵDefaultValueSource = {}));\n\n/**\n * Lookup mode\n * @internal\n */\nvar LookupMode;\n(function (LookupMode) {\n    LookupMode[\"List\"] = \"List\";\n    LookupMode[\"SelectionWindow\"] = \"SelectionWindow\";\n})(LookupMode || (LookupMode = {}));\n\nvar ɵDataValueType;\n(function (ɵDataValueType) {\n    ɵDataValueType[ɵDataValueType[\"Guid\"] = 0] = \"Guid\";\n    ɵDataValueType[ɵDataValueType[\"Text\"] = 1] = \"Text\";\n    ɵDataValueType[ɵDataValueType[\"Integer\"] = 4] = \"Integer\";\n    ɵDataValueType[ɵDataValueType[\"Float\"] = 5] = \"Float\";\n    ɵDataValueType[ɵDataValueType[\"Money\"] = 6] = \"Money\";\n    ɵDataValueType[ɵDataValueType[\"DateTime\"] = 7] = \"DateTime\";\n    ɵDataValueType[ɵDataValueType[\"Date\"] = 8] = \"Date\";\n    ɵDataValueType[ɵDataValueType[\"Time\"] = 9] = \"Time\";\n    ɵDataValueType[ɵDataValueType[\"Lookup\"] = 10] = \"Lookup\";\n    ɵDataValueType[ɵDataValueType[\"Enum\"] = 11] = \"Enum\";\n    ɵDataValueType[ɵDataValueType[\"Boolean\"] = 12] = \"Boolean\";\n    ɵDataValueType[ɵDataValueType[\"Blob\"] = 13] = \"Blob\";\n    ɵDataValueType[ɵDataValueType[\"Image\"] = 14] = \"Image\";\n    ɵDataValueType[ɵDataValueType[\"CUSTOM_OBJECT\"] = 15] = \"CUSTOM_OBJECT\";\n    ɵDataValueType[ɵDataValueType[\"IMAGELOOKUP\"] = 16] = \"IMAGELOOKUP\";\n    ɵDataValueType[ɵDataValueType[\"COLLECTION\"] = 17] = \"COLLECTION\";\n    ɵDataValueType[ɵDataValueType[\"Color\"] = 18] = \"Color\";\n    ɵDataValueType[ɵDataValueType[\"LOCALIZABLE_STRING\"] = 19] = \"LOCALIZABLE_STRING\";\n    ɵDataValueType[ɵDataValueType[\"ENTITY\"] = 20] = \"ENTITY\";\n    ɵDataValueType[ɵDataValueType[\"ENTITY_COLLECTION\"] = 21] = \"ENTITY_COLLECTION\";\n    ɵDataValueType[ɵDataValueType[\"ENTITY_COLUMN_MAPPING_COLLECTION\"] = 22] = \"ENTITY_COLUMN_MAPPING_COLLECTION\";\n    ɵDataValueType[ɵDataValueType[\"HASH_TEXT\"] = 23] = \"HASH_TEXT\";\n    ɵDataValueType[ɵDataValueType[\"SECURE_TEXT\"] = 24] = \"SECURE_TEXT\";\n    ɵDataValueType[ɵDataValueType[\"FILE\"] = 25] = \"FILE\";\n    ɵDataValueType[ɵDataValueType[\"MAPPING\"] = 26] = \"MAPPING\";\n    ɵDataValueType[ɵDataValueType[\"SHORT_TEXT\"] = 27] = \"SHORT_TEXT\";\n    ɵDataValueType[ɵDataValueType[\"MEDIUM_TEXT\"] = 28] = \"MEDIUM_TEXT\";\n    ɵDataValueType[ɵDataValueType[\"MAXSIZE_TEXT\"] = 29] = \"MAXSIZE_TEXT\";\n    ɵDataValueType[ɵDataValueType[\"LONG_TEXT\"] = 30] = \"LONG_TEXT\";\n    ɵDataValueType[ɵDataValueType[\"FLOAT1\"] = 31] = \"FLOAT1\";\n    ɵDataValueType[ɵDataValueType[\"FLOAT2\"] = 32] = \"FLOAT2\";\n    ɵDataValueType[ɵDataValueType[\"FLOAT3\"] = 33] = \"FLOAT3\";\n    ɵDataValueType[ɵDataValueType[\"FLOAT4\"] = 34] = \"FLOAT4\";\n    ɵDataValueType[ɵDataValueType[\"LOCALIZABLE_PARAMETER_VALUES_LIST\"] = 35] = \"LOCALIZABLE_PARAMETER_VALUES_LIST\";\n    ɵDataValueType[ɵDataValueType[\"METADATA_TEXT\"] = 36] = \"METADATA_TEXT\";\n    ɵDataValueType[ɵDataValueType[\"STAGE_INDICATOR\"] = 37] = \"STAGE_INDICATOR\";\n    ɵDataValueType[ɵDataValueType[\"OBJECT_LIST\"] = 38] = \"OBJECT_LIST\";\n    ɵDataValueType[ɵDataValueType[\"COMPOSITE_OBJECT_LIST\"] = 39] = \"COMPOSITE_OBJECT_LIST\";\n    ɵDataValueType[ɵDataValueType[\"FLOAT8\"] = 40] = \"FLOAT8\";\n    ɵDataValueType[ɵDataValueType[\"FILE_LOCATOR\"] = 41] = \"FILE_LOCATOR\";\n    ɵDataValueType[ɵDataValueType[\"PHONE_TEXT\"] = 42] = \"PHONE_TEXT\";\n    ɵDataValueType[ɵDataValueType[\"RICH_TEXT\"] = 43] = \"RICH_TEXT\";\n    ɵDataValueType[ɵDataValueType[\"WEB_TEXT\"] = 44] = \"WEB_TEXT\";\n    ɵDataValueType[ɵDataValueType[\"EMAIL_TEXT\"] = 45] = \"EMAIL_TEXT\";\n})(ɵDataValueType || (ɵDataValueType = {}));\n\nvar ɵAggregationType;\n(function (ɵAggregationType) {\n    /** Aggregation function type not defined. */\n    ɵAggregationType[ɵAggregationType[\"None\"] = 0] = \"None\";\n    /** Aggregation function type not defined. */\n    ɵAggregationType[ɵAggregationType[\"Count\"] = 1] = \"Count\";\n    /** Sum of values of all elements. */\n    ɵAggregationType[ɵAggregationType[\"Sum\"] = 2] = \"Sum\";\n    /** Average value for all elements. */\n    ɵAggregationType[ɵAggregationType[\"Avg\"] = 3] = \"Avg\";\n    /** The minimum value among all elements. */\n    ɵAggregationType[ɵAggregationType[\"Min\"] = 4] = \"Min\";\n    /** The maximum value among all elements. */\n    ɵAggregationType[ɵAggregationType[\"Max\"] = 5] = \"Max\";\n    /** Top one record from collection. */\n    ɵAggregationType[ɵAggregationType[\"TopOne\"] = 6] = \"TopOne\";\n})(ɵAggregationType || (ɵAggregationType = {}));\n\nvar ɵAggregationFunction;\n(function (ɵAggregationFunction) {\n    /** Aggregation function type not defined. */\n    ɵAggregationFunction[\"None\"] = \"\";\n    /** Aggregation function type not defined. */\n    ɵAggregationFunction[\"Count\"] = \"Count\";\n    /** Sum of values of all elements. */\n    ɵAggregationFunction[\"Sum\"] = \"Sum\";\n    /** Average value for all elements. */\n    ɵAggregationFunction[\"Avg\"] = \"Avg\";\n    /** The minimum value among all elements. */\n    ɵAggregationFunction[\"Min\"] = \"Min\";\n    /** The maximum value among all elements. */\n    ɵAggregationFunction[\"Max\"] = \"Max\";\n    /** Top one record from collection. */\n    ɵAggregationFunction[\"TopOne\"] = \"TopOne\";\n})(ɵAggregationFunction || (ɵAggregationFunction = {}));\n\n/**\n * Type of DataSchema. In combination with the name is used for unique identification of {@link DataSchema}.\n */\nvar ɵDataSchemaType;\n(function (ɵDataSchemaType) {\n    ɵDataSchemaType[\"Entity\"] = \"Entity\";\n    ɵDataSchemaType[\"ClientUnit\"] = \"ClientUnit\";\n})(ɵDataSchemaType || (ɵDataSchemaType = {}));\n\nvar ɵLogicalOperatorType;\n(function (ɵLogicalOperatorType) {\n    ɵLogicalOperatorType[ɵLogicalOperatorType[\"And\"] = 0] = \"And\";\n    ɵLogicalOperatorType[ɵLogicalOperatorType[\"Or\"] = 1] = \"Or\";\n})(ɵLogicalOperatorType || (ɵLogicalOperatorType = {}));\n\nvar ɵAggregationEvalType;\n(function (ɵAggregationEvalType) {\n    /** The scope of the aggregating function is not defined. */\n    ɵAggregationEvalType[ɵAggregationEvalType[\"None\"] = 0] = \"None\";\n    /** Applies to all elements. */\n    ɵAggregationEvalType[ɵAggregationEvalType[\"All\"] = 1] = \"All\";\n    /** Applies to unique values. */\n    ɵAggregationEvalType[ɵAggregationEvalType[\"Distinct\"] = 2] = \"Distinct\";\n})(ɵAggregationEvalType || (ɵAggregationEvalType = {}));\n\nvar ɵArithmeticOperation;\n(function (ɵArithmeticOperation) {\n    /** Addition. */\n    ɵArithmeticOperation[ɵArithmeticOperation[\"Addition\"] = 0] = \"Addition\";\n    /** Subtraction. */\n    ɵArithmeticOperation[ɵArithmeticOperation[\"Subtraction\"] = 1] = \"Subtraction\";\n    /** Multiplication. */\n    ɵArithmeticOperation[ɵArithmeticOperation[\"Multiplication\"] = 2] = \"Multiplication\";\n    /** Division. */\n    ɵArithmeticOperation[ɵArithmeticOperation[\"Division\"] = 3] = \"Division\";\n})(ɵArithmeticOperation || (ɵArithmeticOperation = {}));\n\n/* eslint-disable @typescript-eslint/naming-convention */\nvar ɵComparisonType;\n(function (ɵComparisonType) {\n    ɵComparisonType[ɵComparisonType[\"Between\"] = 0] = \"Between\";\n    ɵComparisonType[ɵComparisonType[\"Contain\"] = 11] = \"Contain\";\n    ɵComparisonType[ɵComparisonType[\"End_with\"] = 13] = \"End_with\";\n    ɵComparisonType[ɵComparisonType[\"Equal\"] = 3] = \"Equal\";\n    ɵComparisonType[ɵComparisonType[\"Exists\"] = 15] = \"Exists\";\n    ɵComparisonType[ɵComparisonType[\"Greater\"] = 7] = \"Greater\";\n    ɵComparisonType[ɵComparisonType[\"Greater_or_equal\"] = 8] = \"Greater_or_equal\";\n    ɵComparisonType[ɵComparisonType[\"Is_not_null\"] = 2] = \"Is_not_null\";\n    ɵComparisonType[ɵComparisonType[\"Is_null\"] = 1] = \"Is_null\";\n    ɵComparisonType[ɵComparisonType[\"Less\"] = 5] = \"Less\";\n    ɵComparisonType[ɵComparisonType[\"Less_or_equal\"] = 6] = \"Less_or_equal\";\n    ɵComparisonType[ɵComparisonType[\"Not_contain\"] = 12] = \"Not_contain\";\n    ɵComparisonType[ɵComparisonType[\"Not_end_with\"] = 14] = \"Not_end_with\";\n    ɵComparisonType[ɵComparisonType[\"Not_equal\"] = 4] = \"Not_equal\";\n    ɵComparisonType[ɵComparisonType[\"Not_exists\"] = 16] = \"Not_exists\";\n    ɵComparisonType[ɵComparisonType[\"Not_start_with\"] = 10] = \"Not_start_with\";\n    ɵComparisonType[ɵComparisonType[\"Start_with\"] = 9] = \"Start_with\";\n})(ɵComparisonType || (ɵComparisonType = {}));\n\nvar ɵDatePartType;\n(function (ɵDatePartType) {\n    /** Empty value. */\n    ɵDatePartType[ɵDatePartType[\"None\"] = 0] = \"None\";\n    /** Day. */\n    ɵDatePartType[ɵDatePartType[\"Day\"] = 1] = \"Day\";\n    /** Week. */\n    ɵDatePartType[ɵDatePartType[\"Week\"] = 2] = \"Week\";\n    /** Month. */\n    ɵDatePartType[ɵDatePartType[\"Month\"] = 3] = \"Month\";\n    /** Year. */\n    ɵDatePartType[ɵDatePartType[\"Year\"] = 4] = \"Year\";\n    /** Day of the week. */\n    ɵDatePartType[ɵDatePartType[\"WeekDay\"] = 5] = \"WeekDay\";\n    /** Hour. */\n    ɵDatePartType[ɵDatePartType[\"Hour\"] = 6] = \"Hour\";\n    /** Minute. */\n    ɵDatePartType[ɵDatePartType[\"HourMinute\"] = 7] = \"HourMinute\";\n})(ɵDatePartType || (ɵDatePartType = {}));\n\nvar ɵExpressionType;\n(function (ɵExpressionType) {\n    ɵExpressionType[ɵExpressionType[\"SchemaColumn\"] = 0] = \"SchemaColumn\";\n    ɵExpressionType[ɵExpressionType[\"Function\"] = 1] = \"Function\";\n    ɵExpressionType[ɵExpressionType[\"Parameter\"] = 2] = \"Parameter\";\n    ɵExpressionType[ɵExpressionType[\"SubQuery\"] = 3] = \"SubQuery\";\n    ɵExpressionType[ɵExpressionType[\"ArithmeticOperation\"] = 4] = \"ArithmeticOperation\";\n})(ɵExpressionType || (ɵExpressionType = {}));\n\nvar ɵFilterType;\n(function (ɵFilterType) {\n    ɵFilterType[ɵFilterType[\"None\"] = 0] = \"None\";\n    ɵFilterType[ɵFilterType[\"Compare\"] = 1] = \"Compare\";\n    ɵFilterType[ɵFilterType[\"IsNull\"] = 2] = \"IsNull\";\n    ɵFilterType[ɵFilterType[\"Between\"] = 3] = \"Between\";\n    ɵFilterType[ɵFilterType[\"In\"] = 4] = \"In\";\n    ɵFilterType[ɵFilterType[\"Exists\"] = 5] = \"Exists\";\n    ɵFilterType[ɵFilterType[\"FilterGroup\"] = 6] = \"FilterGroup\";\n})(ɵFilterType || (ɵFilterType = {}));\n\nvar ɵFunctionType;\n(function (ɵFunctionType) {\n    ɵFunctionType[ɵFunctionType[\"None\"] = 0] = \"None\";\n    /** Substitution by macro. */\n    ɵFunctionType[ɵFunctionType[\"Macros\"] = 1] = \"Macros\";\n    /** Aggregating function. */\n    ɵFunctionType[ɵFunctionType[\"Aggregation\"] = 2] = \"Aggregation\";\n    /** Date fragment. */\n    ɵFunctionType[ɵFunctionType[\"DatePart\"] = 3] = \"DatePart\";\n    /** The size of the value in bytes, used for binary data. */\n    ɵFunctionType[ɵFunctionType[\"Length\"] = 4] = \"Length\";\n    /** Window query function */\n    ɵFunctionType[ɵFunctionType[\"Window\"] = 5] = \"Window\";\n    /** Date add. */\n    ɵFunctionType[ɵFunctionType[\"DateAdd\"] = 6] = \"DateAdd\";\n    /** Date diff. */\n    ɵFunctionType[ɵFunctionType[\"DateDiff\"] = 7] = \"DateDiff\";\n})(ɵFunctionType || (ɵFunctionType = {}));\n\nvar ɵOrderDirection;\n(function (ɵOrderDirection) {\n    ɵOrderDirection[ɵOrderDirection[\"None\"] = 0] = \"None\";\n    ɵOrderDirection[ɵOrderDirection[\"Asc\"] = 1] = \"Asc\";\n    ɵOrderDirection[ɵOrderDirection[\"Desc\"] = 2] = \"Desc\";\n})(ɵOrderDirection || (ɵOrderDirection = {}));\n\nvar ɵQueryMacrosType;\n(function (ɵQueryMacrosType) {\n    /** Macro type not defined. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"None\"] = 0] = \"None\";\n    /** Current user. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"CurrentUser\"] = 1] = \"CurrentUser\";\n    /** Current user contact. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"CurrentUserContact\"] = 2] = \"CurrentUserContact\";\n    /** Yesterday. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"Yesterday\"] = 3] = \"Yesterday\";\n    /** Today. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"Today\"] = 4] = \"Today\";\n    /** Tomorrow. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"Tomorrow\"] = 5] = \"Tomorrow\";\n    /** Previous week. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"PreviousWeek\"] = 6] = \"PreviousWeek\";\n    /** This week. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"CurrentWeek\"] = 7] = \"CurrentWeek\";\n    /** Next week. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"NextWeek\"] = 8] = \"NextWeek\";\n    /** Previous month. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"PreviousMonth\"] = 9] = \"PreviousMonth\";\n    /** Current month. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"CurrentMonth\"] = 10] = \"CurrentMonth\";\n    /** Next month. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"NextMonth\"] = 11] = \"NextMonth\";\n    /** Previous quarter. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"PreviousQuarter\"] = 12] = \"PreviousQuarter\";\n    /** Current quarter. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"CurrentQuarter\"] = 13] = \"CurrentQuarter\";\n    /** Next quarter. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"NextQuarter\"] = 14] = \"NextQuarter\";\n    /** Previous half of the year. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"PreviousHalfYear\"] = 15] = \"PreviousHalfYear\";\n    /** Current half-year. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"CurrentHalfYear\"] = 16] = \"CurrentHalfYear\";\n    /** Next half-year. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"NextHalfYear\"] = 17] = \"NextHalfYear\";\n    /** Last year. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"PreviousYear\"] = 18] = \"PreviousYear\";\n    /** This year. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"CurrentYear\"] = 19] = \"CurrentYear\";\n    /** Previous hour. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"PreviousHour\"] = 20] = \"PreviousHour\";\n    /** Current hour. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"CurrentHour\"] = 21] = \"CurrentHour\";\n    /** Next hour. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"NextHour\"] = 22] = \"NextHour\";\n    /** Next year. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"NextYear\"] = 23] = \"NextYear\";\n    /** Next N Days. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"NextNDays\"] = 24] = \"NextNDays\";\n    /** Previous N days. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"PreviousNDays\"] = 25] = \"PreviousNDays\";\n    /** Next N hours. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"NextNHours\"] = 26] = \"NextNHours\";\n    /** Previous N hours. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"PreviousNHours\"] = 27] = \"PreviousNHours\";\n    /** Primary column. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"PrimaryColumn\"] = 34] = \"PrimaryColumn\";\n    /** Primary displayed column. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"PrimaryDisplayColumn\"] = 35] = \"PrimaryDisplayColumn\";\n    /** Primary image display column. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"PrimaryImageColumn\"] = 36] = \"PrimaryImageColumn\";\n    /** Anniversary today. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"DayOfYearToday\"] = 37] = \"DayOfYearToday\";\n    /** Anniversary on the date computed as today plus days offset. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"DayOfYearTodayPlusDaysOffset\"] = 38] = \"DayOfYearTodayPlusDaysOffset\";\n    /** Anniversary on the next several days. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"NextNDaysOfYear\"] = 39] = \"NextNDaysOfYear\";\n    /** Anniversary on the previous several days. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"PreviousNDaysOfYear\"] = 40] = \"PreviousNDaysOfYear\";\n    /** Primary color display column. */\n    ɵQueryMacrosType[ɵQueryMacrosType[\"PrimaryColorColumn\"] = 41] = \"PrimaryColorColumn\";\n})(ɵQueryMacrosType || (ɵQueryMacrosType = {}));\n\nclass ɵBaseExpression {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [this._instanceOfKey];\n    }\n    static [Symbol.hasInstance](instance) {\n        const instanceOfKeys = instance?.constructor?.['_instanceOfKeys'] ?? [];\n        return instanceOfKeys.includes(this._instanceOfKey);\n    }\n    constructor(config) {\n        this.isBlock = false;\n        this.isBlock = config?.isBlock;\n    }\n    /**\n     * Parses expression from json.\n     * @public\n     */\n    static fromJson(dto, filterParser, expressionParser) {\n        throw new Error(`fromJson not supported on expression type ${this.constructor.name}`);\n    }\n    serializeItem(item) {\n        return typeof item.toJson === 'function'\n            ? item.toJson()\n            : classToPlain(item, {\n                exposeUnsetFields: false,\n                excludePrefixes: ['_'],\n            });\n    }\n    /**\n     * Converts instance to json object.\n     * @public\n     */\n    toJson() {\n        return classToPlain(this, {\n            exposeUnsetFields: false,\n            excludePrefixes: ['_'],\n        });\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵBaseExpression._instanceOfKey = 'devkit_BaseExpression';\n\nclass ɵArithmeticExpression extends ɵBaseExpression {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵBaseExpression._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(config) {\n        super(config);\n        this.expressionType = ɵExpressionType.ArithmeticOperation;\n        this.arithmeticOperation = config?.arithmeticOperation;\n        this.leftArithmeticOperand = config?.leftArithmeticOperand.clone();\n        this.rightArithmeticOperand = config?.rightArithmeticOperand.clone();\n    }\n    /**\n     * Parses expression from json.\n     * @public\n     */\n    static fromJson(dto, filterParser, expressionParser) {\n        const leftArithmeticOperand = expressionParser?.fromJson(dto['leftArithmeticOperand'], filterParser);\n        const rightArithmeticOperand = expressionParser?.fromJson(dto['rightArithmeticOperand'], filterParser);\n        const config = {\n            leftArithmeticOperand,\n            rightArithmeticOperand,\n            arithmeticOperation: dto['arithmeticOperation'],\n            isBlock: dto['isBlock'],\n        };\n        return new ɵArithmeticExpression(config);\n    }\n    clone() {\n        return new ɵArithmeticExpression(this);\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵArithmeticExpression._instanceOfKey = 'devkit_ArithmeticExpression';\n\nclass ɵColumnExpression extends ɵBaseExpression {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵBaseExpression._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(config) {\n        super(config);\n        this.expressionType = ɵExpressionType.SchemaColumn;\n        this.columnPath = config?.columnPath;\n    }\n    /**\n     * Parses expression from json.\n     * @public\n     */\n    static fromJson(dto) {\n        const expression = new ɵColumnExpression({ columnPath: dto['columnPath'] });\n        return expression;\n    }\n    clone() {\n        return new ɵColumnExpression(this);\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵColumnExpression._instanceOfKey = 'devkit_ColumnExpression';\n\n/**\n * Expression parser interface\n * @public\n */\nclass ɵBaseExpressionParser {\n    static fromJson(dto, filterParser) {\n        throw new Error('not implemented');\n    }\n}\n\nclass ɵFunctionExpression extends ɵBaseExpression {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵBaseExpression._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(config) {\n        super(config);\n        this.expressionType = ɵExpressionType.Function;\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵFunctionExpression._instanceOfKey = 'devkit_FunctionExpression';\n\nclass ɵArgumentFunctionExpression extends ɵFunctionExpression {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵFunctionExpression._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(config) {\n        super(config);\n        this.functionArgument = config?.functionArgument.clone();\n    }\n    toJson() {\n        const result = super.toJson();\n        if (this.functionArgument) {\n            result['functionArgument'] = this.serializeItem(this.functionArgument);\n        }\n        return result;\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵArgumentFunctionExpression._instanceOfKey = 'devkit_ArgumentFunctionExpression';\n\nclass ɵAggregationFunctionExpression extends ɵArgumentFunctionExpression {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵArgumentFunctionExpression._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(config) {\n        super(config);\n        this.functionType = ɵFunctionType.Aggregation;\n        this.aggregationType = config?.aggregationType;\n        this.aggregationEvalType = config?.aggregationEvalType;\n    }\n    /**\n     * Parses expression from json.\n     * @public\n     */\n    static fromJson(dto, filterParser, expressionParser) {\n        const functionArgument = expressionParser?.fromJson(dto['functionArgument'], filterParser);\n        const aggregationType = dto['aggregationType'];\n        const aggregationEvalType = dto['aggregationEvalType'];\n        return new ɵAggregationFunctionExpression({\n            functionArgument,\n            aggregationType,\n            aggregationEvalType,\n            isBlock: dto['isBlock'],\n        });\n    }\n    clone() {\n        return new ɵAggregationFunctionExpression(this);\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵAggregationFunctionExpression._instanceOfKey = 'devkit_AggregationFunctionExpression';\n\nclass ɵDatePartFunctionExpression extends ɵArgumentFunctionExpression {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵArgumentFunctionExpression._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(config) {\n        super(config);\n        this.functionType = ɵFunctionType.DatePart;\n        this.datePartType = config?.datePartType;\n    }\n    /**\n     * Parses expression from json.\n     * @public\n     */\n    static fromJson(dto, filterParser, expressionParser) {\n        const functionArgument = expressionParser?.fromJson(dto['functionArgument'], filterParser);\n        const datePartType = dto['datePartType'];\n        return new ɵDatePartFunctionExpression({ functionArgument, datePartType, isBlock: dto['isBlock'] });\n    }\n    clone() {\n        return new ɵDatePartFunctionExpression(this);\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵDatePartFunctionExpression._instanceOfKey = 'devkit_DatePartFunctionExpression';\n\nclass ɵLengthFunctionExpression extends ɵArgumentFunctionExpression {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵArgumentFunctionExpression._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(config) {\n        super(config);\n        this.functionType = ɵFunctionType.Length;\n    }\n    /**\n     * Parses expression from json.\n     * @public\n     */\n    static fromJson(dto, filterParser, expressionParser) {\n        const functionArgument = expressionParser?.fromJson(dto['functionArgument'], filterParser);\n        return new ɵLengthFunctionExpression({ functionArgument, isBlock: dto['isBlock'] });\n    }\n    clone() {\n        return new ɵLengthFunctionExpression(this);\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵLengthFunctionExpression._instanceOfKey = 'devkit_LengthFunctionExpression';\n\nclass ɵMacrosFunctionExpression extends ɵFunctionExpression {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵFunctionExpression._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(config) {\n        super(config);\n        this.functionType = ɵFunctionType.Macros;\n        this.macrosType = config?.macrosType;\n    }\n    /**\n     * Parses expression from json.\n     * @public\n     */\n    static fromJson(dto) {\n        const expression = new ɵMacrosFunctionExpression({ macrosType: dto['macrosType'] });\n        return expression;\n    }\n    clone() {\n        return new ɵMacrosFunctionExpression(this);\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵMacrosFunctionExpression._instanceOfKey = 'devkit_MacrosFunctionExpression';\n\nclass ɵWindowFunctionExpression extends ɵArgumentFunctionExpression {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵArgumentFunctionExpression._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(config) {\n        super(config);\n        this.functionType = ɵFunctionType.Window;\n    }\n    /**\n     * Parses expression from json.\n     * @public\n     */\n    static fromJson(dto, filterParser, expressionParser) {\n        const functionArgument = expressionParser?.fromJson(dto['functionArgument'], filterParser);\n        return new ɵWindowFunctionExpression({ functionArgument, isBlock: dto['isBlock'] });\n    }\n    clone() {\n        return new ɵWindowFunctionExpression(this);\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵWindowFunctionExpression._instanceOfKey = 'devkit_WindowFunctionExpression';\n\nclass ɵParameterExpression extends ɵBaseExpression {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵBaseExpression._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(config) {\n        super(config);\n        this.expressionType = ɵExpressionType.Parameter;\n        const value = config?.value;\n        if (value instanceof Date) {\n            const cloneDate = new Date();\n            cloneDate.setTime(value.getTime());\n            this.value = cloneDate;\n        }\n        else if (!value) {\n            this.value = value;\n        }\n        else {\n            this.value = typeof value === 'object' ? { ...value } : value;\n        }\n        this.dataValueType = config?.dataValueType ?? ɵDataValueType.Text;\n        this.parameter = {\n            dataValueType: this.dataValueType,\n            ...this._getParameterValueMetadata(),\n        };\n    }\n    /**\n     * Parses expression from json.\n     * @public\n     */\n    static fromJson(dto) {\n        const expression = new ɵParameterExpression(dto['parameter']);\n        return expression;\n    }\n    _convertStringToBlobArray(str) {\n        const out = [];\n        let position = 0;\n        for (let i = 0; i < str.length; i++) {\n            const code = str.charCodeAt(i);\n            if (code < 128) {\n                out[position++] = String.fromCharCode(code);\n            }\n            else if (code < 2048) {\n                /* eslint-disable no-bitwise */\n                out[position++] = String.fromCharCode((code >> 6) | 192);\n                out[position++] = String.fromCharCode((code & 63) | 128);\n            }\n            else {\n                out[position++] = String.fromCharCode((code >> 12) | 224);\n                out[position++] = String.fromCharCode(((code >> 6) & 63) | 128);\n                out[position++] = String.fromCharCode((code & 63) | 128);\n                /* eslint-enable no-bitwise */\n            }\n        }\n        return out;\n    }\n    _getParameterValueMetadata() {\n        if (this.dataValueType === ɵDataValueType.Blob) {\n            return {\n                arrayValue: !this.value ? [] : this._convertStringToBlobArray(this.value),\n            };\n        }\n        else if (this.value instanceof Date) {\n            return {\n                value: ɵencodeDate(this.value),\n            };\n        }\n        else {\n            return {\n                value: this.value,\n            };\n        }\n    }\n    clone() {\n        return new ɵParameterExpression(this);\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵParameterExpression._instanceOfKey = 'devkit_ParameterExpression';\n__decorate([\n    Exclude(),\n    __metadata(\"design:type\", Object)\n], ɵParameterExpression.prototype, \"value\", void 0);\n__decorate([\n    Exclude(),\n    __metadata(\"design:type\", Number)\n], ɵParameterExpression.prototype, \"dataValueType\", void 0);\n\nclass ɵSubQueryExpression extends ɵBaseExpression {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵBaseExpression._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(config) {\n        super(config);\n        this.expressionType = ɵExpressionType.SubQuery;\n        this.columnPath = config?.columnPath;\n        const subFilter = config?.subFilters;\n        this.subFilters = typeof subFilter?.clone === 'function' ? subFilter.clone() : subFilter;\n        this.subOrderDirection = config.subOrderDirection;\n        this.subOrderColumn = config.subOrderColumn;\n    }\n    /**\n     * Parses expression from json.\n     * @public\n     */\n    static fromJson(dto, filterParser) {\n        const expression = new ɵSubQueryExpression({\n            columnPath: dto['columnPath'],\n            subFilters: filterParser.fromJson(dto['subFilters']),\n            subOrderDirection: dto['subOrderDirection'],\n            subOrderColumn: dto['subOrderColumn'],\n        });\n        return expression;\n    }\n    clone() {\n        return new ɵSubQueryExpression(this);\n    }\n    toJson() {\n        const result = super.toJson();\n        if (this.subFilters) {\n            result['subFilters'] = this.serializeItem(this.subFilters);\n        }\n        return result;\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵSubQueryExpression._instanceOfKey = 'devkit_SubQueryExpression';\n\nclass ɵAggregationSubQueryExpression extends ɵSubQueryExpression {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵSubQueryExpression._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(config) {\n        super(config);\n        this.aggregationType = config?.aggregationType;\n        this.functionType = config?.functionType;\n    }\n    /**\n     * Parses expression from json.\n     * @public\n     */\n    static fromJson(dto, filterParser) {\n        const subQueryExpression = super.fromJson(dto, filterParser);\n        const expression = new ɵAggregationSubQueryExpression({\n            aggregationType: dto['aggregationType'],\n            functionType: dto['functionType'],\n            ...subQueryExpression,\n        });\n        return expression;\n    }\n    clone() {\n        return new ɵAggregationSubQueryExpression(this);\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵAggregationSubQueryExpression._instanceOfKey = 'devkit_AggregationSubQueryExpression';\n\n/**\n * Function expression resolver.\n * @public\n */\nclass FunctionExpressionResolver {\n    static resolve(dto) {\n        const expressionClass = {\n            [ɵFunctionType.Macros]: ɵMacrosFunctionExpression,\n            [ɵFunctionType.Length]: ɵLengthFunctionExpression,\n            [ɵFunctionType.Window]: ɵWindowFunctionExpression,\n            [ɵFunctionType.DatePart]: ɵDatePartFunctionExpression,\n            [ɵFunctionType.DateAdd]: ɵDatePartFunctionExpression,\n            [ɵFunctionType.DateDiff]: ɵDatePartFunctionExpression,\n        };\n        return expressionClass[dto['functionType']];\n    }\n}\n/**\n * Expression resolver.\n * @public\n */\nclass ɵExpressionResolver {\n    static resolve(expressionType, dto) {\n        const expressionClass = {\n            [ɵExpressionType.SchemaColumn]: ɵColumnExpression,\n            [ɵExpressionType.Parameter]: ɵParameterExpression,\n            [ɵExpressionType.SubQuery]: ɵAggregationSubQueryExpression,\n            [ɵExpressionType.ArithmeticOperation]: ɵArithmeticExpression,\n            [ɵExpressionType.Function]: FunctionExpressionResolver.resolve(dto),\n        };\n        return expressionClass[expressionType];\n    }\n}\n\n/**\n * Expression parser.\n * @public\n */\nclass ɵExpressionParser extends ɵBaseExpressionParser {\n    /**\n     * Parses expression from json.\n     * @public\n     */\n    static fromJson(dto, filterParser) {\n        const expressionType = dto['expressionType'];\n        return ɵExpressionResolver.resolve(expressionType, dto).fromJson(dto, filterParser, ɵExpressionParser);\n    }\n}\n\nconst ɵEXPRESSION_TYPE_MOCK = -1;\nclass ɵExpressionMock extends ɵBaseExpression {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵBaseExpression._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(config) {\n        super(config || {});\n        this.expressionType = ɵEXPRESSION_TYPE_MOCK;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    get plainObject() {\n        return classToPlain(this, { exposeUnsetFields: false, excludePrefixes: ['_'] });\n    }\n    clone() {\n        return new ɵExpressionMock(this);\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵExpressionMock._instanceOfKey = 'devkit_ExpressionMock';\n\nclass ɵBaseFilter {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [this._instanceOfKey];\n    }\n    static [Symbol.hasInstance](instance) {\n        const instanceOfKeys = instance?.constructor?.['_instanceOfKeys'] ?? [];\n        return instanceOfKeys.includes(this._instanceOfKey);\n    }\n    constructor(filterType) {\n        this.isEnabled = true;\n        this.trimDateTimeParameterToDate = false;\n        this.filterType = filterType;\n    }\n    /**\n     * Parses filter from json.\n     * @public\n     */\n    static fromJson(dto, filterParser, expressionParser) {\n        throw new Error(`fromJson not supported on filter type ${this.constructor.name}`);\n    }\n    serializeItem(item) {\n        return typeof item.toJson === 'function'\n            ? item.toJson()\n            : classToPlain(item, {\n                exposeUnsetFields: false,\n                excludePrefixes: ['_'],\n            });\n    }\n    /**\n     * Converts instance to json object.\n     * @public\n     */\n    toJson() {\n        return classToPlain(this, {\n            exposeUnsetFields: false,\n            excludePrefixes: ['_'],\n        });\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵBaseFilter._instanceOfKey = 'devkit_BaseFilter';\n\nclass ɵFilterMock extends ɵBaseFilter {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵBaseFilter._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(filterType = ɵFilterType.None) {\n        super(filterType);\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    get plainObject() {\n        return classToPlain(this, { exposeUnsetFields: false, excludePrefixes: ['_'] });\n    }\n    clone() {\n        return new ɵFilterMock(this.filterType);\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵFilterMock._instanceOfKey = 'devkit_FilterMock';\n\nconst ɵparserMock = {\n    fromJson: (data) => ({\n        ...data,\n        clone: () => data,\n    }),\n    clone: () => this,\n};\n\nclass ɵSingleFilter extends ɵBaseFilter {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵBaseFilter._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(filterType, comparisonType, leftExpression) {\n        super(filterType);\n        this.comparisonType = comparisonType;\n        this.leftExpression = leftExpression.clone();\n    }\n    toJson() {\n        return {\n            ...super.toJson(),\n            leftExpression: this.serializeItem(this.leftExpression),\n        };\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵSingleFilter._instanceOfKey = 'devkit_SingleFilter';\n\nclass ɵCompareFilter extends ɵSingleFilter {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵSingleFilter._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(comparisonType, leftExpression, rightExpression) {\n        super(ɵFilterType.Compare, comparisonType, leftExpression);\n        this.rightExpression = rightExpression.clone();\n    }\n    /**\n     * Parses filter from json.\n     * @public\n     */\n    static fromJson(dto, filterParser, expressionParser) {\n        const filter = new ɵCompareFilter(dto['comparisonType'], expressionParser.fromJson(dto['leftExpression'], filterParser), expressionParser.fromJson(dto['rightExpression'], filterParser));\n        return filter;\n    }\n    clone() {\n        return new ɵCompareFilter(this.comparisonType, this.leftExpression, this.rightExpression);\n    }\n    toJson() {\n        return {\n            ...super.toJson(),\n            rightExpression: this.serializeItem(this.rightExpression),\n        };\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵCompareFilter._instanceOfKey = 'devkit_CompareFilter';\n\nclass ɵBetweenFilter extends ɵSingleFilter {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵSingleFilter._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(leftExpression, rightLessExpression, rightGreaterExpression) {\n        super(ɵFilterType.Between, ɵComparisonType.Between, leftExpression);\n        this.rightLessExpression = rightLessExpression.clone();\n        this.rightGreaterExpression = rightGreaterExpression.clone();\n    }\n    /**\n     * Parses filter from json.\n     * @public\n     */\n    static fromJson(dto, filterParser, expressionParser) {\n        const filter = new ɵBetweenFilter(expressionParser.fromJson(dto['leftExpression'], filterParser), expressionParser.fromJson(dto['rightLessExpression'], filterParser), expressionParser.fromJson(dto['rightGreaterExpression'], filterParser));\n        return filter;\n    }\n    clone() {\n        return new ɵBetweenFilter(this.leftExpression, this.rightLessExpression, this.rightGreaterExpression);\n    }\n    toJson() {\n        return {\n            ...super.toJson(),\n            rightLessExpression: this.serializeItem(this.rightLessExpression),\n            rightGreaterExpression: this.serializeItem(this.rightGreaterExpression),\n        };\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵBetweenFilter._instanceOfKey = 'devkit_BetweenFilter';\n\nclass ɵExistsFilter extends ɵSingleFilter {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵSingleFilter._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(leftExpression, subFilters, comparisonType = ɵComparisonType.Exists, isAggregative = true) {\n        super(ɵFilterType.Exists, comparisonType, leftExpression);\n        this.subFilters = subFilters?.clone();\n        this.isAggregative = isAggregative;\n    }\n    /**\n     * Parses filter from json.\n     * @public\n     */\n    static fromJson(dto, filterParser, expressionParser) {\n        const leftExpression = expressionParser.fromJson(dto['leftExpression'], filterParser);\n        const subFilters = filterParser.fromJson(dto['subFilters']);\n        return new ɵExistsFilter(leftExpression, subFilters, dto['comparisonType'], dto['isAggregative']);\n    }\n    clone() {\n        return new ɵExistsFilter(this.leftExpression, this.subFilters, this.comparisonType, this.isAggregative);\n    }\n    toJson() {\n        const result = super.toJson();\n        if (this.subFilters) {\n            result['subFilters'] = this.serializeItem(this.subFilters);\n        }\n        return result;\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵExistsFilter._instanceOfKey = 'devkit_ExistsFilter';\n\nclass ɵInFilter extends ɵSingleFilter {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵSingleFilter._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(comparisonType, leftExpression, rightExpressions) {\n        super(ɵFilterType.In, comparisonType, leftExpression);\n        this.rightExpressions = rightExpressions.map((expression) => expression.clone());\n    }\n    /**\n     * Parses in filter from json.\n     * @public\n     */\n    static fromJson(dto, filterParser, expressionParser) {\n        const dtoRightExpressions = (dto['rightExpressions'] ?? []);\n        return new ɵInFilter(dto['comparisonType'], expressionParser.fromJson(dto['leftExpression'], filterParser), dtoRightExpressions.map((expression) => expressionParser.fromJson(expression, filterParser)));\n    }\n    clone() {\n        return new ɵInFilter(this.comparisonType, this.leftExpression, this.rightExpressions);\n    }\n    toJson() {\n        return {\n            ...super.toJson(),\n            rightExpressions: this.rightExpressions.map((expression) => this.serializeItem(expression)),\n        };\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵInFilter._instanceOfKey = 'devkit_InFilter';\n\nclass ɵIsNullFilter extends ɵSingleFilter {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵSingleFilter._instanceOfKeys, this._instanceOfKey];\n    }\n    constructor(comparisonType, leftExpression) {\n        super(ɵFilterType.IsNull, comparisonType, leftExpression);\n    }\n    get isNull() {\n        return this.comparisonType === ɵComparisonType.Is_null;\n    }\n    /**\n     * Parses isNull filter from json.\n     * @public\n     */\n    static fromJson(dto, filterParser, expressionParser) {\n        return new ɵIsNullFilter(dto['comparisonType'], expressionParser.fromJson(dto['leftExpression'], filterParser));\n    }\n    clone() {\n        return new ɵIsNullFilter(this.comparisonType, this.leftExpression);\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵIsNullFilter._instanceOfKey = 'devkit_IsNullFilter';\n__decorate([\n    Expose(),\n    __metadata(\"design:type\", Boolean),\n    __metadata(\"design:paramtypes\", [])\n], ɵIsNullFilter.prototype, \"isNull\", null);\n\n/**\n * Empty Guid constant.\n * @public\n */\nconst ɵEMPTY_GUID = '00000000-0000-0000-0000-000000000000';\n/**\n * Regular expression for Guid validation.\n * @public\n */\nconst validator = new RegExp('^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$', 'i');\n/**\n * Generates guid part.\n * @param length Part length.\n * @public\n */\nfunction generateGuidPart(length) {\n    let out = '';\n    for (let i = 0; i < length; i++) {\n        // eslint-disable-next-line no-bitwise\n        out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    }\n    return out;\n}\n/**\n * Generates new Guid.\n * @public\n */\nfunction ɵgenerateGuid() {\n    return [\n        generateGuidPart(2),\n        generateGuidPart(1),\n        generateGuidPart(1),\n        generateGuidPart(1),\n        generateGuidPart(3),\n    ].join('-');\n}\n/**\n * Checks if value is Guid.\n * @param value Value for check.\n * @public\n */\nfunction ɵisGuid(value) {\n    return Boolean(value) && validator.test(value);\n}\n/**\n * Checks if Guid is empty value or equal to EMPTY_GUID.\n * @param guid Guid for check.\n * @public\n */\nfunction ɵisEmptyGuid(guid) {\n    return !guid || guid === ɵEMPTY_GUID;\n}\n\n/**\n * @public\n */\nclass ɵNextHandlerAlreadySpecifiedException extends Error {\n    constructor() {\n        super('Next handler already specified');\n    }\n}\n\nclass ɵArgumentEmptyException extends Error {\n    // region Constructors: Public\n    constructor(argumentName) {\n        super(`Argument with name '${argumentName}' is empty.`);\n    }\n}\n\nclass ɵArgumentOutOfRangeException extends Error {\n    // region Constructors: Public\n    constructor(argumentName) {\n        super(`Argument with name '${argumentName}' is out of range.`);\n    }\n}\n\nclass ɵItemNotFoundException extends Error {\n    // region Constructors: Public\n    constructor(key) {\n        super(`Item with key '${key}' does not exist.`);\n    }\n}\n\nclass ɵValidationUtilities {\n    // region Methods: Public\n    static checkArgumentEmpty(argumentName, argumentValue) {\n        if (argumentValue === undefined || argumentValue === null) {\n            throw new ɵArgumentEmptyException(argumentName);\n        }\n    }\n    static checkArrayEmpty(argumentName, argumentValue) {\n        ɵValidationUtilities.checkArgumentEmpty(argumentName, argumentValue);\n        if (argumentValue.length === 0) {\n            throw new ɵArgumentEmptyException(argumentName);\n        }\n    }\n    static checkStringIsNotEmpty(argumentName, argumentValue) {\n        this.checkArgumentEmpty(argumentName, argumentValue);\n        if (argumentValue === '') {\n            throw new ɵArgumentEmptyException(argumentName);\n        }\n        return argumentValue;\n    }\n    static checkArgumentOutOfRange(argumentName, argumentValue, range) {\n        if (range.begin && argumentValue < range.begin) {\n            throw new ɵArgumentOutOfRangeException(argumentName);\n        }\n        if (range.end && argumentValue > range.end) {\n            throw new ɵArgumentOutOfRangeException(argumentName);\n        }\n    }\n}\n\nclass ɵFilterGroup extends ɵBaseFilter {\n    /**\n     * @internal\n     * @dontChange\n     */\n    static get _instanceOfKeys() {\n        return [...ɵBaseFilter._instanceOfKeys, this._instanceOfKey];\n    }\n    get items() {\n        const result = {};\n        this.filters.forEach((filter, key) => {\n            result[key] = this.serializeItem(filter);\n        });\n        return result;\n    }\n    constructor(logicalOperation = ɵLogicalOperatorType.And) {\n        super(ɵFilterType.FilterGroup);\n        this.filters = new Map();\n        this.logicalOperation = logicalOperation;\n    }\n    /**\n     * Parses filter group from json.\n     * @public\n     */\n    static fromJson(dto, filterParser) {\n        const logicalOperation = dto['logicalOperation'];\n        const group = new ɵFilterGroup(logicalOperation || ɵLogicalOperatorType.And);\n        Object.entries(dto['items']).forEach(([key, filterDTO]) => {\n            group.add(filterParser.fromJson(filterDTO), key);\n        });\n        return group;\n    }\n    /**\n     * Returns filter item by index.\n     * @param index Item index.\n     * @returns Filter.\n     */\n    getItemByIndex(index) {\n        return this.items[Object.keys(this.items)[index]];\n    }\n    /**\n     * Creates and adds compare filter by value.\n     * @param comparisonType Comparison type.\n     * @param columnPath Column path.\n     * @param parameterValue Parameter value.\n     * @param filterKey Filter key.\n     */\n    addSchemaColumnFilterWithParameter(comparisonType, columnPath, parameterValue, filterKey) {\n        const leftExpression = new ɵColumnExpression({ columnPath });\n        const rightExpression = new ɵParameterExpression({ value: parameterValue });\n        const filter = new ɵCompareFilter(comparisonType, leftExpression, rightExpression);\n        this.add(filter, filterKey);\n    }\n    /**\n     * Creates and adds in filter by values.\n     * @param comparisonType Comparison type.\n     * @param columnPath Column path.\n     * @param parameterValues Parameter values.\n     * @param filterKey Filter key.\n     */\n    addSchemaColumnInFilterWithParameters(comparisonType, columnPath, parameterValues, filterKey) {\n        const leftExpression = new ɵColumnExpression({ columnPath });\n        const expressions = parameterValues.map((singleParameterValue) => new ɵParameterExpression({\n            value: singleParameterValue,\n        }));\n        const filter = new ɵInFilter(comparisonType, leftExpression, expressions);\n        this.add(filter, filterKey);\n    }\n    addSchemaColumnIsNullFilter(columnPath, filterKey) {\n        const leftExpression = new ɵColumnExpression({ columnPath });\n        const filter = new ɵIsNullFilter(ɵComparisonType.Is_null, leftExpression);\n        this.add(filter, filterKey);\n    }\n    /**\n     * Creates and adds not null filter.\n     * @param columnPath Column path.\n     * @param filterKey Filter key.\n     */\n    addSchemaColumnIsNotNullFilter(columnPath, filterKey) {\n        const leftExpression = new ɵColumnExpression({ columnPath });\n        const filter = new ɵIsNullFilter(ɵComparisonType.Is_not_null, leftExpression);\n        this.add(filter, filterKey);\n    }\n    /**\n     * Creates and adds filter between less value and greater value.\n     * @param columnPath Column path.\n     * @param lessParamValue Less parameter value.\n     * @param greaterParamValue Greater parameter value.\n     * @param filterKey Filter key.\n     */\n    addSchemaColumnBetweenFilterWithParameters(columnPath, lessParamValue, greaterParamValue, filterKey) {\n        const leftExpression = new ɵColumnExpression({ columnPath });\n        const rightLessExpression = new ɵParameterExpression({ value: lessParamValue });\n        const rightGreaterExpression = new ɵParameterExpression({ value: greaterParamValue });\n        const filter = new ɵBetweenFilter(leftExpression, rightLessExpression, rightGreaterExpression);\n        this.add(filter, filterKey);\n    }\n    addExistsFilter(columnPath, subFilters, filterKey) {\n        const leftExpression = new ɵColumnExpression({ columnPath });\n        const filter = new ɵExistsFilter(leftExpression, subFilters);\n        this.add(filter, filterKey);\n    }\n    addNotExistsFilter(columnPath, subFilters, filterKey) {\n        const leftExpression = new ɵColumnExpression({ columnPath });\n        const filter = new ɵExistsFilter(leftExpression, subFilters, ɵComparisonType.Not_exists);\n        this.add(filter, filterKey);\n    }\n    add(filter, filterKey) {\n        ɵValidationUtilities.checkArgumentEmpty('filter', filter);\n        const key = filterKey || ɵgenerateGuid();\n        this.filters.set(key, filter);\n    }\n    clone() {\n        const filterGroup = new ɵFilterGroup(this.logicalOperation);\n        this.filters.forEach((filter, filterKey) => {\n            filterGroup.filters.set(filterKey, filter.clone());\n        });\n        return filterGroup;\n    }\n}\n/**\n * @internal\n * @dontChange\n */\nɵFilterGroup._instanceOfKey = 'devkit_FilterGroup';\n__decorate([\n    Exclude(),\n    __metadata(\"design:type\", Object)\n], ɵFilterGroup.prototype, \"filters\", void 0);\n__decorate([\n    Expose(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [])\n], ɵFilterGroup.prototype, \"items\", null);\n\n/**\n * Filter parser interface\n * @public\n */\nclass ɵBaseFilterParser {\n    static fromJson(dto) {\n        throw new Error('not implemented');\n    }\n}\n\n/**\n * Filter resolver.\n * @public\n */\nclass ɵFilterResolver {\n    static resolve(filterType) {\n        const filterClass = {\n            [ɵFilterType.Compare]: ɵCompareFilter,\n            [ɵFilterType.FilterGroup]: ɵFilterGroup,\n            [ɵFilterType.In]: ɵInFilter,\n            [ɵFilterType.IsNull]: ɵIsNullFilter,\n            [ɵFilterType.Exists]: ɵExistsFilter,\n            [ɵFilterType.Between]: ɵBetweenFilter,\n        };\n        return filterClass[filterType];\n    }\n}\n\n/**\n * Filter parser.\n * @public\n */\nclass ɵFilterParser extends ɵBaseFilterParser {\n    static fromJson(dto) {\n        const filterType = dto['filterType'];\n        return ɵFilterResolver.resolve(filterType).fromJson(dto, ɵFilterParser, ɵExpressionParser);\n    }\n}\n\nconst ɵDEFAULT_FILTER_PLAIN_OBJ = {\n    isEnabled: true,\n    trimDateTimeParameterToDate: false,\n};\nfunction ɵgetFilterPlainObj(filterPlainObj) {\n    return {\n        ...ɵDEFAULT_FILTER_PLAIN_OBJ,\n        ...filterPlainObj,\n    };\n}\n\nclass ɵBaseQueryColumn {\n    constructor(expression) {\n        this.orderDirection = ɵOrderDirection.None;\n        this.orderPosition = -1;\n        this.isVisible = true;\n        this.expression = expression;\n    }\n    /**\n     * Adds ordering options.\n     * @param orderDirection Direction.\n     * @param orderPosition Position.\n     * @returns Self.\n     */\n    withOrdering(orderDirection, orderPosition) {\n        ɵValidationUtilities.checkArgumentEmpty('orderDirection', orderDirection);\n        ɵValidationUtilities.checkArgumentEmpty('orderPosition', orderPosition);\n        ɵValidationUtilities.checkArgumentOutOfRange('orderPosition', orderPosition, { begin: -1 });\n        this.orderDirection = orderDirection;\n        this.orderPosition = orderPosition;\n        return this;\n    }\n    /**\n     * Adds options.\n     * @param options Options.\n     * @returns Self.\n     */\n    withOptions(options) {\n        ɵValidationUtilities.checkArgumentEmpty('options', options);\n        this.isVisible = options.isVisible ?? true;\n        return this;\n    }\n    /**\n     * Adds caption.\n     * @param caption Caption.\n     * @returns Self.\n     */\n    withCaption(caption) {\n        ɵValidationUtilities.checkArgumentEmpty('caption', caption);\n        this.caption = caption;\n        return this;\n    }\n}\n\nclass ɵArithmeticQueryColumn extends ɵBaseQueryColumn {\n    // region Constructors: Public\n    constructor(arithmeticOperation, leftArithmeticOperand, rightArithmeticOperand) {\n        super(new ɵArithmeticExpression({ arithmeticOperation, leftArithmeticOperand, rightArithmeticOperand }));\n    }\n}\n\nclass ɵEntityQueryColumn extends ɵBaseQueryColumn {\n    // region Constructors: Public\n    constructor(columnPath) {\n        super(new ɵColumnExpression({ columnPath }));\n    }\n}\n\nclass ɵParameterQueryColumn extends ɵBaseQueryColumn {\n    // region Constructors: Public\n    constructor(value, dataValueType) {\n        super(new ɵParameterExpression({ value, dataValueType }));\n    }\n}\n\nclass ɵAggregationSubQueryColumn extends ɵBaseQueryColumn {\n    // region Constructors: Public\n    constructor(columnPath, aggregationType, subFilters, subOrderDirection, subOrderColumn) {\n        super(new ɵAggregationSubQueryExpression({\n            aggregationType,\n            columnPath,\n            subFilters,\n            subOrderDirection,\n            subOrderColumn,\n        }));\n    }\n}\n\nclass ɵSubQueryColumn extends ɵBaseQueryColumn {\n    // region Constructors: Public\n    constructor(columnPath, subFilters) {\n        super(new ɵSubQueryExpression({ columnPath, subFilters }));\n    }\n}\n\nclass ɵAggregationFunctionColumn extends ɵBaseQueryColumn {\n    // region Constructors: Public\n    constructor(aggregationType, aggregationEvalType, functionArgument) {\n        super(new ɵAggregationFunctionExpression({\n            aggregationType,\n            aggregationEvalType,\n            functionArgument,\n        }));\n    }\n}\n\nclass ɵDatePartFunctionColumn extends ɵBaseQueryColumn {\n    // region Constructors: Public\n    constructor(datePartType, functionArgument) {\n        super(new ɵDatePartFunctionExpression({\n            datePartType,\n            functionArgument,\n        }));\n    }\n    // endregion\n    // region Properties: Public\n    get datePartType() {\n        return this.expression?.datePartType;\n    }\n}\n\nclass ɵLengthFunctionColumn extends ɵBaseQueryColumn {\n    // region Constructors: Public\n    constructor(functionArgument) {\n        super(new ɵLengthFunctionExpression({ functionArgument }));\n    }\n}\n\nclass ɵMacrosFunctionColumn extends ɵBaseQueryColumn {\n    // region Constructors: Public\n    constructor(macrosType) {\n        super(new ɵMacrosFunctionExpression({ macrosType }));\n    }\n}\n\nclass ɵWindowFunctionColumn extends ɵBaseQueryColumn {\n    // region Constructors: Public\n    constructor(functionArgument) {\n        super(new ɵWindowFunctionExpression({ functionArgument }));\n    }\n}\n\nconst ɵDEFAULT_COLUMN_PLAIN_OBJ = {\n    isVisible: true,\n    orderPosition: -1,\n    orderDirection: ɵOrderDirection.None,\n};\nfunction ɵgetColumnPlainObj(expressionPlainObj) {\n    return {\n        ...ɵDEFAULT_COLUMN_PLAIN_OBJ,\n        expression: expressionPlainObj,\n    };\n}\n\n/**\n * @public\n */\nclass ɵBaseQuery {\n    // region Constructors: Protected\n    constructor(operationType, rootSchemaName) {\n        this.operationType = operationType;\n        this.rootSchemaName = rootSchemaName;\n        ɵValidationUtilities.checkArgumentEmpty('_operationType', operationType);\n        ɵValidationUtilities.checkArgumentEmpty('_rootSchemaName', rootSchemaName);\n    }\n    // endregion\n    // region Methods: Public\n    getMetadata() {\n        return classToPlain(this, { exposeUnsetFields: false, excludePrefixes: ['_'] });\n    }\n}\n\n/**\n * @public\n */\nclass ɵBaseFilterableQuery extends ɵBaseQuery {\n    constructor(operationType, rootSchemaName) {\n        super(operationType, rootSchemaName);\n        this.filters = new ɵFilterGroup();\n    }\n    clearFilters() {\n        this.filters.filters.clear();\n    }\n    getMetadata() {\n        return {\n            ...super.getMetadata(),\n            filters: this.filters.toJson(),\n        };\n    }\n}\n\n/**\n * @public\n */\nvar ɵQueryOperationType;\n(function (ɵQueryOperationType) {\n    ɵQueryOperationType[ɵQueryOperationType[\"Select\"] = 0] = \"Select\";\n    ɵQueryOperationType[ɵQueryOperationType[\"Insert\"] = 1] = \"Insert\";\n    ɵQueryOperationType[ɵQueryOperationType[\"Update\"] = 2] = \"Update\";\n    ɵQueryOperationType[ɵQueryOperationType[\"Delete\"] = 3] = \"Delete\";\n    // Batch,\n    // ListSelect,\n    // FilteredSelect,\n    // LookupSelect\n})(ɵQueryOperationType || (ɵQueryOperationType = {}));\n\n/**\n * @public\n */\nclass ɵDeleteQuery extends ɵBaseFilterableQuery {\n    // region Constructors: Public\n    constructor(rootSchemaName) {\n        super(ɵQueryOperationType.Delete, rootSchemaName);\n    }\n}\n\n/**\n * @public\n */\nclass ɵEntitySchemaQuery extends ɵBaseFilterableQuery {\n    constructor(rootSchemaName) {\n        super(ɵQueryOperationType.Select, rootSchemaName);\n        this._columns = new Map();\n        this.isDistinct = false;\n        /**\n         * Number of rows to select.\n         */\n        this.rowCount = -1;\n        /**\n         * Rows count to skip.\n         */\n        this.rowsOffset = -1;\n        this.useLocalization = true;\n        this.useRecordDeactivation = false;\n        this._getIsPageable = () => this.rowCount > 0 && this.rowsOffset > -1;\n    }\n    _internalAddColumn(key, column) {\n        if (!this._columns.has(key)) {\n            this._columns.set(key, column);\n        }\n    }\n    // endregion\n    // region Methods: Public\n    /**\n     * Returns column instance by column alias.\n     * @param columnAlias Column alias.\n     * @returns [BaseQueryColumn] Column instance.\n     */\n    getColumn(columnAlias) {\n        if (!this._columns.has(columnAlias)) {\n            throw new ɵItemNotFoundException(columnAlias);\n        }\n        return this.findColumn(columnAlias);\n    }\n    /**\n     * Returns column instance by column alias if not found returns null.\n     */\n    findColumn(columnAlias) {\n        return this._columns.get(columnAlias);\n    }\n    /**\n     * @inheritDoc\n     */\n    getMetadata() {\n        return {\n            ...super.getMetadata(),\n            columns: {\n                items: classToPlain(this._columns, { exposeUnsetFields: false, excludePrefixes: ['_'] }),\n            },\n            allColumns: false,\n            isDistinct: this.isDistinct,\n            ignoreDisplayValues: false,\n            rowCount: this.rowCount,\n            rowsOffset: this.rowsOffset,\n            isPageable: this._getIsPageable(),\n            conditionalValues: this.conditionalValues ? this.conditionalValues : null,\n            isHierarchical: false,\n            hierarchicalMaxDepth: 0,\n            hierarchicalColumnName: null,\n            hierarchicalColumnValue: null,\n            useLocalization: this.useLocalization,\n            useRecordDeactivation: this.useRecordDeactivation,\n        };\n    }\n    /**\n     * Add column.\n     * @param column Column path.\n     * @param columnAlias Column alias.\n     * @returns [BaseQueryColumn] Column instance.\n     */\n    addColumn(column, columnAlias) {\n        this._internalAddColumn(columnAlias, column);\n        return column;\n    }\n    /**\n     * Add column by column path.\n     * @param columnPath Column path.\n     * @param columnAlias Column alias.\n     * @returns [EntityQueryColumn] Column instance.\n     */\n    addSchemaColumn(columnPath, columnAlias) {\n        ɵValidationUtilities.checkArgumentEmpty('columnPath', columnPath);\n        const column = new ɵEntityQueryColumn(columnPath);\n        this._internalAddColumn(columnAlias || columnPath, column);\n        return column;\n    }\n    /**\n     * Add aggregation sub query column.\n     * @param columnPath Column path.\n     * @param aggregationType Aggregation type.\n     * @param subFilters Sub query filters.\n     * @param columnAlias Column alias.\n     * @returns [AggregationSubQueryColumn] Column instance.\n     */\n    addAggregationSubQueryColumn(columnPath, aggregationType, aggregationConfig, columnAlias) {\n        const column = new ɵAggregationSubQueryColumn(columnPath, aggregationType, aggregationConfig.filter, aggregationConfig.sortByDirection, aggregationConfig.sortByColumn);\n        this._internalAddColumn(columnAlias || columnPath, column);\n        return column;\n    }\n    /**\n     * Add parameter column.\n     * @param value Parameter value.\n     * @param dataValueType Parameter data value type.\n     * @param columnAlias Column alias.\n     * @returns [ParameterQueryColumn] Column instance.\n     */\n    addParameterColumn(value, dataValueType, columnAlias) {\n        const column = new ɵParameterQueryColumn(value, dataValueType);\n        this._internalAddColumn(columnAlias, column);\n        return column;\n    }\n    /**\n     * Add arithmetic column.\n     * @param arithmeticOperation Arithmetic operation.\n     * @param leftArithmeticOperand Left arithmetic operand expression.\n     * @param rightArithmeticOperand Right arithmetic operand expression.\n     * @param columnAlias Column alias.\n     * @returns [ArithmeticQueryColumn] Column instance.\n     */\n    addArithmeticColumn(arithmeticOperation, leftArithmeticOperand, rightArithmeticOperand, columnAlias) {\n        const column = new ɵArithmeticQueryColumn(arithmeticOperation, leftArithmeticOperand, rightArithmeticOperand);\n        this._internalAddColumn(columnAlias, column);\n        return column;\n    }\n    /**\n     * Add macros function column.\n     * @param queryMacrosType Macros type.\n     * @param columnAlias Column alias.\n     * @returns [MacrosFunctionColumn] Column instance.\n     */\n    addMacrosFunctionColumn(queryMacrosType, columnAlias) {\n        const column = new ɵMacrosFunctionColumn(queryMacrosType);\n        this._internalAddColumn(columnAlias, column);\n        return column;\n    }\n    /**\n     * Add date part function column.\n     * @param columnPath Column path.\n     * @param datePartType Date part type.\n     * @param columnAlias Column alias.\n     * @returns [DatePartFunctionColumn] Column instance.\n     */\n    addDatePartFunctionColumn(columnPath, datePartType, columnAlias) {\n        const functionArgument = new ɵColumnExpression({ columnPath });\n        const column = new ɵDatePartFunctionColumn(datePartType, functionArgument);\n        this._internalAddColumn(columnAlias, column);\n        return column;\n    }\n    /**\n     * Add aggregation function column.\n     * @param columnPath Column path.\n     * @param aggregationType Aggregation type.\n     * @param columnAlias Column alias.\n     * @param aggregationEvalType Aggregation eval type.\n     * @returns [AggregationFunctionColumn] Column instance.\n     */\n    addAggregationFunctionColumn(columnPath, aggregationType, columnAlias, aggregationEvalType = ɵAggregationEvalType.None) {\n        const functionArgument = new ɵColumnExpression({ columnPath });\n        const column = new ɵAggregationFunctionColumn(aggregationType, aggregationEvalType, functionArgument);\n        this._internalAddColumn(columnAlias, column);\n        return column;\n    }\n    /**\n     * Add length function column.\n     * @param columnPath Column path.\n     * @param columnAlias Column alias.\n     * @returns [LengthFunctionColumn] Column instance.\n     */\n    addLengthFunctionColumn(columnPath, columnAlias) {\n        const functionArgument = new ɵColumnExpression({ columnPath });\n        const column = new ɵLengthFunctionColumn(functionArgument);\n        this._internalAddColumn(columnAlias, column);\n        return column;\n    }\n    /**\n     * Add window function column.\n     * @param columnPath Column path.\n     * @param aggregationType Aggregation type.\n     * @param columnAlias Column alias.\n     * @param aggregationEvalType Aggregation eval type.\n     * @returns [WindowFunctionColumn] Column instance.\n     */\n    addWindowFunctionColumn(columnPath, aggregationType, columnAlias, aggregationEvalType = ɵAggregationEvalType.None) {\n        const functionArgument = new ɵAggregationFunctionExpression({\n            aggregationType,\n            aggregationEvalType,\n            functionArgument: new ɵColumnExpression({ columnPath }),\n        });\n        const column = new ɵWindowFunctionColumn(functionArgument);\n        this._internalAddColumn(columnAlias, column);\n        return column;\n    }\n}\n\n/**\n * @public\n */\nclass ɵInsertQuery extends ɵBaseQuery {\n    // endregion\n    // region Constructors: Public\n    constructor(rootSchemaName) {\n        super(ɵQueryOperationType.Insert, rootSchemaName);\n        // region Fields: Private\n        this._columnValues = new Map();\n    }\n    // endregion\n    // region Properties: Public\n    get columnValues() {\n        return {\n            items: classToPlain(this._columnValues),\n        };\n    }\n    // endregion\n    // region Methods: Public\n    addColumn(columnName, columnValue, dataValueType) {\n        ɵValidationUtilities.checkArgumentEmpty('columnName', columnName);\n        this._columnValues.set(columnName, new ɵParameterExpression({ value: columnValue, dataValueType }));\n    }\n}\n__decorate([\n    Expose(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [])\n], ɵInsertQuery.prototype, \"columnValues\", null);\n\n/**\n * @public\n */\nclass ɵUpdateQuery extends ɵBaseFilterableQuery {\n    // endregion\n    // region Constructors: Public\n    constructor(rootSchemaName) {\n        super(ɵQueryOperationType.Update, rootSchemaName);\n        // region Fields: Private\n        this._columnValues = new Map();\n        // endregion\n        // region Fields: Public\n        /**\n         * Flag that indicates whether to force save data.\n         */\n        this.isForceUpdate = false;\n    }\n    // endregion\n    // region Properties: Public\n    get columnValues() {\n        return {\n            items: classToPlain(this._columnValues),\n        };\n    }\n    // endregion\n    // region Methods: Public\n    addColumn(columnName, columnValue, dataValueType) {\n        ɵValidationUtilities.checkArgumentEmpty('columnName', columnName);\n        this._columnValues.set(columnName, new ɵParameterExpression({ value: columnValue, dataValueType }));\n    }\n}\n__decorate([\n    Expose(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [])\n], ɵUpdateQuery.prototype, \"columnValues\", null);\n\n/**\n * @public\n */\nclass ɵSelectLocalizationQuery extends ɵEntitySchemaQuery {\n}\n\n/**\n * @public\n * @class ɵBaseRequest\n * @describe Base definition of request.\n * @template TEvent\n */\nclass ɵBaseRequest {\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * @public\n */\nvar ɵModelParameterType;\n(function (ɵModelParameterType) {\n    ɵModelParameterType[\"PrimaryColumnValue\"] = \"primaryColumnValue\";\n    ɵModelParameterType[\"Filter\"] = \"filter\";\n    ɵModelParameterType[\"PrimaryDisplayValueFilter\"] = \"primaryDisplayValueFilter\";\n    ɵModelParameterType[\"Empty\"] = \"empty\";\n    ɵModelParameterType[\"Never\"] = \"never\";\n})(ɵModelParameterType || (ɵModelParameterType = {}));\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LookupMode, ɵAggregationEvalType, ɵAggregationFunction, ɵAggregationFunctionColumn, ɵAggregationFunctionExpression, ɵAggregationSubQueryColumn, ɵAggregationSubQueryExpression, ɵAggregationType, ɵArgumentEmptyException, ɵArgumentFunctionExpression, ɵArgumentOutOfRangeException, ɵArithmeticExpression, ɵArithmeticOperation, ɵArithmeticQueryColumn, ɵBaseExpression, ɵBaseExpressionParser, ɵBaseFilter, ɵBaseFilterParser, ɵBaseFilterableQuery, ɵBaseQuery, ɵBaseQueryColumn, ɵBaseRequest, ɵBetweenFilter, ɵColumnExpression, ɵCompareFilter, ɵComparisonType, ɵDEFAULT_COLUMN_PLAIN_OBJ, ɵDEFAULT_FILTER_PLAIN_OBJ, ɵDataSchemaAttributeType, ɵDataSchemaAttributeUsageType, ɵDataSchemaType, ɵDataSourceScope, ɵDataValueType, ɵDatePartFunctionColumn, ɵDatePartFunctionExpression, ɵDatePartType, ɵDefaultValueSource, ɵDeleteQuery, ɵEMPTY_GUID, ɵEXPRESSION_TYPE_MOCK, ɵEntityQueryColumn, ɵEntitySchemaQuery, ɵExistsFilter, ɵExpressionMock, ɵExpressionParser, ɵExpressionResolver, ɵExpressionType, ɵFilterGroup, ɵFilterMock, ɵFilterParser, ɵFilterResolver, ɵFilterType, ɵFunctionExpression, ɵFunctionType, ɵInFilter, ɵInsertQuery, ɵIsNullFilter, ɵItemNotFoundException, ɵLengthFunctionColumn, ɵLengthFunctionExpression, ɵLogicalOperatorType, ɵMacrosFunctionColumn, ɵMacrosFunctionExpression, ɵModelParameterType, ɵNextHandlerAlreadySpecifiedException, ɵOrderDirection, ɵParameterExpression, ɵParameterQueryColumn, ɵQueryMacrosType, ɵQueryOperationType, ɵSelectLocalizationQuery, ɵSingleFilter, ɵSubQueryColumn, ɵSubQueryExpression, ɵUpdateQuery, ɵValidationUtilities, ɵWindowFunctionColumn, ɵWindowFunctionExpression, ɵencodeDate, ɵgenerateGuid, ɵgetColumnPlainObj, ɵgetFilterPlainObj, ɵisEmptyGuid, ɵisGuid, ɵparserMock, ɵtoLocalISOString };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}