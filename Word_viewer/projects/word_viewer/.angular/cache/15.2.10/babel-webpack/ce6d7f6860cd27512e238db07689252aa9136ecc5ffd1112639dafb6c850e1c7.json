{"ast":null,"code":"\"use strict\";\n\nmodule.exports = function (Promise) {\n  function returner() {\n    return this.value;\n  }\n  function thrower() {\n    throw this.reason;\n  }\n  Promise.prototype[\"return\"] = Promise.prototype.thenReturn = function (value) {\n    if (value instanceof Promise) value.suppressUnhandledRejections();\n    return this._then(returner, undefined, undefined, {\n      value: value\n    }, undefined);\n  };\n  Promise.prototype[\"throw\"] = Promise.prototype.thenThrow = function (reason) {\n    return this._then(thrower, undefined, undefined, {\n      reason: reason\n    }, undefined);\n  };\n  Promise.prototype.catchThrow = function (reason) {\n    if (arguments.length <= 1) {\n      return this._then(undefined, thrower, undefined, {\n        reason: reason\n      }, undefined);\n    } else {\n      var _reason = arguments[1];\n      var handler = function () {\n        throw _reason;\n      };\n      return this.caught(reason, handler);\n    }\n  };\n  Promise.prototype.catchReturn = function (value) {\n    if (arguments.length <= 1) {\n      if (value instanceof Promise) value.suppressUnhandledRejections();\n      return this._then(undefined, returner, undefined, {\n        value: value\n      }, undefined);\n    } else {\n      var _value = arguments[1];\n      if (_value instanceof Promise) _value.suppressUnhandledRejections();\n      var handler = function () {\n        return _value;\n      };\n      return this.caught(value, handler);\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}