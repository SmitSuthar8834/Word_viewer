{"ast":null,"code":"\"use strict\";\n\nmodule.exports = function (Promise, INTERNAL, tryConvertToPromise, apiRejection) {\n  var util = require(\"./util\");\n  var raceLater = function (promise) {\n    return promise.then(function (array) {\n      return race(array, promise);\n    });\n  };\n  function race(promises, parent) {\n    var maybePromise = tryConvertToPromise(promises);\n    if (maybePromise instanceof Promise) {\n      return raceLater(maybePromise);\n    } else {\n      promises = util.asArray(promises);\n      if (promises === null) return apiRejection(\"expecting an array or an iterable object but got \" + util.classString(promises));\n    }\n    var ret = new Promise(INTERNAL);\n    if (parent !== undefined) {\n      ret._propagateFrom(parent, 3);\n    }\n    var fulfill = ret._fulfill;\n    var reject = ret._reject;\n    for (var i = 0, len = promises.length; i < len; ++i) {\n      var val = promises[i];\n      if (val === undefined && !(i in promises)) {\n        continue;\n      }\n      Promise.cast(val)._then(fulfill, reject, undefined, ret, null);\n    }\n    return ret;\n  }\n  Promise.race = function (promises) {\n    return race(promises, undefined);\n  };\n  Promise.prototype.race = function () {\n    return race(this, undefined);\n  };\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}