{"ast":null,"code":"\"use strict\";\n\nvar util = require(\"./util\");\nvar schedule;\nvar noAsyncScheduler = function () {\n  throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n};\nvar NativePromise = util.getNativePromise();\nif (util.isNode && typeof MutationObserver === \"undefined\") {\n  var GlobalSetImmediate = global.setImmediate;\n  var ProcessNextTick = process.nextTick;\n  schedule = util.isRecentNode ? function (fn) {\n    GlobalSetImmediate.call(global, fn);\n  } : function (fn) {\n    ProcessNextTick.call(process, fn);\n  };\n} else if (typeof NativePromise === \"function\" && typeof NativePromise.resolve === \"function\") {\n  var nativePromise = NativePromise.resolve();\n  schedule = function (fn) {\n    nativePromise.then(fn);\n  };\n} else if (typeof MutationObserver !== \"undefined\" && !(typeof window !== \"undefined\" && window.navigator && (window.navigator.standalone || window.cordova))) {\n  schedule = function () {\n    var div = document.createElement(\"div\");\n    var opts = {\n      attributes: true\n    };\n    var toggleScheduled = false;\n    var div2 = document.createElement(\"div\");\n    var o2 = new MutationObserver(function () {\n      div.classList.toggle(\"foo\");\n      toggleScheduled = false;\n    });\n    o2.observe(div2, opts);\n    var scheduleToggle = function () {\n      if (toggleScheduled) return;\n      toggleScheduled = true;\n      div2.classList.toggle(\"foo\");\n    };\n    return function schedule(fn) {\n      var o = new MutationObserver(function () {\n        o.disconnect();\n        fn();\n      });\n      o.observe(div, opts);\n      scheduleToggle();\n    };\n  }();\n} else if (typeof setImmediate !== \"undefined\") {\n  schedule = function (fn) {\n    setImmediate(fn);\n  };\n} else if (typeof setTimeout !== \"undefined\") {\n  schedule = function (fn) {\n    setTimeout(fn, 0);\n  };\n} else {\n  schedule = noAsyncScheduler;\n}\nmodule.exports = schedule;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}