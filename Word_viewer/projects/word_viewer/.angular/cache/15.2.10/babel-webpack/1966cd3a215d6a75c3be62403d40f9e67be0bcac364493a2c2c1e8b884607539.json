{"ast":null,"code":"var _ = require(\"underscore\");\nvar xmlbuilder = require(\"xmlbuilder\");\nexports.writeString = writeString;\nfunction writeString(root, namespaces) {\n  var uriToPrefix = _.invert(namespaces);\n  var nodeWriters = {\n    element: writeElement,\n    text: writeTextNode\n  };\n  function writeNode(builder, node) {\n    return nodeWriters[node.type](builder, node);\n  }\n  function writeElement(builder, element) {\n    var elementBuilder = builder.element(mapElementName(element.name), element.attributes);\n    element.children.forEach(function (child) {\n      writeNode(elementBuilder, child);\n    });\n  }\n  function mapElementName(name) {\n    var longFormMatch = /^\\{(.*)\\}(.*)$/.exec(name);\n    if (longFormMatch) {\n      var prefix = uriToPrefix[longFormMatch[1]];\n      return prefix + (prefix === \"\" ? \"\" : \":\") + longFormMatch[2];\n    } else {\n      return name;\n    }\n  }\n  function writeDocument(root) {\n    var builder = xmlbuilder.create(mapElementName(root.name), {\n      version: '1.0',\n      encoding: 'UTF-8',\n      standalone: true\n    });\n    _.forEach(namespaces, function (uri, prefix) {\n      var key = \"xmlns\" + (prefix === \"\" ? \"\" : \":\" + prefix);\n      builder.attribute(key, uri);\n    });\n    root.children.forEach(function (child) {\n      writeNode(builder, child);\n    });\n    return builder.end();\n  }\n  return writeDocument(root);\n}\nfunction writeTextNode(builder, node) {\n  builder.text(node.value);\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}