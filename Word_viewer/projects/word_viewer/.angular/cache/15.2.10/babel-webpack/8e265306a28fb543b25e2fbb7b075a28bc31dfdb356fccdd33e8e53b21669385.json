{"ast":null,"code":"\"use strict\";\n\nvar es5 = require(\"./es5\");\nvar canEvaluate = typeof navigator == \"undefined\";\nvar errorObj = {\n  e: {}\n};\nvar tryCatchTarget;\nvar globalObject = typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : this !== undefined ? this : null;\nfunction tryCatcher() {\n  try {\n    var target = tryCatchTarget;\n    tryCatchTarget = null;\n    return target.apply(this, arguments);\n  } catch (e) {\n    errorObj.e = e;\n    return errorObj;\n  }\n}\nfunction tryCatch(fn) {\n  tryCatchTarget = fn;\n  return tryCatcher;\n}\nvar inherits = function (Child, Parent) {\n  var hasProp = {}.hasOwnProperty;\n  function T() {\n    this.constructor = Child;\n    this.constructor$ = Parent;\n    for (var propertyName in Parent.prototype) {\n      if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== \"$\") {\n        this[propertyName + \"$\"] = Parent.prototype[propertyName];\n      }\n    }\n  }\n  T.prototype = Parent.prototype;\n  Child.prototype = new T();\n  return Child.prototype;\n};\nfunction isPrimitive(val) {\n  return val == null || val === true || val === false || typeof val === \"string\" || typeof val === \"number\";\n}\nfunction isObject(value) {\n  return typeof value === \"function\" || typeof value === \"object\" && value !== null;\n}\nfunction maybeWrapAsError(maybeError) {\n  if (!isPrimitive(maybeError)) return maybeError;\n  return new Error(safeToString(maybeError));\n}\nfunction withAppended(target, appendee) {\n  var len = target.length;\n  var ret = new Array(len + 1);\n  var i;\n  for (i = 0; i < len; ++i) {\n    ret[i] = target[i];\n  }\n  ret[i] = appendee;\n  return ret;\n}\nfunction getDataPropertyOrDefault(obj, key, defaultValue) {\n  if (es5.isES5) {\n    var desc = Object.getOwnPropertyDescriptor(obj, key);\n    if (desc != null) {\n      return desc.get == null && desc.set == null ? desc.value : defaultValue;\n    }\n  } else {\n    return {}.hasOwnProperty.call(obj, key) ? obj[key] : undefined;\n  }\n}\nfunction notEnumerableProp(obj, name, value) {\n  if (isPrimitive(obj)) return obj;\n  var descriptor = {\n    value: value,\n    configurable: true,\n    enumerable: false,\n    writable: true\n  };\n  es5.defineProperty(obj, name, descriptor);\n  return obj;\n}\nfunction thrower(r) {\n  throw r;\n}\nvar inheritedDataKeys = function () {\n  var excludedPrototypes = [Array.prototype, Object.prototype, Function.prototype];\n  var isExcludedProto = function (val) {\n    for (var i = 0; i < excludedPrototypes.length; ++i) {\n      if (excludedPrototypes[i] === val) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (es5.isES5) {\n    var getKeys = Object.getOwnPropertyNames;\n    return function (obj) {\n      var ret = [];\n      var visitedKeys = Object.create(null);\n      while (obj != null && !isExcludedProto(obj)) {\n        var keys;\n        try {\n          keys = getKeys(obj);\n        } catch (e) {\n          return ret;\n        }\n        for (var i = 0; i < keys.length; ++i) {\n          var key = keys[i];\n          if (visitedKeys[key]) continue;\n          visitedKeys[key] = true;\n          var desc = Object.getOwnPropertyDescriptor(obj, key);\n          if (desc != null && desc.get == null && desc.set == null) {\n            ret.push(key);\n          }\n        }\n        obj = es5.getPrototypeOf(obj);\n      }\n      return ret;\n    };\n  } else {\n    var hasProp = {}.hasOwnProperty;\n    return function (obj) {\n      if (isExcludedProto(obj)) return [];\n      var ret = [];\n\n      /*jshint forin:false */\n      enumeration: for (var key in obj) {\n        if (hasProp.call(obj, key)) {\n          ret.push(key);\n        } else {\n          for (var i = 0; i < excludedPrototypes.length; ++i) {\n            if (hasProp.call(excludedPrototypes[i], key)) {\n              continue enumeration;\n            }\n          }\n          ret.push(key);\n        }\n      }\n      return ret;\n    };\n  }\n}();\nvar thisAssignmentPattern = /this\\s*\\.\\s*\\S+\\s*=/;\nfunction isClass(fn) {\n  try {\n    if (typeof fn === \"function\") {\n      var keys = es5.names(fn.prototype);\n      var hasMethods = es5.isES5 && keys.length > 1;\n      var hasMethodsOtherThanConstructor = keys.length > 0 && !(keys.length === 1 && keys[0] === \"constructor\");\n      var hasThisAssignmentAndStaticMethods = thisAssignmentPattern.test(fn + \"\") && es5.names(fn).length > 0;\n      if (hasMethods || hasMethodsOtherThanConstructor || hasThisAssignmentAndStaticMethods) {\n        return true;\n      }\n    }\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\nfunction toFastProperties(obj) {\n  /*jshint -W027,-W055,-W031*/\n  function FakeConstructor() {}\n  FakeConstructor.prototype = obj;\n  var l = 8;\n  while (l--) new FakeConstructor();\n  return obj;\n  eval(obj);\n}\nvar rident = /^[a-z$_][a-z$_0-9]*$/i;\nfunction isIdentifier(str) {\n  return rident.test(str);\n}\nfunction filledRange(count, prefix, suffix) {\n  var ret = new Array(count);\n  for (var i = 0; i < count; ++i) {\n    ret[i] = prefix + i + suffix;\n  }\n  return ret;\n}\nfunction safeToString(obj) {\n  try {\n    return obj + \"\";\n  } catch (e) {\n    return \"[no string representation]\";\n  }\n}\nfunction isError(obj) {\n  return obj !== null && typeof obj === \"object\" && typeof obj.message === \"string\" && typeof obj.name === \"string\";\n}\nfunction markAsOriginatingFromRejection(e) {\n  try {\n    notEnumerableProp(e, \"isOperational\", true);\n  } catch (ignore) {}\n}\nfunction originatesFromRejection(e) {\n  if (e == null) return false;\n  return e instanceof Error[\"__BluebirdErrorTypes__\"].OperationalError || e[\"isOperational\"] === true;\n}\nfunction canAttachTrace(obj) {\n  return isError(obj) && es5.propertyIsWritable(obj, \"stack\");\n}\nvar ensureErrorObject = function () {\n  if (!(\"stack\" in new Error())) {\n    return function (value) {\n      if (canAttachTrace(value)) return value;\n      try {\n        throw new Error(safeToString(value));\n      } catch (err) {\n        return err;\n      }\n    };\n  } else {\n    return function (value) {\n      if (canAttachTrace(value)) return value;\n      return new Error(safeToString(value));\n    };\n  }\n}();\nfunction classString(obj) {\n  return {}.toString.call(obj);\n}\nfunction copyDescriptors(from, to, filter) {\n  var keys = es5.names(from);\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n    if (filter(key)) {\n      try {\n        es5.defineProperty(to, key, es5.getDescriptor(from, key));\n      } catch (ignore) {}\n    }\n  }\n}\nvar asArray = function (v) {\n  if (es5.isArray(v)) {\n    return v;\n  }\n  return null;\n};\nif (typeof Symbol !== \"undefined\" && Symbol.iterator) {\n  var ArrayFrom = typeof Array.from === \"function\" ? function (v) {\n    return Array.from(v);\n  } : function (v) {\n    var ret = [];\n    var it = v[Symbol.iterator]();\n    var itResult;\n    while (!(itResult = it.next()).done) {\n      ret.push(itResult.value);\n    }\n    return ret;\n  };\n  asArray = function (v) {\n    if (es5.isArray(v)) {\n      return v;\n    } else if (v != null && typeof v[Symbol.iterator] === \"function\") {\n      return ArrayFrom(v);\n    }\n    return null;\n  };\n}\nvar isNode = typeof process !== \"undefined\" && classString(process).toLowerCase() === \"[object process]\";\nvar hasEnvVariables = typeof process !== \"undefined\" && typeof process.env !== \"undefined\";\nfunction env(key) {\n  return hasEnvVariables ? process.env[key] : undefined;\n}\nfunction getNativePromise() {\n  if (typeof Promise === \"function\") {\n    try {\n      var promise = new Promise(function () {});\n      if ({}.toString.call(promise) === \"[object Promise]\") {\n        return Promise;\n      }\n    } catch (e) {}\n  }\n}\nfunction domainBind(self, cb) {\n  return self.bind(cb);\n}\nvar ret = {\n  isClass: isClass,\n  isIdentifier: isIdentifier,\n  inheritedDataKeys: inheritedDataKeys,\n  getDataPropertyOrDefault: getDataPropertyOrDefault,\n  thrower: thrower,\n  isArray: es5.isArray,\n  asArray: asArray,\n  notEnumerableProp: notEnumerableProp,\n  isPrimitive: isPrimitive,\n  isObject: isObject,\n  isError: isError,\n  canEvaluate: canEvaluate,\n  errorObj: errorObj,\n  tryCatch: tryCatch,\n  inherits: inherits,\n  withAppended: withAppended,\n  maybeWrapAsError: maybeWrapAsError,\n  toFastProperties: toFastProperties,\n  filledRange: filledRange,\n  toString: safeToString,\n  canAttachTrace: canAttachTrace,\n  ensureErrorObject: ensureErrorObject,\n  originatesFromRejection: originatesFromRejection,\n  markAsOriginatingFromRejection: markAsOriginatingFromRejection,\n  classString: classString,\n  copyDescriptors: copyDescriptors,\n  hasDevTools: typeof chrome !== \"undefined\" && chrome && typeof chrome.loadTimes === \"function\",\n  isNode: isNode,\n  hasEnvVariables: hasEnvVariables,\n  env: env,\n  global: globalObject,\n  getNativePromise: getNativePromise,\n  domainBind: domainBind\n};\nret.isRecentNode = ret.isNode && function () {\n  var version = process.versions.node.split(\".\").map(Number);\n  return version[0] === 0 && version[1] > 10 || version[0] > 0;\n}();\nif (ret.isNode) ret.toFastProperties(process);\ntry {\n  throw new Error();\n} catch (e) {\n  ret.lastLineError = e;\n}\nmodule.exports = ret;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}