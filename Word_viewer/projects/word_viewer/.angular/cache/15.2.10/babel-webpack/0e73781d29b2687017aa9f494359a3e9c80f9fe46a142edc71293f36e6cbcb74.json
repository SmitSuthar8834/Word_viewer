{"ast":null,"code":"var _ = require(\"underscore\");\nvar ast = require(\"./ast\");\nfunction simplify(nodes) {\n  return collapse(removeEmpty(nodes));\n}\nfunction collapse(nodes) {\n  var children = [];\n  nodes.map(collapseNode).forEach(function (child) {\n    appendChild(children, child);\n  });\n  return children;\n}\nfunction collapseNode(node) {\n  return collapsers[node.type](node);\n}\nvar collapsers = {\n  element: collapseElement,\n  text: identity,\n  forceWrite: identity\n};\nfunction collapseElement(node) {\n  return ast.elementWithTag(node.tag, collapse(node.children));\n}\nfunction identity(value) {\n  return value;\n}\nfunction appendChild(children, child) {\n  var lastChild = children[children.length - 1];\n  if (child.type === \"element\" && !child.tag.fresh && lastChild && lastChild.type === \"element\" && child.tag.matchesElement(lastChild.tag)) {\n    if (child.tag.separator) {\n      appendChild(lastChild.children, ast.text(child.tag.separator));\n    }\n    child.children.forEach(function (grandChild) {\n      // Mutation is fine since simplifying elements create a copy of the children.\n      appendChild(lastChild.children, grandChild);\n    });\n  } else {\n    children.push(child);\n  }\n}\nfunction removeEmpty(nodes) {\n  return flatMap(nodes, function (node) {\n    return emptiers[node.type](node);\n  });\n}\nfunction flatMap(values, func) {\n  return _.flatten(_.map(values, func), true);\n}\nvar emptiers = {\n  element: elementEmptier,\n  text: textEmptier,\n  forceWrite: neverEmpty\n};\nfunction neverEmpty(node) {\n  return [node];\n}\nfunction elementEmptier(element) {\n  var children = removeEmpty(element.children);\n  if (children.length === 0 && !ast.isVoidElement(element)) {\n    return [];\n  } else {\n    return [ast.elementWithTag(element.tag, children)];\n  }\n}\nfunction textEmptier(node) {\n  if (node.value.length === 0) {\n    return [];\n  } else {\n    return [node];\n  }\n}\nmodule.exports = simplify;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}