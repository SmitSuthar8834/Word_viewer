{"ast":null,"code":"module.exports = {\n  failure: function (errors, remaining) {\n    if (errors.length < 1) {\n      throw new Error(\"Failure must have errors\");\n    }\n    return new Result({\n      status: \"failure\",\n      remaining: remaining,\n      errors: errors\n    });\n  },\n  error: function (errors, remaining) {\n    if (errors.length < 1) {\n      throw new Error(\"Failure must have errors\");\n    }\n    return new Result({\n      status: \"error\",\n      remaining: remaining,\n      errors: errors\n    });\n  },\n  success: function (value, remaining, source) {\n    return new Result({\n      status: \"success\",\n      value: value,\n      source: source,\n      remaining: remaining,\n      errors: []\n    });\n  },\n  cut: function (remaining) {\n    return new Result({\n      status: \"cut\",\n      remaining: remaining,\n      errors: []\n    });\n  }\n};\nvar Result = function (options) {\n  this._value = options.value;\n  this._status = options.status;\n  this._hasValue = options.value !== undefined;\n  this._remaining = options.remaining;\n  this._source = options.source;\n  this._errors = options.errors;\n};\nResult.prototype.map = function (func) {\n  if (this._hasValue) {\n    return new Result({\n      value: func(this._value, this._source),\n      status: this._status,\n      remaining: this._remaining,\n      source: this._source,\n      errors: this._errors\n    });\n  } else {\n    return this;\n  }\n};\nResult.prototype.changeRemaining = function (remaining) {\n  return new Result({\n    value: this._value,\n    status: this._status,\n    remaining: remaining,\n    source: this._source,\n    errors: this._errors\n  });\n};\nResult.prototype.isSuccess = function () {\n  return this._status === \"success\" || this._status === \"cut\";\n};\nResult.prototype.isFailure = function () {\n  return this._status === \"failure\";\n};\nResult.prototype.isError = function () {\n  return this._status === \"error\";\n};\nResult.prototype.isCut = function () {\n  return this._status === \"cut\";\n};\nResult.prototype.value = function () {\n  return this._value;\n};\nResult.prototype.remaining = function () {\n  return this._remaining;\n};\nResult.prototype.source = function () {\n  return this._source;\n};\nResult.prototype.errors = function () {\n  return this._errors;\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}